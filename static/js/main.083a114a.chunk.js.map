{"version":3,"sources":["components/Video.tsx","components/FilePicker.tsx","utilities/data.ts","utilities/area.ts","utilities/types.ts","components/ToolSelector.tsx","utilities/shapes.ts","components/Canvas.tsx","components/Inspector.tsx","components/IOManager.tsx","components/OptionSelector.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Video","source","setVideo","setSlider","videoRef","value","useRef","useEffect","current","src","loader","setTimeout","duration","setVideoPos","percentage","currentTime","className","type","min","max","onChange","ev","target","ref","hidden","FilePicker","setFile","accept_types","Button","variant","color","onClick","click","accept","_","files","item","order","s","lu","sort","a","b","slice","i_lu","findIndex","p","ordered","nextP","length","prevP","i","push","Tool","Area","quad","id","shape","isCarWalkable","direction","left","up","right","down","isParking","stop","isSelected","this","newId","points","map","x","Math","round","ru","rb","lb","carWalk","dir","parking","ad","Object","values","counter","ToolSelector","onSelect","onAdd","onSetDirections","ADD","SELECT","SET_DIRECTIONS","isPointInShape","res","edge","distancePointToPoint","hypot","projectPointToSegment","l","vec1","vec2","lineVec","vecSub","lineLen","lineVecNormalized","vecScale","pointProjLen","vecSum","v1","v2","v","n","vecFromCoordinateSystem","vecToCoordinateSystem","y","vecRotate","upRotated","vecLen","centroidOfShape","reduce","alpha","style1","width","stroke","fill","arrow","selected","style2","Canvas","img","quads","newQuad","tool","setSelected","updateQuads","deleteQuads","slider","height","options","ids","arrows","useState","setPoints","dragging","setDragging","modifier","setModifier","oldMouse","setOldMouse","dragIndexes","setDragIndexes","mouse","setMouse","canvasH","canvasW","canvas","context","getContext","Error","drawImage","e","fillStyle","fillRect","drawArea","close","path","snapToShapes","lineWidth","strokeStyle","drawPath","pos","shapes","flat","dist","point","d","minDist","newPoint","p1","p2","proj","canvasCtx","f_drawPoints","moveTo","beginPath","lineTo","closePath","drawPoint","tmpFill","tmpStroke","arc","area","movement","style","some","filter","center","tmp","lw","ss","fs","drawText","toString","directions","diagInPerspective","ratioX","ratioY","lenUp","lenRight","ratio","upArrow","dirVecs","dirVec","translation","tmpWidth","drawArrows","drawParking","text","size","font","ta","textAlign","tb","textBaseline","fillText","handleSelect","find","indexes","distance","res_d","res_i","res_is","j","findPointInShapeIndex","stopDragging","selectedAreas","updated","onMouseDown","updatedShape","newArea","addPoint","targetArea","q","sectors","selectedDir","entries","k","handleSetDirections","onMouseUp","onMouseLeave","onMouseMove","clientWidth","topLeft","offsetLeft","offsetTop","pageX","pageY","ctrlKey","Inspector","update","selectById","deleteById","inspected","setInspected","updateInspected","changed","unchanged","renderAD","renderedPoints","flatMap","key","val","renderedDirection","checked","stopPropagation","Delete","t","fromAreaDictionary","Check","toAreaDictionary","Clear","list","pending","fields","IOManager","load","dlRef","loadRef","filename","replace","formatData","formatted","formatArea","join","concat","f","console","error","csv","rows","split","strings","r","dictionaries","vals","newAreas","outStr","blob","Blob","dlUrl","URL","createObjectURL","setAttribute","revokeObjectURL","download","OptionSelector","updateOptions","ArrowForward","App","file","videoSrc","setVideoSrc","video","quadList","setQuadList","setTool","setOptions","filteredList","every","index","notUpdated","videoWidth","undefined","videoHeight","name","arr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","primary","main","blue","secondary","red","typography","button","fontWeight","overrides","MuiButton","outlined","border","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.083a114a.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nimport './Video.css';\r\n\r\ntype VideoProps = {\r\n    source: string;\r\n    setVideo: (video: HTMLVideoElement) => void;\r\n    setSlider: (value: number | undefined) => void;\r\n    value: number;\r\n};\r\n\r\nexport default function Video({ source, setVideo, setSlider, value }: VideoProps) {\r\n\r\n    const videoRef = useRef<HTMLVideoElement>(null);\r\n\r\n    useEffect(() => {\r\n        if (videoRef.current && source) {\r\n            videoRef.current.src = source;\r\n            setVideo(videoRef.current);\r\n\r\n            const loader = () => {\r\n                setTimeout(() => {\r\n                    if (videoRef.current?.duration) {\r\n                        setVideoPos(1);\r\n                    } else loader();\r\n                }, 10);\r\n            };\r\n\r\n            loader();\r\n        }\r\n    }, [source]);\r\n\r\n    const setVideoPos = (percentage: number) => {\r\n        if (!videoRef.current || !source || !percentage) {\r\n            return;\r\n        }\r\n        // force range 0 - 100\r\n        const value = percentage < 1 ? 1 : percentage > 100 ? 100 : percentage;\r\n        videoRef.current.currentTime = value / 100 * videoRef.current.duration;\r\n        setSlider(value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"VideoCanvas\">\r\n            <input className=\"slider\"\r\n                type=\"range\"\r\n                min=\"1\"\r\n                max=\"100\"\r\n                onChange={ev => { setVideoPos(+ev.target.value); }}\r\n            />\r\n            <video ref={videoRef} hidden />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport './FilePicker.css';\r\n\r\ntype FilePickerProps = {\r\n    setFile: (f: File | null) => void,\r\n    accept_types?: string;\r\n};\r\n\r\nfunction FilePicker({ setFile, accept_types = \"\" }: FilePickerProps) {\r\n\r\n    const ref = useRef<HTMLInputElement>(null);\r\n\r\n    return (\r\n        <div className=\"FilePicker\">\r\n            <Button variant=\"contained\" color=\"primary\"\r\n                onClick={() => ref.current?.click()}\r\n            >\r\n                Select Video\r\n            </Button>\r\n            <input hidden\r\n                ref={ref}\r\n                type=\"file\"\r\n                accept={accept_types}\r\n                onChange={_ => setFile(ref.current?.files?.item(0) ?? null)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FilePicker;","import { Shape } from './types';\r\n\r\nexport function order(s: Shape) {\r\n    const X = 0;\r\n    const Y = 1;\r\n\r\n    let lu = [...s].sort((a, b) => a[Y] < b[Y] ? -1 : 1).slice(0, 2).sort((a, b) => a[X] < b[X] ? -1 : 1)[0];\r\n    let i_lu = s.findIndex(p => p === lu);\r\n\r\n    const ordered: Shape = [];\r\n    const nextP = s[(i_lu + 1) % s.length];\r\n    const prevP = s[(i_lu + s.length - 1) % s.length];\r\n\r\n    if (nextP[Y] < prevP[Y]) {\r\n        for (let i = 0; i < s.length; i++) {\r\n            const p = s[(i_lu + i) % s.length];\r\n            ordered.push([...p]);\r\n        }\r\n    } else {\r\n        for (let i = 0; i < s.length; i++) {\r\n            const p = s[(i_lu + s.length - i) % s.length];\r\n            ordered.push([...p]);\r\n        }\r\n    }\r\n\r\n    return ordered; // force copy;\r\n}","import { order } from './data';\r\nimport { dot, vecSum } from './shapes';\r\nimport { AreaDictionary, IIndexable, Vector, Shape } from './types';\r\n\r\nexport class Area {\r\n    private static counter = 0;\r\n\r\n    readonly id: number;\r\n    public shape: Shape;\r\n    public isCarWalkable = true;\r\n    public direction = {\r\n        left: true,\r\n        up: true,\r\n        right: true,\r\n        down: true,\r\n    };\r\n    public isParking = false;\r\n    public stop: string | null = null;\r\n    public isSelected = false;\r\n\r\n    constructor(quad?: Shape) {\r\n        this.id = Area.newId();\r\n        this.shape = quad ?? [[-1, -1], [-1, -1], [-1, -1], [-1, -1]];\r\n    }\r\n\r\n    static newId() {\r\n        return Area.counter++;\r\n    }\r\n\r\n    toAreaDictionary(): AreaDictionary {\r\n        const points = order(this.shape);\r\n        const dir = this.direction ?? [0, 0];\r\n        return {\r\n            id: this.id,\r\n            points: {\r\n                lu: points[0].map(x => Math.round(x)) as Vector,\r\n                ru: points[1].map(x => Math.round(x)) as Vector,\r\n                rb: points[2].map(x => Math.round(x)) as Vector,\r\n                lb: points[3].map(x => Math.round(x)) as Vector,\r\n            },\r\n            carWalk: this.isCarWalkable,\r\n            dir: { ...this.direction },\r\n            parking: this.isParking,\r\n            stop: `${this.stop ?? \"None\"}`,\r\n            ref: this,\r\n        };\r\n    }\r\n\r\n    fromAreaDictionary(ad: AreaDictionary) {\r\n        this.shape = Object.values(ad.points);\r\n        this.isCarWalkable = ad.carWalk;\r\n        const dirs = {\r\n            left: [-1, 0],\r\n            right: [1, 0],\r\n            up: [0, 1],\r\n            down: [0, -1],\r\n        };\r\n        this.direction = { ...ad.dir };\r\n\r\n        this.isParking = ad.parking;\r\n        this.stop = ad.stop;\r\n        ad.ref = this;\r\n        return this;\r\n    }\r\n}","import { Area } from \"./area\";\r\n\r\nexport type Vector = [number, number];\r\nexport type Shape = Vector[];\r\nexport enum Tool { ADD, SELECT, SET_DIRECTIONS };\r\n\r\nexport type DirKeys = \"left\" | \"right\" | \"up\" | \"down\";\r\n\r\nexport type AreaDictionary = {\r\n    id: number;\r\n    points: {\r\n        lu: Vector;\r\n        ru: Vector;\r\n        rb: Vector;\r\n        lb: Vector;\r\n    };\r\n    carWalk: boolean;\r\n    dir: {\r\n        left: boolean;\r\n        up: boolean;\r\n        right: boolean;\r\n        down: boolean;\r\n    };\r\n    parking: boolean;\r\n    stop: string;\r\n    changed?: boolean;\r\n    ref?: Area;\r\n};\r\n\r\nexport interface IIndexable<T = any> { [key: string]: T; }\r\n\r\nexport type Options = {\r\n    ids: boolean;\r\n    arrows: boolean;\r\n};\r\n\r\nexport { Area } from \"./area\";","import React from 'react';\r\nimport { Tool } from '../utilities/types';\r\nimport { Button } from '@material-ui/core';\r\nimport './ToolSelector.scss';\r\n\r\ntype ToolSelectorProps = {\r\n    value?: Tool;\r\n    onSelect?: () => void;\r\n    onAdd?: () => void;\r\n    onSetDirections?: () => void;\r\n};\r\n\r\nexport default function ToolSelector({ value, onSelect, onAdd, onSetDirections }: ToolSelectorProps) {\r\n    return (\r\n        <div className=\"ToolSelector\">\r\n            {onAdd ? <Button\r\n                variant={value === Tool.ADD ? \"contained\" : \"outlined\"}\r\n                color=\"secondary\"\r\n                onClick={onAdd}\r\n            >\r\n                ADD\r\n            </Button>\r\n                : \"\"}\r\n\r\n            {onSelect ? <Button\r\n                variant={value === Tool.SELECT ? \"contained\" : \"outlined\"}\r\n                color=\"secondary\"\r\n                onClick={onSelect}\r\n            >\r\n                SELECT\r\n            </Button>\r\n                : \"\"}\r\n            {onSetDirections ? <Button\r\n                variant={value === Tool.SET_DIRECTIONS ? \"contained\" : \"outlined\"}\r\n                color=\"secondary\"\r\n                onClick={onSetDirections}\r\n            >\r\n                DIRECTIONS\r\n            </Button>\r\n                : \"\"}\r\n        </div>\r\n    );\r\n}","import { Vector, Shape } from './types';\r\n\r\nexport function findPointInShapeIndex(target: Vector, shapes: Shape[]) {\r\n    for (let i = 0; i < shapes.length; i++) {\r\n        if (isPointInShape(target, shapes[i])) return i;\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function isPointInShape(p: Vector, s: Shape) {\r\n    let res = false;\r\n    const X = 0;\r\n    const Y = 1;\r\n    for (let i = 0; i < s.length; i++) {\r\n        // https://www.eecs.umich.edu/courses/eecs380/HANDOUTS/PROJ2/InsidePoly.html\r\n        const edge = [s[i], s[(i + 1) % s.length]];\r\n        if (\r\n            (   // is the point in the Y range of the edge?\r\n                edge[0][Y] <= p[Y] && edge[1][Y] >= p[Y] ||\r\n                edge[1][Y] <= p[Y] && edge[0][Y] >= p[Y]\r\n            )\r\n            &&\r\n            (   // is our point to the left the line that our edge sits on at Y = point[Y]?\r\n                p[X] < (edge[0][X] - edge[1][X]) * (p[Y] - edge[1][Y]) / (edge[0][Y] - edge[1][Y]) + edge[1][X]\r\n            )\r\n        ) {\r\n            res = !res;\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function distancePointToPoint(a: Vector, b: Vector) {\r\n    // Pitagora\r\n    return Math.hypot(a[0] - b[0], a[1] - b[1]);\r\n}\r\n\r\nfunction badProjectPointToSegment(p: Vector, l: [Vector, Vector]) {\r\n    // WHY DID I EVEN BOTHER WITH ALL OF THIS MATH\r\n    const [x, y] = [p[0], p[1]];\r\n    const [x1, y1] = [l[0][0], l[0][1]];\r\n    const [x2, y2] = [l[1][0], l[1][1]];\r\n\r\n    // find m and q of the segment line\r\n    const m = (y1 - y2) / (x1 - x2);\r\n    const q = (x1 * y2 - x2 * y1) / (x1 - x2);\r\n\r\n    // find m and q of the projection line\r\n    const mproj = -1 / m;\r\n    const qproj = y - mproj * x;\r\n\r\n    // solve the system and find the point that sits on both lines\r\n    const xproj = (qproj - q) / (m - mproj);\r\n    const yproj = m * xproj + q;\r\n\r\n    const proj = [xproj, yproj] as Vector;\r\n\r\n    if (\r\n        proj[0] > l[0][0] && proj[0] > l[1][0] || // too far left\r\n        proj[0] < l[0][0] && proj[0] < l[1][0] || // too far right\r\n        proj[1] > l[0][1] && proj[1] > l[1][1] || // too far up\r\n        proj[1] < l[0][1] && proj[1] < l[1][1]    // too far down\r\n    ) {\r\n        return null;\r\n    }\r\n    return proj;\r\n}\r\n\r\nexport function projectPointToSegment(p: Vector, l: [Vector, Vector]): Vector | null {\r\n    // WHY DO I ONLY THINK OF VECTORS IN MY FREE TIME AND NOT WHEN I'M ON THE CLOCK??????\r\n    const lineVec = vecSub(l[1], l[0]);\r\n    const lineLen = distancePointToPoint(l[0], l[1]);\r\n    const lineVecNormalized = vecScale(lineVec, 1 / lineLen);\r\n    const pointProjLen = dot(vecSub(p, l[0]), lineVecNormalized);\r\n    if (pointProjLen < 0 || pointProjLen > lineLen) return null; // proj outside the segment\r\n    const pointProj = vecSum(l[0], vecScale(lineVecNormalized, pointProjLen));\r\n    return pointProj;\r\n}\r\n\r\nexport function dot(vec1: Vector, vec2: Vector) {\r\n    return vec1[0] * vec2[0] + vec1[1] * vec2[1];\r\n}\r\n\r\nexport function vecSum(v1: Vector, v2: Vector): Vector {\r\n    return [v1[0] + v2[0], v1[1] + v2[1]];\r\n}\r\n\r\nexport function vecNegative(v: Vector): Vector {\r\n    return [-v[0], -v[1]];\r\n}\r\n\r\nexport function vecSub(v1: Vector, v2: Vector): Vector {\r\n    return vecSum(v1, vecNegative(v2));\r\n}\r\n\r\nexport function vecScale(v: Vector, n: number): Vector {\r\n    return [v[0] * n, v[1] * n];\r\n}\r\n\r\nexport function vecLen(v: Vector): number {\r\n    return distancePointToPoint([0, 0], v);\r\n}\r\n\r\nexport function vecFromCoordinateSystem(v: Vector, up: Vector, right: Vector): Vector {\r\n    return vecSum(vecScale(right, v[0]), vecScale(up, v[1]));\r\n}\r\n\r\nexport function vecToCoordinateSystem(v: Vector, up: Vector, right: Vector): Vector {\r\n    /* \r\n        x1 = rx * x + ux * y \r\n        y1 = ry * x + uy * y\r\n\r\n        x = (x1 - ux * y) / rx = (y1 - uy * y) / ry => \r\n        x1 * ry - ux * ry * y = y1 * rx - uy * rx * y =>\r\n        y = (x1 * ry - y1 * rx) / (ux * ry - uy * rx)\r\n     */\r\n    const y = (v[0] * right[1] - v[1] * right[0]) / (up[0] * right[1] - up[1] * right[0]);\r\n    const x = (v[0] - up[0] * y) / right[0];\r\n    return [x, y];\r\n}\r\n\r\nexport function vecRotate(v: Vector, upRotated: Vector): Vector {\r\n    const up = vecScale(upRotated, 1 / vecLen(upRotated));\r\n    const right = [up[1], -up[0]] as Vector;\r\n    return vecFromCoordinateSystem(v, up, right);\r\n}\r\n\r\nexport function centroidOfShape(shape: Shape) {\r\n    const sum = shape.reduce((res, v) => vecSum(v, res));\r\n    return vecScale(sum, 1 / shape.length);\r\n}\r\n\r\nexport function dirShapeToShape(s1: Shape, s2: Shape) {\r\n    const center1 = centroidOfShape(s1);\r\n    const center2 = centroidOfShape(s2);\r\n    const lineC1toC2 = vecSub(center2, center1);\r\n    const distance = distancePointToPoint([0, 0], lineC1toC2);\r\n    return vecScale(lineC1toC2, 1 / distance);\r\n}","import React, { useRef, useState, useEffect } from 'react';\r\nimport './Canvas.scss';\r\nimport { Area, Vector, Shape, Tool, DirKeys, Options } from '../utilities/types';\r\nimport { distancePointToPoint, projectPointToSegment, findPointInShapeIndex, vecSum, vecScale, vecFromCoordinateSystem, isPointInShape, vecRotate, vecSub, vecToCoordinateSystem, centroidOfShape } from '../utilities/shapes';\r\nimport { order } from '../utilities/data';\r\n\r\nconst CANVAS_W = 1920;\r\nconst CANVAS_H = 1080;\r\nconst POINT_RADIUS = 5;\r\nconst SNAP_DISTANCE = 25;\r\nconst ARROW_SCALE = .1;\r\nconst ID_SIZE = 48;\r\n\r\nconst alpha = .25;\r\n\r\nconst style1 = {\r\n    width: 2,\r\n    stroke: `rgb(250, 50, 50)`,\r\n    fill: `rgba(250, 50, 50, ${alpha})`,\r\n    arrow: `rgba(250, 50, 50, ${alpha * 2})`,\r\n    selected: {\r\n        width: 2,\r\n        stroke: `rgb(255, 200, 50)`,\r\n        fill: `rgba(255, 200, 50, ${alpha})`,\r\n        arrow: `rgba(255, 200, 50, ${alpha * 2})`,\r\n    },\r\n};\r\n\r\nconst style2 = {\r\n    width: 2,\r\n    stroke: `rgb(50, 50, 250)`,\r\n    fill: `rgba(50, 50, 250, ${alpha})`,\r\n    arrow: `rgba(50, 50, 250, ${alpha * 2})`,\r\n    selected: {\r\n        width: 2,\r\n        stroke: `rgb(50, 250, 250)`,\r\n        fill: `rgba(50, 250, 250, ${alpha})`,\r\n        arrow: `rgba(50, 250, 250, ${alpha * 2})`,\r\n    },\r\n};\r\n\r\nexport interface CanvasProps {\r\n    img: CanvasImageSource | null;\r\n    quads: Area[];\r\n    newQuad: (quad: Area) => void;\r\n    tool: Tool;\r\n    setSelected: (index: number) => void;\r\n    updateQuads: (arr: Area[]) => void;\r\n    deleteQuads: (arr: Area[]) => void;\r\n    slider?: number;\r\n    width?: number;\r\n    height?: number;\r\n    options?: Options;\r\n};\r\n\r\nexport default function Canvas({\r\n    img, quads, newQuad, tool, setSelected, updateQuads, deleteQuads, slider, width, height, options = { ids: true, arrows: true }\r\n}: CanvasProps) {\r\n\r\n    const [points, setPoints] = useState<Shape>([]);\r\n    const [dragging, setDragging] = useState<boolean>(false);\r\n    const [modifier, setModifier] = useState<boolean>(false);\r\n    const [oldMouse, setOldMouse] = useState<Vector | null>(null);\r\n    const [dragIndexes, setDragIndexes] = useState<number[] | null>(null);\r\n\r\n    const ref = useRef<HTMLCanvasElement>(null);\r\n    const [mouse, setMouse] = useState<{ x: number, y: number; }>({ x: 0, y: 0 });\r\n\r\n    let canvasH = CANVAS_H;\r\n    let canvasW = CANVAS_W;\r\n\r\n    useEffect(() => {\r\n        const canvas = ref.current;\r\n        const context = canvas?.getContext('2d');\r\n        if (!canvas || !context) {\r\n            return;\r\n        }\r\n\r\n        canvasH = canvas.height;\r\n        canvasW = canvas.width;\r\n\r\n        // Background\r\n        try {\r\n            if (!img) throw Error;\r\n            context.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n        } catch (e) {\r\n            context.fillStyle = '#fff';\r\n            context.fillRect(0, 0, canvas.width, canvas.height);\r\n        }\r\n\r\n        // Finished Quads\r\n        for (const quad of quads) {\r\n            drawArea(context, quad);\r\n        }\r\n\r\n        if (mouse.x && mouse.y) {\r\n\r\n            // New Quad\r\n            if (points && tool === Tool.ADD) {\r\n                let close = false;\r\n                const pos = snapToShapes([mouse.x, mouse.y], quads.map(a => a.shape));\r\n                let path = [pos, ...points];\r\n                if (points.length === 3) {\r\n                    close = true;\r\n                }\r\n                context.lineWidth = style1.width;\r\n                context.strokeStyle = style1.stroke;\r\n                context.fillStyle = style1.fill;\r\n                drawPath(context, path, true, close);\r\n            }\r\n\r\n\r\n        }\r\n    }, [img, quads, tool, mouse, points, slider, width, options]);\r\n\r\n    const snapToShapes = (pos: Vector, shapes: Shape[]) => {\r\n        if (modifier) return pos;\r\n\r\n        // give priority to points instead of edges\r\n        // find the closest point\r\n        shapes.push([[0, 0], [canvasW, 0], [canvasW, canvasH], [0, canvasH]]); // add boundaries\r\n        let [minDist, newPoint] = shapes.flat().reduce(([dist, point]: [number, Vector | null], p) => {\r\n            const d = distancePointToPoint(pos, p);\r\n            if (d < dist || dist === -1) return [d, p];\r\n            else return [dist, point];\r\n        }, [-1, null]);\r\n\r\n        if (newPoint && minDist < SNAP_DISTANCE) {\r\n            pos = newPoint;\r\n        } else {\r\n            [minDist, newPoint] = shapes.reduce(([dist, point]: [number, Vector | null], s) => {\r\n                // find the closest point in the edges\r\n                let [d, p] = s.reduce(([dist, point]: [number, Vector | null], p1, i, s) => {\r\n\r\n                    const p2 = s[(i + 1) % s.length];\r\n                    let proj = projectPointToSegment(pos, [p1, p2]);\r\n                    let d, p;\r\n                    // if we found a projection it is the closest point\r\n                    if (proj) {\r\n                        d = distancePointToPoint(pos, proj);\r\n                        p = proj;\r\n                        // confront it with the previous results\r\n                        if (d < dist || dist === -1) return [d, p];\r\n                    }\r\n                    return [dist, point];\r\n                }, [-1, null]);\r\n\r\n                // confront it with the previous results\r\n                if (p && d < dist || dist === -1) return [d, p];\r\n                return [dist, point];\r\n            }, [-1, null]);\r\n\r\n            if (newPoint && minDist < SNAP_DISTANCE) {\r\n                pos = newPoint;\r\n            }\r\n        }\r\n\r\n        return pos;\r\n    };\r\n\r\n    const addPoint = () => {\r\n        if (!mouse.x || !mouse.y) {\r\n            return;\r\n        }\r\n\r\n        let pos: Vector = [mouse.x, mouse.y];\r\n\r\n        pos = snapToShapes(pos, quads.map(a => a.shape));\r\n\r\n        const updatedShape = [pos, ...points];\r\n\r\n        if (updatedShape.length === 4) {\r\n            const newArea = new Area(order(updatedShape));\r\n            newArea.isSelected = true;\r\n            setSelected(-1);\r\n            newQuad(newArea);\r\n            setPoints([]);\r\n        } else {\r\n            setPoints(updatedShape);\r\n        }\r\n    };\r\n\r\n    const drawPath = (canvasCtx: CanvasRenderingContext2D, points: [number, number][], f_drawPoints = false, close = true) => {\r\n        if (points[0])\r\n            canvasCtx.moveTo(points[0][0], points[0][1]);\r\n        canvasCtx.beginPath();\r\n        for (const p of points) {\r\n            canvasCtx.lineTo(p[0], p[1]);\r\n        }\r\n\r\n        if (close) {\r\n            canvasCtx.closePath();\r\n            canvasCtx.fill();\r\n        }\r\n        canvasCtx.stroke();\r\n\r\n        if (f_drawPoints) {\r\n            for (const p of points)\r\n                drawPoint(canvasCtx, p);\r\n        }\r\n    };\r\n\r\n    const drawPoint = (canvasCtx: CanvasRenderingContext2D, point: Vector) => {\r\n        const tmpFill = canvasCtx.fillStyle;\r\n        const tmpStroke = canvasCtx.strokeStyle;\r\n        canvasCtx.fillStyle = \"#5f5\";\r\n        canvasCtx.strokeStyle = \"#000\";\r\n        canvasCtx.beginPath();\r\n        canvasCtx.arc(point[0], point[1], POINT_RADIUS, 0, 2 * 3.15);\r\n        canvasCtx.closePath();\r\n        canvasCtx.fill();\r\n        canvasCtx.stroke();\r\n        canvasCtx.fillStyle = tmpFill;\r\n        canvasCtx.strokeStyle = tmpStroke;\r\n    };\r\n\r\n    const drawParking = (canvasCtx: CanvasRenderingContext2D, quad: Vector[], color = \"#000\") => {\r\n\r\n        if (quad.length !== 4) return;\r\n\r\n        const tmpStroke = canvasCtx.strokeStyle;\r\n        const tmpWidth = canvasCtx.lineWidth;\r\n        canvasCtx.strokeStyle = color;\r\n        canvasCtx.lineWidth = 3;\r\n\r\n        drawPath(canvasCtx, [quad[0], quad[2]], false, false);\r\n        drawPath(canvasCtx, [quad[1], quad[3]], false, false);\r\n\r\n        canvasCtx.strokeStyle = tmpStroke;\r\n        canvasCtx.lineWidth = tmpWidth;\r\n    };\r\n\r\n    const drawArrows = (\r\n        canvasCtx: CanvasRenderingContext2D,\r\n        quad: Vector[],\r\n        directions: { left: boolean, up: boolean, right: boolean, down: boolean; },\r\n        color = \"#000\"\r\n    ) => {\r\n        // vector that rappresents the Y of the area's coordinate space\r\n        const up = vecSub(quad[3], quad[0]);\r\n        // vector that rappresents the X of the area's coordinate space\r\n        const right = vecSub(quad[1], quad[0]);\r\n        // vector of the diagonal in canvas' coordinates\r\n        const diag = vecSub(quad[2], quad[0]);\r\n        // vector of the diagonal in the area's coordinates\r\n        const diagInPerspective = vecToCoordinateSystem(diag, up, right);\r\n        // Since we are using the vector not normalized we are in effect mapping 0,0 to the top left,\r\n        //   0,1 to the bottom left, 1,0 to top right and 1,1 to the bottom right point of our area.\r\n        // However since the sides aren't parallel we are in effect stretching the coordinate space along\r\n        //   the diagonal. By diving the difference between the lenght of the projection of the diagonal\r\n        //   on the axis and the lenght of the \"axis\" itself in the coordinate space of the area we can \r\n        //   stretch the image by that amount to match have it fit and match the area's perspective.\r\n        // Since we are mapping the entire area in the square 0,0 - 1,1 the \"axis\" have lenght 1, \r\n        //   so we can subtract 1 and skip the division.\r\n        const ratioX = diagInPerspective[0] - 1;\r\n        const ratioY = diagInPerspective[1] - 1;\r\n\r\n        const lenUp = distancePointToPoint(quad[2], quad[1]) + distancePointToPoint(quad[3], quad[0]);\r\n        const lenRight = distancePointToPoint(quad[2], quad[3]) + distancePointToPoint(quad[1], quad[0]);\r\n        const ratio = lenUp / (lenRight != 0 ? lenRight : .000000001);\r\n\r\n        // up arrow in 1by1 square\r\n        let upArrow: Shape = [[-.5, -.5], [0, .5], [.5, -.5]];\r\n        // scale down\r\n        upArrow = upArrow.map(v => vecScale(v, ARROW_SCALE));\r\n\r\n        const dirVecs: (Vector | null)[] = [\r\n            directions.up ? [0, .5] : null,\r\n            directions.down ? [0, -.5] : null,\r\n            directions.right ? [.5, 0] : null,\r\n            directions.left ? [-.5, 0] : null,\r\n        ];\r\n\r\n        const arrows = [];\r\n        for (const dirVec of dirVecs) {\r\n            if (!dirVec) continue;\r\n            // apply rotation\r\n            let arrow = [...upArrow];\r\n            arrow = arrow.map(v => vecRotate(v, dirVec));\r\n\r\n            arrow = ratio > 1\r\n                ? arrow.map(v => [v[0], v[1] / ratio])\r\n                : arrow.map(v => [v[0] * ratio, v[1]]);\r\n\r\n            // attach to borders\r\n            const translation = vecSub(dirVec, arrow[1]);\r\n            arrow = arrow.map(v => vecSum(v, translation));\r\n            // flip since we draw from topLeft down\r\n            arrow = arrow.map(v => [v[0], -v[1]]);\r\n            // move between 0,0 - 1,1\r\n            arrow = arrow.map(v => vecSum(v, [.5, .5]));\r\n            // apply perspective scaling\r\n            arrow = arrow.map(v => {\r\n                return [\r\n                    v[0] + v[0] * v[1] * ratioX,\r\n                    v[1] + v[0] * v[1] * ratioY,\r\n                ] as Vector;\r\n            });\r\n            // apply coordinate stretching\r\n            arrow = arrow.map(v => vecFromCoordinateSystem(v, up, right));\r\n            // move to the area\r\n            arrow = arrow.map(v => vecSum(v, quad[0]));\r\n            arrows.push(arrow);\r\n        }\r\n\r\n        const tmpStroke = canvasCtx.strokeStyle;\r\n        const tmpWidth = canvasCtx.lineWidth;\r\n        canvasCtx.strokeStyle = color;\r\n        canvasCtx.lineWidth = 5;\r\n\r\n        for (const arrow of arrows) {\r\n            drawPath(canvasCtx, arrow, false, false);\r\n        }\r\n\r\n        canvasCtx.strokeStyle = tmpStroke;\r\n        canvasCtx.lineWidth = tmpWidth;\r\n    };\r\n\r\n    const drawArea = (canvasCtx: CanvasRenderingContext2D, area: Area) => {\r\n        let movement: Vector = [0, 0];\r\n        // Drag\r\n        if (dragging && oldMouse) {\r\n            movement = [mouse.x! - oldMouse[0], mouse.y! - oldMouse[1]] as Vector;\r\n        }\r\n\r\n        const shape = area.isSelected\r\n            ? area.shape.map((p, i) => {\r\n                if (dragIndexes && dragIndexes.some(n => n === i))\r\n                    return snapToShapes(vecSum(p, movement), quads.filter(a => a.id !== area.id).map(a => a.shape));\r\n                else return p;\r\n            })\r\n            : area.shape;\r\n\r\n        const center = centroidOfShape(shape);\r\n\r\n        let style;\r\n        if (area.isCarWalkable) {\r\n            style = style1;\r\n        } else {\r\n            style = style2;\r\n        }\r\n        if (area.isSelected)\r\n            style = style.selected;\r\n\r\n\r\n        const tmp = {\r\n            lw: canvasCtx.lineWidth,\r\n            ss: canvasCtx.strokeStyle,\r\n            fs: canvasCtx.fillStyle,\r\n        };\r\n        canvasCtx.lineWidth = style.width;\r\n        canvasCtx.strokeStyle = style.stroke;\r\n        canvasCtx.fillStyle = style.fill;\r\n\r\n        drawPath(canvasCtx, shape, area.isSelected, true);\r\n        if (options.ids) drawText(canvasCtx, area.id.toString(), center, ID_SIZE, style.stroke);\r\n        if (options.arrows || tool === Tool.SET_DIRECTIONS) drawArrows(canvasCtx, shape, area.direction, style.stroke);\r\n        if (area.isParking) drawParking(canvasCtx, shape, style.stroke);\r\n\r\n        canvasCtx.lineWidth = tmp.lw;\r\n        canvasCtx.strokeStyle = tmp.ss;\r\n        canvasCtx.fillStyle = tmp.fs;\r\n    };\r\n\r\n    const drawText = (canvasCtx: CanvasRenderingContext2D, text: string, center: Vector, size = 12, color = \"#000\") => {\r\n        const tmp = {\r\n            font: canvasCtx.font,\r\n            ta: canvasCtx.textAlign,\r\n            tb: canvasCtx.textBaseline,\r\n            fs: canvasCtx.fillStyle,\r\n        };\r\n\r\n        canvasCtx.font = `${size}px sans-serif`;\r\n        canvasCtx.textAlign = \"center\";\r\n        canvasCtx.textBaseline = \"middle\";\r\n        canvasCtx.fillStyle = color;\r\n\r\n        canvasCtx.fillText(text, center[0], center[1]);\r\n\r\n        canvasCtx.font = tmp.font;\r\n        canvasCtx.textAlign = tmp.ta;\r\n        canvasCtx.textBaseline = tmp.tb;\r\n        canvasCtx.fillStyle = tmp.fs;\r\n    };\r\n\r\n    const handleSelect = () => {\r\n        // check if we have a selected area\r\n        const selected = quads.find(a => a.isSelected);\r\n        let indexes: number[] | null = null;\r\n        if (selected) {\r\n            // check its closest points and edges to drag them\r\n            const points = selected.shape;\r\n            let distance: number;\r\n            indexes = [-1];\r\n            // find the closest point to the mouse pointer\r\n            [distance, indexes[0]] = points.reduce(([res_d, res_i], p, i) => {\r\n                const d = distancePointToPoint([mouse.x!, mouse.y!], p);\r\n                return d < res_d ? [d, i] : [res_d, res_i];\r\n            }, [999, -1]);\r\n            // if it's too far check if one of the edges is close enough\r\n            if (distance > SNAP_DISTANCE) {\r\n                [distance, indexes] = points.reduce(([res_d, res_is], p, i, points) => {\r\n                    const j = (i + 1) % points.length;\r\n                    const p1 = points[j];\r\n                    const proj = projectPointToSegment([mouse.x!, mouse.y!], [p, p1]);\r\n                    if (!proj) return [res_d, res_is];\r\n                    const dist = distancePointToPoint([mouse.x!, mouse.y!], proj);\r\n                    return dist < res_d ? [dist, [i, j]] : [res_d, res_is];\r\n                }, [999, [-1]]);\r\n            }\r\n            // if it's not check if we clicked it and drag the entire shape\r\n            if (distance > SNAP_DISTANCE) {\r\n                if (isPointInShape([mouse.x, mouse.y], selected.shape)) {\r\n                    indexes = [0, 1, 2, 3];\r\n                } else {\r\n                    indexes = null;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (indexes) {\r\n            // update the state\r\n            setDragIndexes(indexes);\r\n            setDragging(true);\r\n            setOldMouse([mouse.x!, mouse.y!]);\r\n        } else {\r\n            // check if we clicked an area and select it\r\n            const target = findPointInShapeIndex([mouse.x, mouse.y], quads.map(a => a.shape));\r\n            setSelected(target);\r\n        }\r\n    };\r\n\r\n    const handleSetDirections = () => {\r\n        const pos = [mouse.x, mouse.y] as Vector;\r\n        const targetArea = quads.find(q => isPointInShape(pos, q.shape));\r\n        if (!targetArea) return;\r\n\r\n        const shape = targetArea.shape;\r\n        const center = centroidOfShape(shape);\r\n        const sectors = {\r\n            up: [shape[0], shape[1], center] as Shape,\r\n            down: [shape[2], shape[3], center] as Shape,\r\n            right: [shape[1], shape[2], center] as Shape,\r\n            left: [shape[3], shape[0], center] as Shape,\r\n        };\r\n\r\n        const selectedDir: DirKeys | null = (() => {\r\n            for (const [k, v] of Object.entries(sectors)) {\r\n                if (isPointInShape(pos, v)) return k as DirKeys;\r\n            }\r\n            return null;\r\n        })();\r\n\r\n        if (!selectedDir) return;\r\n\r\n        targetArea.direction[selectedDir] = !targetArea.direction[selectedDir];\r\n\r\n        updateQuads([targetArea]);\r\n    };\r\n\r\n    const onMouseDown = () => {\r\n        switch (tool) {\r\n            case Tool.ADD:\r\n                addPoint();\r\n                break;\r\n            case Tool.SELECT:\r\n                handleSelect();\r\n                break;\r\n            case Tool.SET_DIRECTIONS:\r\n                handleSetDirections();\r\n                break;\r\n            default:\r\n                throw Error(\"Tool not implemented\");\r\n        }\r\n    };\r\n\r\n    const stopDragging = () => {\r\n        if (dragging && oldMouse) {\r\n            const selectedAreas = quads.filter(a => a.isSelected);\r\n            const movement: Vector = [mouse.x! - oldMouse[0], mouse.y! - oldMouse[1]];\r\n            const updated = selectedAreas.map(a => {\r\n                a.shape = a.shape.map((p, i) => {\r\n                    if (dragIndexes && dragIndexes.some(n => n === i))\r\n                        return snapToShapes(vecSum(p, movement), quads.filter(b => b.id !== a.id).map(b => b.shape));\r\n                    else return p;\r\n                });\r\n                return a;\r\n            });\r\n            updateQuads(updated);\r\n            setDragging(false);\r\n            setDragIndexes(null);\r\n            setOldMouse(null);\r\n        }\r\n    };\r\n\r\n    const onMouseUp = () => {\r\n        stopDragging();\r\n    };\r\n\r\n    const onMouseLeave = () => {\r\n        setPoints([]);\r\n        if (dragging && dragIndexes?.length === 4) {\r\n            setDragging(false);\r\n            setDragIndexes(null);\r\n            setOldMouse(null);\r\n            deleteQuads(quads.filter(q => q.isSelected));\r\n        }\r\n        else {\r\n            stopDragging();\r\n        }\r\n    };\r\n    const onMouseMove = (e: React.MouseEvent) => {\r\n        const canvas = ref.current;\r\n        if (canvas) {\r\n            const ratio = canvas.clientWidth / canvas.width;\r\n            const topLeft = [canvas.offsetLeft, canvas.offsetTop];\r\n            setMouse({\r\n                x: (e.pageX - topLeft[0]) / ratio,\r\n                y: (e.pageY - topLeft[1]) / ratio,\r\n            });\r\n\r\n            if (e.ctrlKey != modifier) setModifier(e.ctrlKey);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"Canvas\">\r\n            <canvas\r\n                ref={ref}\r\n                onMouseDown={onMouseDown}\r\n                onMouseUp={onMouseUp}\r\n                onMouseLeave={onMouseLeave}\r\n                onMouseMove={e => onMouseMove(e)}\r\n                width={width ?? CANVAS_W}\r\n                height={height ?? CANVAS_H}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { Clear, Check, CheckBoxOutlined, Delete } from '@material-ui/icons';\r\nimport { order } from '../utilities/data';\r\nimport { dot, vecSum } from '../utilities/shapes';\r\nimport { Area, AreaDictionary, IIndexable, Vector } from '../utilities/types';\r\n\r\nimport './Inspector.scss';\r\n\r\ntype InspectorProps = {\r\n    target: Area[];\r\n    update: (updated: Area[]) => void;\r\n    selectById: (id: number) => void;\r\n    deleteById: (id: number) => void;\r\n};\r\n\r\nexport default function Inspector({ target, update, selectById, deleteById }: InspectorProps) {\r\n\r\n    const [inspected, setInspected] = useState<AreaDictionary[]>();\r\n    const updateInspected = (updated: AreaDictionary, changed = true) => {\r\n        updated.changed = changed;\r\n        if (!inspected) return;\r\n        const unchanged = inspected?.filter(a => a.id !== updated.id);\r\n        setInspected([updated, ...unchanged].sort((a, b) => a.id < b.id ? -1 : 1));\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const selected = target;\r\n\r\n        // let selected: Area[] = target.filter(a => a.isSelected);\r\n        // if (selected.length === 0)\r\n        //     selected = target;\r\n\r\n        let list = selected.map(a => a.toAreaDictionary());\r\n\r\n        const pending = inspected?.filter(t => t.changed);\r\n        list = list.map(a => {\r\n            const t = pending?.find(t => t.id === a.id);\r\n            return t ? t : a;\r\n        });\r\n\r\n        list = list.sort((a, b) => a.id < b.id ? -1 : 1);\r\n\r\n        setInspected(list);\r\n    }, [target]);\r\n\r\n\r\n    function renderAD(a: AreaDictionary) {\r\n\r\n        const renderPoint = (p: Vector, key: string, ref: AreaDictionary) => {\r\n            return p.map((val, i) => {\r\n                return (\r\n                    <td key={`${key}${i}`}>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={Math.round(val)}\r\n                            onChange={e => {\r\n                                (ref.points as IIndexable)[key][i] = +e.target.value;\r\n                                updateInspected(ref);\r\n                            }}\r\n                        />\r\n                    </td>\r\n                );\r\n            });\r\n        };\r\n\r\n        const renderedPoints = Object.entries(a.points)\r\n            .flatMap(([k, v]) => renderPoint(v, k, a));\r\n\r\n        const renderedDirection = Object.entries(a.dir)\r\n            .map(([k, v]) => {\r\n                return (\r\n                    <td key={k}>\r\n                        <input type=\"checkbox\"\r\n                            checked={v}\r\n                            onChange={() => {\r\n                                (a.dir as IIndexable)[k] = !(a.dir as IIndexable)[k];\r\n                                updateInspected(a);\r\n                            }}\r\n                        />\r\n                    </td>\r\n                );\r\n            });\r\n\r\n        return (\r\n            <tr key={a.id} onClick={() => selectById(a.id)} className={a.ref?.isSelected ? \"selected\" : \"\"}>\r\n                <td key=\"delete\" className=\"delete\">\r\n                    <Button variant=\"contained\" color=\"secondary\"\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            deleteById(a.id);\r\n                        }}\r\n                    >\r\n                        <Delete />\r\n                    </Button>\r\n                </td>\r\n                <td key=\"id\">\r\n                    <div className=\"id\"> {a.id} </div>\r\n                </td>\r\n                {renderedPoints}\r\n                <td key=\"iscarwalkable\">\r\n                    <input type=\"checkbox\"\r\n                        checked={a.carWalk}\r\n                        onChange={() => {\r\n                            a.carWalk = !a.carWalk;\r\n                            updateInspected(a);\r\n                        }}\r\n                    />\r\n                </td>\r\n                {renderedDirection}\r\n                <td key=\"isparking\">\r\n                    <input type=\"checkbox\"\r\n                        checked={a.parking}\r\n                        onChange={() => {\r\n                            a.parking = !a.parking;\r\n                            updateInspected(a);\r\n                        }}\r\n                    />\r\n                </td>\r\n                <td key=\"isstop\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={a.stop ?? \"None\"}\r\n                        onChange={e => {\r\n                            a.stop = e.target.value;\r\n                            updateInspected(a);\r\n                        }}\r\n                    />\r\n                </td>\r\n                <td className={!a.changed ? \"hide\" : \"space\"} />\r\n                <td key=\"update\" className={!a.changed ? \"hide\" : \"\"}>\r\n                    <Button variant=\"contained\" color=\"primary\"\r\n\r\n                        onClick={() => {\r\n                            updateInspected(a, false);\r\n                            update([\r\n                                target.find(t => t.id === a.id)!.fromAreaDictionary(a)\r\n                            ]);\r\n                        }}\r\n                    >\r\n                        <Check />\r\n                    </Button>\r\n                </td>\r\n                <td key=\"discard\" className={!a.changed ? \"hide\" : \"\"}>\r\n                    <Button variant=\"contained\" color=\"secondary\"\r\n                        className={!a.changed ? \"hide\" : \"\"}\r\n                        onClick={() => {\r\n                            a = target.find(t => t.id === a.id)!.toAreaDictionary();\r\n                            updateInspected(a, false);\r\n                        }}\r\n                    >\r\n                        <Clear />\r\n                    </Button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"Inspector\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th />\r\n                        <th>ID      </th>\r\n                        <th>luX     </th>\r\n                        <th>luY     </th>\r\n                        <th>ruX     </th>\r\n                        <th>ruY     </th>\r\n                        <th>rbX     </th>\r\n                        <th>rbY     </th>\r\n                        <th>lbX     </th>\r\n                        <th>lbY     </th>\r\n                        <th>CarWalk </th>\r\n                        <th>Left    </th>\r\n                        <th>Up      </th>\r\n                        <th>Right   </th>\r\n                        <th>Down    </th>\r\n                        <th>Parking </th>\r\n                        <th>Stop    </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        inspected?.map((a) => renderAD(a))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n\r\n}","import React, { useRef } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { Area, AreaDictionary, Vector } from '../utilities/types';\r\n\r\nimport './IOManager.css';\r\n\r\nconst fields = [\r\n    \"luX\",\r\n    \"luY\",\r\n    \"ruX\",\r\n    \"ruY\",\r\n    \"rbX\",\r\n    \"rbY\",\r\n    \"lbX\",\r\n    \"lbY\",\r\n    \"CarWalk\",\r\n    \"Left\",\r\n    \"Up\",\r\n    \"Right\",\r\n    \"Down\",\r\n    \"Parking\",\r\n    \"Stop\",\r\n];\r\n\r\ntype IOMangerProps = {\r\n    target: Area[];\r\n    source?: string;\r\n    load: (arr: Area[]) => void;\r\n};\r\n\r\nexport function IOManager({ target, source, load }: IOMangerProps) {\r\n    const dlRef = useRef<HTMLAnchorElement>(null);\r\n    const loadRef = useRef<HTMLInputElement>(null);\r\n\r\n    const filename = source ? source.replace(\".mp4\", \"_areas.csv\") : \"areas.csv\";\r\n\r\n    const download = () => {\r\n        const outStr = formatData(target);\r\n        const blob = new Blob([outStr], { type: 'text/csv;charset=utf-8;' });\r\n        const dlUrl = URL.createObjectURL(blob);\r\n        dlRef.current?.setAttribute(\"href\", dlUrl);\r\n        dlRef.current?.click();\r\n        URL.revokeObjectURL(dlUrl);\r\n    };\r\n\r\n    const formatData = (target: Area[]) => {\r\n        const formatted = target.map(formatArea);\r\n        return [fields.join(',')].concat(formatted).join('\\n');\r\n    };\r\n\r\n    const formatArea = (area: Area) => {\r\n        const ad = area.toAreaDictionary();\r\n\r\n        const points = [ad.points.lu, ad.points.ru, ad.points.rb, ad.points.lb].map(p => p.join(',')).join(',');\r\n        const carWalk = ad.carWalk ? 1 : 0;\r\n        const parking = ad.parking ? 1 : 0;\r\n        const stop = ad.stop;\r\n        const direction = [ad.dir.left, ad.dir.up, ad.dir.right, ad.dir.down].map(f => f ? 1 : 0).join(',');\r\n\r\n        return [points, carWalk, direction, parking, stop].join(',');\r\n    };\r\n\r\n    const loader = async (f: File | null) => {\r\n        if (!f) {\r\n            console.error(\"Unable to load file!\");\r\n            return;\r\n        }\r\n        const csv = await f.text();\r\n        const rows = csv.split('\\n').filter(s => s !== \"\");\r\n        const strings = rows.slice(1).map(r => r.split(','));\r\n        const dictionaries = strings.map(r => {\r\n            let ad: any = { points: {}, dir: {} };\r\n            const vals: number[] = r.map(v => +v);\r\n            ad.points.lu = vals.slice(0, 2) as Vector;\r\n            ad.points.ru = vals.slice(2, 4) as Vector;\r\n            ad.points.rb = vals.slice(4, 6) as Vector;\r\n            ad.points.lb = vals.slice(6, 8) as Vector;\r\n            ad.carWalk = vals[8] > 0;\r\n            ad.dir.left = vals[9] > 0;\r\n            ad.dir.up = vals[10] > 0;\r\n            ad.dir.right = vals[11] > 0;\r\n            ad.dir.down = vals[12] > 0;\r\n            ad.parking = vals[13] > 0;\r\n            ad.stop = r[14];\r\n            return ad as AreaDictionary;\r\n        });\r\n        const newAreas = dictionaries.map(ad => new Area().fromAreaDictionary(ad));\r\n        load(newAreas);\r\n    };\r\n\r\n    return (\r\n        <div className=\"IOManager\">\r\n            <Button variant=\"contained\" color=\"primary\"\r\n                onClick={() => loadRef.current?.click()}\r\n            >\r\n                Load CSV\r\n            </Button>\r\n            <input hidden\r\n                type=\"file\"\r\n                ref={loadRef}\r\n                accept=\".csv\"\r\n                onChange={() => loader(loadRef.current?.files?.item(0) ?? null)}\r\n            />\r\n\r\n            <Button variant=\"contained\" color=\"primary\"\r\n                onClick={download}\r\n            >\r\n                Download\r\n            </Button>\r\n            <a\r\n                ref={dlRef}\r\n                download={filename}\r\n                hidden\r\n            />\r\n        </div >\r\n    );\r\n}","import React from 'react';\r\nimport { Options } from '../utilities/types';\r\nimport { Button } from '@material-ui/core';\r\nimport './OptionSelector.scss';\r\nimport { ArrowForward } from '@material-ui/icons';\r\n\r\ntype OptionSelectorProps = {\r\n    options: Options;\r\n    updateOptions: (o: Options) => void;\r\n};\r\n\r\nexport default function OptionSelector({ options, updateOptions }: OptionSelectorProps) {\r\n    return (\r\n        <div className=\"OptionSelector\">\r\n            <Button\r\n                variant={options.ids ? \"contained\" : \"outlined\"}\r\n                onClick={() => updateOptions({ ...options, ids: !options.ids })}\r\n            >\r\n                IDs\r\n            </Button>\r\n\r\n            <Button\r\n                variant={options.arrows ? \"contained\" : \"outlined\"}\r\n                onClick={() => updateOptions({ ...options, arrows: !options.arrows })}\r\n            >\r\n                <ArrowForward />\r\n            </Button>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport './App.scss';\r\nimport Video from './components/Video';\r\nimport FilePicker from './components/FilePicker';\r\nimport { Area, Tool, Options } from './utilities/types';\r\nimport ToolSelector from './components/ToolSelector';\r\nimport Canvas from './components/Canvas';\r\nimport Inspector from './components/Inspector';\r\nimport { IOManager } from './components/IOManager';\r\nimport OptionSelector from './components/OptionSelector';\r\n\r\n\r\nexport default function App() {\r\n\r\n    const [file, setFile] = useState<File | null>(null);\r\n    const [videoSrc, setVideoSrc] = useState<string>(\"\");\r\n    const [video, setVideo] = useState<HTMLVideoElement | null>(null);\r\n    const [slider, setSlider] = useState<number | undefined>();\r\n    const [quadList, setQuadList] = useState<Area[]>([]);\r\n    const [tool, setTool] = useState<Tool>(Tool.ADD);\r\n    const [options, setOptions] = useState<Options>({ ids: true, arrows: true, });\r\n\r\n    useEffect(() => {\r\n        if (file) {\r\n            const source = URL.createObjectURL(file);\r\n            setVideoSrc(source);\r\n        }\r\n    }, [file]);\r\n\r\n    const deleteQuads = (quads: Area[]) => {\r\n        const filteredList = quadList.filter(a => quads.every(b => b.id !== a.id));\r\n        setQuadList(filteredList);\r\n    };\r\n\r\n    const setSelected = (index: number) => {\r\n        quadList.map(a => a.isSelected = false);\r\n        if (index >= 0 && index < quadList.length) {\r\n            quadList[index].isSelected = true;\r\n        }\r\n        setQuadList([...quadList]);\r\n    };\r\n\r\n    const setSelectedById = (id: number) => {\r\n        setSelected(quadList.findIndex(a => a.id === id));\r\n    };\r\n\r\n    const updateQuads = (quads: Area[]) => {\r\n        const notUpdated = quadList.filter(a => quads.every(b => b.id !== a.id));\r\n        setQuadList([...quads, ...notUpdated]);\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div>\r\n                <div className=\"BlockButtons\">\r\n                    <OptionSelector\r\n                        options={options}\r\n                        updateOptions={setOptions}\r\n                    />\r\n                </div>\r\n                <div className=\"BlockCanvas\">\r\n                    <Canvas\r\n                        img={video}\r\n                        quads={quadList}\r\n                        newQuad={(quad: Area) => setQuadList([quad, ...quadList])}\r\n                        tool={tool}\r\n                        setSelected={setSelected}\r\n                        updateQuads={updateQuads}\r\n                        deleteQuads={deleteQuads}\r\n                        slider={slider}\r\n                        width={video?.videoWidth || undefined}\r\n                        height={video?.videoHeight || undefined}\r\n                        options={options}\r\n                    />\r\n                    <Video\r\n                        source={videoSrc}\r\n                        setVideo={setVideo}\r\n                        setSlider={setSlider}\r\n                        value={slider ?? 0}\r\n                    />\r\n                </div>\r\n                <div className=\"BlockButtons\">\r\n                    <ToolSelector\r\n                        value={tool}\r\n                        onAdd={() => { setTool(Tool.ADD); setSelected(-1); }}\r\n                        onSelect={() => { setTool(Tool.SELECT); setSelected(-1); }}\r\n                        onSetDirections={() => { setTool(Tool.SET_DIRECTIONS); }}\r\n                    />\r\n                    <FilePicker setFile={setFile} accept_types=\"video/*\" />\r\n                    <IOManager\r\n                        target={quadList}\r\n                        source={file?.name}\r\n                        load={arr => setQuadList(arr)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <Inspector\r\n                    target={quadList}\r\n                    update={updateQuads}\r\n                    selectById={setSelectedById}\r\n                    deleteById={(id) => deleteQuads(quadList.filter(q => q.id === id))}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { blue, red } from '@material-ui/core/colors';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: blue[400],\r\n    },\r\n    secondary: {\r\n      main: red[400],\r\n    },\r\n  },\r\n  typography: {\r\n    button: {\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiButton: {\r\n      outlined: {\r\n        border: \"2px solid !important\",\r\n      }\r\n    }\r\n  }\r\n\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}