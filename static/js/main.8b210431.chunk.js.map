{"version":3,"sources":["components/VideoCanvas.tsx","components/FilePicker.tsx","utilities/shapes.ts","utilities/area.ts","utilities/types.ts","utilities/data.ts","components/ToolSelector.tsx","components/Canvas.tsx","components/Inspector.tsx","components/IOManager.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["VideoCanvas","source","setVideo","setSlider","value","videoRef","useRef","useEffect","current","src","loader","setTimeout","duration","setVideoPos","percentage","currentTime","className","type","min","max","onChange","ev","target","ref","hidden","FilePicker","setFile","accept_types","Button","variant","color","onClick","click","accept","_","files","item","isPointInShape","p","s","res","i","length","edge","distancePointToPoint","a","b","Math","hypot","dot","vec1","vec2","vecSum","v1","v2","vecSub","v","vecMul","n","Tool","Area","quad","direction","id","shape","isCarWalkable","isParking","stop","isSelected","this","newId","points","lu","sort","slice","i_lu","findIndex","ordered","push","order","dir","map","x","round","ru","rb","lb","carWalk","left","up","right","down","parking","ad","Object","values","dirs","entries","k","reduce","vec","counter","ToolSelector","onSelect","onAdd","ADD","SELECT","Canvas","img","quads","newQuad","tool","setSelected","moveSelected","deleteSelected","slider","width","height","useState","setPoints","dragging","setDragging","oldMouse","setOldMouse","rawMouse","useMouse","mouse","y","canvas","context","getContext","ratio","clientWidth","drawImage","fillStyle","fillRect","movement","strokeStyle","drawPath","close","path","snapToShapes","pos","shapes","dist","point","p1","d","p2","proj","l","lineVec","lineLen","lineVecNormalized","pointProjLen","projectPointToSegment","d1","d2","minDist","newPoint","canvasCtx","f_drawPoints","moveTo","beginPath","lineTo","closePath","stroke","drawPoint","arc","fill","handleSelect","findPointIndexInShape","onMouseDown","updatedShape","newArea","addPoint","Error","onMouseUp","onMouseLeave","Inspector","update","selectById","inspected","setInspected","updateInspected","updated","changed","unchanged","filter","renderAD","renderedPoints","flatMap","key","val","e","renderedDirection","checked","find","t","fromAreaDictionary","Check","toAreaDictionary","Clear","list","pending","fields","IOManager","load","dlRef","loadRef","filename","replace","formatData","formatted","formatArea","join","concat","area","f","console","error","text","csv","rows","split","strings","r","dictionaries","vals","newAreas","outStr","blob","Blob","dlUrl","URL","createObjectURL","setAttribute","revokeObjectURL","download","App","file","videoSrc","setVideoSrc","video","quadList","setQuadList","setTool","index","updateQuads","notUpdated","selected","filteredList","videoWidth","undefined","videoHeight","name","arr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","primary","main","blue","secondary","red","typography","button","fontWeight","overrides","MuiButton","outlined","border","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.8b210431.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Shape } from '../utilities/types';\nimport Canvas, { CanvasProps } from './Canvas';\n\nimport './VideoCanvas.css';\n\ntype VideoCanvasProps = {\n    source: string;\n    setVideo: (video: HTMLVideoElement) => void;\n    setSlider: (value: number | undefined) => void;\n    value: number;\n};\n\nexport default function VideoCanvas({ source, setVideo, setSlider, value }: VideoCanvasProps) {\n\n    const videoRef = useRef<HTMLVideoElement>(null);\n\n\n    useEffect(() => {\n        if (videoRef.current && source) {\n            videoRef.current.src = source;\n            setVideo(videoRef.current);\n\n            const loader = () => {\n                setTimeout(() => {\n                    if (videoRef.current?.duration) {\n                        setVideoPos(1);\n                    } else loader();\n                }, 10);\n            };\n\n            loader();\n        }\n    }, [source]);\n\n    const setVideoPos = (percentage: number) => {\n        if (!videoRef.current || !source || !percentage) {\n            return;\n        }\n        // force range 0 - 100\n        const value = percentage < 1 ? 1 : percentage > 100 ? 100 : percentage;\n        videoRef.current.currentTime = value / 100 * videoRef.current.duration;\n        setSlider(value);\n    };\n\n    return (\n        <div className=\"VideoCanvas\">\n            <input className=\"slider\"\n                type=\"range\"\n                min=\"1\"\n                max=\"100\"\n                value={value}\n                onChange={ev => { setVideoPos(+ev.target.value); }}\n            />\n            <video ref={videoRef} hidden />\n        </div>\n    );\n}\n","import React, { useRef, useEffect, useState } from 'react';\nimport { Button } from '@material-ui/core';\n\nimport './FilePicker.css';\n\ntype FilePickerProps = {\n    setFile: (f: File | null) => void,\n    accept_types?: string;\n};\n\nfunction FilePicker({ setFile, accept_types = \"\" }: FilePickerProps) {\n\n    const ref = useRef<HTMLInputElement>(null);\n\n    return (\n        <div className=\"FilePicker\">\n            <Button variant=\"contained\" color=\"primary\"\n                onClick={() => ref.current?.click()}\n            >\n                Select Video\n            </Button>\n            <input hidden\n                ref={ref}\n                type=\"file\"\n                accept={accept_types}\n                onChange={_ => setFile(ref.current?.files?.item(0) ?? null)}\n            />\n        </div>\n    );\n}\n\nexport default FilePicker;","import { Point, Shape } from './types';\n\nexport function findPointIndexInShape(target: Point, shapes: Shape[]) {\n    for (let i = 0; i < shapes.length; i++) {\n        if (isPointInShape(target, shapes[i])) return i;\n    }\n    return -1;\n}\n\nexport function isPointInShape(p: Point, s: Shape) {\n    let res = false;\n    const X = 0;\n    const Y = 1;\n    for (let i = 0; i < s.length; i++) {\n        // https://www.eecs.umich.edu/courses/eecs380/HANDOUTS/PROJ2/InsidePoly.html\n        const edge = [s[i], s[(i + 1) % s.length]];\n        if (\n            (   // is the point in the Y range of the edge?\n                edge[0][Y] <= p[Y] && edge[1][Y] >= p[Y] ||\n                edge[1][Y] <= p[Y] && edge[0][Y] >= p[Y]\n            )\n            &&\n            (   // is our point to the left the line that our edge sits on at Y = point[Y]?\n                p[X] < (edge[0][X] - edge[1][X]) * (p[Y] - edge[1][Y]) / (edge[0][Y] - edge[1][Y]) + edge[1][X]\n            )\n        ) {\n            res = !res;\n        }\n    }\n    return res;\n}\n\nexport function distancePointToPoint(a: Point, b: Point) {\n    // Pitagora\n    return Math.hypot(a[0] - b[0], a[1] - b[1]);\n}\n\nfunction badProjectPointToSegment(p: Point, l: [Point, Point]) {\n    // WHY DID I EVEN BOTHER WITH ALL OF THIS MATH\n    const [x, y] = [p[0], p[1]];\n    const [x1, y1] = [l[0][0], l[0][1]];\n    const [x2, y2] = [l[1][0], l[1][1]];\n\n    // find m and q of the segment line\n    const m = (y1 - y2) / (x1 - x2);\n    const q = (x1 * y2 - x2 * y1) / (x1 - x2);\n\n    // find m and q of the projection line\n    const mproj = -1 / m;\n    const qproj = y - mproj * x;\n\n    // solve the system and find the point that sits on both lines\n    const xproj = (qproj - q) / (m - mproj);\n    const yproj = m * xproj + q;\n\n    const proj = [xproj, yproj] as Point;\n\n    if (\n        proj[0] > l[0][0] && proj[0] > l[1][0] || // too far left\n        proj[0] < l[0][0] && proj[0] < l[1][0] || // too far right\n        proj[1] > l[0][1] && proj[1] > l[1][1] || // too far up\n        proj[1] < l[0][1] && proj[1] < l[1][1]    // too far down\n    ) {\n        return null;\n    }\n    return proj;\n}\n\nexport function projectPointToSegment(p: Point, l: [Point, Point]): Point | null {\n    // WHY DO I ONLY THINK OF VECTORS IN MY FREE TIME AND NOT WHEN I'M ON THE CLOCK??????\n    const lineVec = vecSub(l[1], l[0]);\n    const lineLen = distancePointToPoint(l[0], l[1]);\n    const lineVecNormalized = vecMul(lineVec, 1 / lineLen);\n    const pointProjLen = dot(vecSub(p, l[0]), lineVecNormalized);\n    if (pointProjLen < 0 || pointProjLen > lineLen) return null; // proj outside the segment\n    const pointProj = vecSum(l[0], vecMul(lineVecNormalized, pointProjLen));\n    return pointProj;\n}\n\nexport function dot(vec1: Point, vec2: Point) {\n    return vec1[0] * vec2[0] + vec1[1] * vec2[1];\n}\n\nexport function vecSum(v1: Point, v2: Point): Point {\n    return [v1[0] + v2[0], v1[1] + v2[1]];\n}\n\nexport function vecNegative(v: Point): Point {\n    return [-v[0], -v[1]];\n}\n\nexport function vecSub(v1: Point, v2: Point): Point {\n    return vecSum(v1, vecNegative(v2));\n}\n\nexport function vecMul(v: Point, n: number): Point {\n    return [v[0] * n, v[1] * n];\n}","import { order } from './data';\nimport { dot, vecSum } from './shapes';\nimport { AreaDictionary, IIndexable, Point, Shape } from './types';\n\nexport class Area {\n    private static counter = 0;\n\n    readonly id: number;\n    public shape: Shape;\n    public isCarWalkable = true;\n    public direction: Point | null = null;\n    public isParking = false;\n    public stop: string | null = null;\n    public isSelected = false;\n\n    constructor(quad?: Shape, direction?: Point) {\n        this.id = Area.newId();\n        this.shape = quad ?? [[-1, -1], [-1, -1], [-1, -1], [-1, -1]];\n        if (direction) this.direction = direction;\n    }\n\n    static newId() {\n        return Area.counter++;\n    }\n\n    toAreaDictionary(): AreaDictionary {\n        const points = order(this.shape);\n        const dir = this.direction ?? [0, 0];\n        return {\n            id: this.id,\n            points: {\n                lu: points[0].map(x => Math.round(x)) as Point,\n                ru: points[1].map(x => Math.round(x)) as Point,\n                rb: points[2].map(x => Math.round(x)) as Point,\n                lb: points[3].map(x => Math.round(x)) as Point,\n            },\n            carWalk: this.isCarWalkable,\n            dir: {\n                left: dot(dir, [-1, 0]) > .25 ? true : false,\n                up: dot(dir, [0, -1]) > .25 ? true : false,\n                right: dot(dir, [1, 0]) > .25 ? true : false,\n                down: dot(dir, [0, 1]) > .25 ? true : false,\n            },\n            parking: this.isParking,\n            stop: `${this.stop ?? \"None\"}`,\n            ref: this,\n        };\n    }\n\n    fromAreaDictionary(ad: AreaDictionary) {\n        this.shape = Object.values(ad.points);\n        this.isCarWalkable = ad.carWalk;\n        const dirs = {\n            left: [-1, 0],\n            right: [1, 0],\n            up: [0, -1],\n            down: [0, 1],\n        };\n        this.direction = Object.entries(ad.dir)\n            .map(([k, v]) => v ? (dirs as IIndexable)[k] : [0, 0])\n            .reduce((res, vec) => vecSum(res, vec));\n\n        this.isParking = ad.parking;\n        this.stop = ad.stop;\n        ad.ref = this;\n        return this;\n    }\n}","import { Area } from \"./area\";\n\nexport type Point = [number, number];\nexport type Shape = Point[];\nexport enum Tool { ADD, SELECT };\n\nexport type AreaDictionary = {\n    id: number;\n    points: {\n        lu: Point;\n        ru: Point;\n        rb: Point;\n        lb: Point;\n    };\n    carWalk: boolean;\n    dir: {\n        left: boolean;\n        up: boolean;\n        right: boolean;\n        down: boolean;\n    };\n    parking: boolean;\n    stop: string;\n    changed?: boolean;\n    ref?: Area;\n};\n\nexport interface IIndexable<T = any> { [key: string]: T; }\n\nexport { Area } from \"./area\";","import { Shape } from './types';\n\nexport function order(s: Shape) {\n    const X = 0;\n    const Y = 1;\n\n    let lu = [...s].sort((a, b) => a[Y] < b[Y] ? -1 : 1).slice(0, 2).sort((a, b) => a[X] < b[X] ? -1 : 1)[0];\n    let i_lu = s.findIndex(p => p === lu);\n\n    const ordered = [];\n    for (let i = 0; i < s.length; i++) {\n        ordered.push(s[(i_lu + i) % s.length]);\n    }\n\n    return ordered;\n}","import React from 'react';\nimport { Tool } from '../utilities/types';\nimport { Button } from '@material-ui/core';\nimport './ToolSelector.scss';\n\ntype ToolSelectorProps = {\n    value?: Tool;\n    onSelect?: () => void;\n    onAdd?: () => void;\n};\n\nexport default function ToolSelector({ value, onSelect, onAdd }: ToolSelectorProps) {\n    return (\n        <div className=\"ToolSelector\">\n            <Button\n                variant={value === Tool.ADD ? \"contained\" : \"outlined\"}\n                color=\"secondary\"\n                onClick={onAdd}\n            >\n                ADD\n            </Button>\n\n            <Button\n                variant={value === Tool.SELECT ? \"contained\" : \"outlined\"}\n                color=\"secondary\"\n                onClick={onSelect}\n            >\n                SELECT\n            </Button>\n        </div>\n    );\n}","import React, { useRef, useState, useEffect, ComponentProps } from 'react';\nimport useMouse from '@react-hook/mouse-position';\nimport './Canvas.scss';\nimport { Area, Point, Shape, Tool } from '../utilities/types';\nimport { distancePointToPoint, projectPointToSegment, findPointIndexInShape, vecSum } from '../utilities/shapes';\n\nconst CANVAS_W = 1920;\nconst CANVAS_H = 1080;\nconst POINT_RADIUS = 5;\nconst SNAP_DISTANCE = 50;\n\nexport interface CanvasProps {\n    img: CanvasImageSource | null;\n    quads: Area[];\n    newQuad: (quad: Area) => void;\n    tool: Tool;\n    setSelected: (index: number) => void;\n    moveSelected: (vector: Point) => void;\n    deleteSelected: () => void;\n    slider?: number;\n    width?: number;\n    height?: number;\n};\n\nexport default function Canvas({\n    img, quads, newQuad, tool, setSelected, moveSelected, deleteSelected, slider, width, height\n}: CanvasProps) {\n\n    const [points, setPoints] = useState<Shape>([]);\n    const [dragging, setDragging] = useState<boolean>(false);\n    const [oldMouse, setOldMouse] = useState<Point | null>(null);\n\n    const ref = useRef<HTMLCanvasElement>(null);\n    const rawMouse = useMouse(ref);\n    const mouse: { x: number | null, y: number | null; } = { x: null, y: null };\n\n    useEffect(() => {\n        const canvas = ref.current;\n        const context = canvas?.getContext('2d');\n        if (!canvas || !context) {\n            return;\n        }\n\n        const ratio = canvas.clientWidth / canvas.width;\n        mouse.x = rawMouse.x ? rawMouse.x / ratio : null;\n        mouse.y = rawMouse.y ? rawMouse.y / ratio : null;\n\n        // Background\n        if (img) {\n            context.drawImage(img, 0, 0, canvas.width, canvas.height);\n        } else {\n            context.fillStyle = '#fff';\n            context.fillRect(0, 0, canvas.width, canvas.height);\n        }\n\n        let movement: Point = [0, 0];\n        // Drag\n        if (dragging && oldMouse) {\n            movement = [mouse.x! - oldMouse[0], mouse.y! - oldMouse[1]] as Point;\n        }\n\n        // Finished Quads\n        for (const quad of quads) {\n            if (quad.isSelected) {\n                context.strokeStyle = '#ff0';\n                context.fillStyle = '#0ff';\n                drawPath(context, quad.shape.map(p => vecSum(p, movement)), true);\n            } else {\n                context.strokeStyle = '#f00';\n                context.fillStyle = '#00f';\n                drawPath(context, quad.shape, true);\n            }\n        }\n\n        if (mouse.x && mouse.y) {\n\n            // New Quad\n            if (points && tool === Tool.ADD) {\n                let close = false;\n                const pos = snapToShapes([mouse.x, mouse.y], quads.map(a => a.shape));\n                let path = [pos, ...points];\n                if (points.length === 3) {\n                    close = true;\n                }\n                context.strokeStyle = '#f00';\n                context.fillStyle = '#00f';\n                drawPath(context, path, true, close);\n            }\n\n\n        }\n    }, [img, quads, tool, rawMouse, points, slider, width]);\n\n    const snapToShapes = (pos: Point, shapes: Shape[]) => {\n        let [minDist, newPoint] = shapes.reduce(([dist, point]: [number, Point | null], s) => {\n\n            // find the most close point in each shape with his distance\n            let [d, p] = s.reduce(([dist, point]: [number, Point | null], p1, i, s) => {\n\n                const p2 = s[(i + 1) % s.length];\n                let proj = projectPointToSegment(pos, [p1, p2]);\n                let d, p;\n                // if we found a projection it is the closest point\n                if (proj) {\n                    d = distancePointToPoint(pos, proj);\n                    p = proj;\n                }\n                // otherwise check wich end of the segment is the closest and pick that one\n                else {\n                    const d1 = distancePointToPoint(pos, p1);\n                    const d2 = distancePointToPoint(pos, p2);\n                    [d, p] = d1 < d2 ? [d1, [...p1] as Point] : [d2, [...p2] as Point]; // ... to force copy\n                }\n\n                // confront it with the previous results\n                if (d < dist || dist === -1) return [d, p];\n                else return [dist, point];\n            }, [-1, null]);\n\n            // confront it with the previous results\n            if (d < dist || dist === -1) return [d, p];\n            else return [dist, point];\n        }, [-1, null]);\n\n        if (newPoint && minDist < SNAP_DISTANCE) {\n            pos = newPoint;\n        }\n        return pos;\n    };\n\n    const addPoint = () => {\n        if (!mouse.x || !mouse.y) {\n            return;\n        }\n\n        let pos: Point = [mouse.x, mouse.y];\n\n        pos = snapToShapes(pos, quads.map(a => a.shape));\n\n        const updatedShape = [pos, ...points];\n\n        if (updatedShape.length === 4) {\n            const newArea = new Area(updatedShape);\n            newArea.isSelected = true;\n            setSelected(-1);\n            newQuad(newArea);\n            setPoints([]);\n        } else {\n            setPoints(updatedShape);\n        }\n    };\n\n    const drawPath = (canvasCtx: CanvasRenderingContext2D, points: [number, number][], f_drawPoints = false, close = true) => {\n        if (points[0])\n            canvasCtx.moveTo(points[0][0], points[0][1]);\n        canvasCtx.beginPath();\n        for (const p of points) {\n            canvasCtx.lineTo(p[0], p[1]);\n        }\n\n        if (close)\n            canvasCtx.closePath();\n\n        canvasCtx.stroke();\n\n        if (f_drawPoints) {\n            for (const p of points)\n                drawPoint(canvasCtx, p);\n        }\n    };\n\n    const drawPoint = (canvasCtx: CanvasRenderingContext2D, point: Point) => {\n        canvasCtx.beginPath();\n        canvasCtx.arc(point[0], point[1], POINT_RADIUS, 0, 2 * 3.15);\n        canvasCtx.closePath();\n        canvasCtx.fill();\n    };\n\n    const handleSelect = () => {\n        const target = findPointIndexInShape([mouse.x, mouse.y] as Point, quads.map(a => a.shape));\n        if (target >= 0 && quads[target].isSelected) {\n            setDragging(true);\n            setOldMouse([mouse.x!, mouse.y!]);\n        } else {\n            setSelected(target);\n        }\n    };\n\n    const onMouseDown = () => {\n        switch (tool) {\n            case Tool.ADD:\n                addPoint();\n                break;\n            case Tool.SELECT:\n                handleSelect();\n                break;\n            default:\n                throw Error(\"No tool selected???\");\n        }\n    };\n    const onMouseUp = () => {\n        if (dragging && oldMouse) {\n            moveSelected([mouse.x! - oldMouse[0], mouse.y! - oldMouse[1]]);\n            setDragging(false);\n            setOldMouse(null);\n        }\n    };\n    const onMouseLeave = () => {\n        setPoints([]);\n        if (dragging) {\n            setDragging(false);\n            setOldMouse(null);\n            deleteSelected();\n        }\n    };\n\n    return (\n        <div className=\"Canvas\">\n            <canvas\n                ref={ref}\n                onMouseDown={onMouseDown}\n                onMouseUp={onMouseUp}\n                onMouseLeave={onMouseLeave}\n                width={width ?? CANVAS_W}\n                height={height ?? CANVAS_H}\n            />\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Clear, Check, CheckBoxOutlined } from '@material-ui/icons';\nimport { order } from '../utilities/data';\nimport { dot, vecSum } from '../utilities/shapes';\nimport { Area, AreaDictionary, IIndexable, Point } from '../utilities/types';\n\nimport './Inspector.scss';\n\ntype InspectorProps = {\n    target: Area[];\n    update: (updated: Area[]) => void;\n    selectById: (id: number) => void;\n};\n\nexport default function Inspector({ target, update, selectById }: InspectorProps) {\n\n    const [inspected, setInspected] = useState<AreaDictionary[]>();\n    const updateInspected = (updated: AreaDictionary, changed = true) => {\n        updated.changed = changed;\n        if (!inspected) return;\n        const unchanged = inspected?.filter(a => a.id !== updated.id);\n        setInspected([updated, ...unchanged].sort((a, b) => a.id < b.id ? -1 : 1));\n    };\n\n    useEffect(() => {\n\n        const selected = target;\n\n        // let selected: Area[] = target.filter(a => a.isSelected);\n        // if (selected.length === 0)\n        //     selected = target;\n\n        let list = selected.map(a => a.toAreaDictionary());\n\n        const pending = inspected?.filter(t => t.changed);\n        list = list.map(a => {\n            const t = pending?.find(t => t.id === a.id);\n            return t ? t : a;\n        });\n\n        list = list.sort((a, b) => a.id < b.id ? -1 : 1);\n\n        setInspected(list);\n    }, [target]);\n\n\n    function renderAD(a: AreaDictionary) {\n\n        const renderPoint = (p: Point, key: string, ref: AreaDictionary) => {\n            return p.map((val, i) => {\n                return (\n                    <td key={`${key}${i}`}>\n                        <input\n                            type=\"number\"\n                            value={Math.round(val)}\n                            onChange={e => {\n                                (ref.points as IIndexable)[key][i] = +e.target.value;\n                                updateInspected(ref);\n                            }}\n                        />\n                    </td>\n                );\n            });\n        };\n\n        const renderedPoints = Object.entries(a.points)\n            .flatMap(([k, v]) => renderPoint(v, k, a));\n\n        const renderedDirection = Object.entries(a.dir)\n            .map(([k, v]) => {\n                return (\n                    <td key={k}>\n                        <input\n                            type=\"number\"\n                            value={v ? 1 : 0}\n                            onChange={e => {\n                                (a.dir as IIndexable)[k] = +e.target.value > 0;\n                                updateInspected(a);\n                            }}\n                        />\n                    </td>\n                );\n            });\n\n        return (\n            <tr key={a.id} onClick={() => selectById(a.id)} className={a.ref?.isSelected ? \"selected\" : \"\"}>\n                {renderedPoints}\n                <td key=\"iscarwalkable\">\n                    <input type=\"checkbox\"\n                        checked={a.carWalk}\n                        onChange={() => {\n                            a.carWalk = !a.carWalk;\n                            updateInspected(a);\n                        }}\n                    />\n                </td>\n                {renderedDirection}\n                <td key=\"isparking\">\n                    <input type=\"checkbox\"\n                        checked={a.parking}\n                        onChange={() => {\n                            a.parking = !a.parking;\n                            updateInspected(a);\n                        }}\n                    />\n                </td>\n                <td key=\"isstop\">\n                    <input\n                        type=\"text\"\n                        value={a.stop ?? \"None\"}\n                        onChange={e => {\n                            a.stop = e.target.value;\n                            updateInspected(a);\n                        }}\n                    />\n                </td>\n                <td className={!a.changed ? \"hide\" : \"space\"} />\n                <td key=\"update\">\n                    <Button variant=\"contained\" color=\"primary\"\n                        className={!a.changed ? \"hide\" : \"\"}\n                        onClick={() => {\n                            updateInspected(a, false);\n                            update([\n                                target.find(t => t.id === a.id)!.fromAreaDictionary(a)\n                            ]);\n                        }}\n                    >\n                        <Check />\n                    </Button>\n                </td>\n                <td key=\"discard\">\n                    <Button variant=\"contained\" color=\"secondary\"\n                        className={!a.changed ? \"hide\" : \"\"}\n                        onClick={() => {\n                            a = target.find(t => t.id === a.id)!.toAreaDictionary();\n                            updateInspected(a, false);\n                        }}\n                    >\n                        <Clear />\n                    </Button>\n                </td>\n            </tr>\n        );\n    }\n\n    return (\n        <div className=\"Inspector\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>luX     </th>\n                        <th>luY     </th>\n                        <th>ruX     </th>\n                        <th>ruY     </th>\n                        <th>rbX     </th>\n                        <th>rbY     </th>\n                        <th>lbX     </th>\n                        <th>lbY     </th>\n                        <th>CarWalk </th>\n                        <th>Left    </th>\n                        <th>Up      </th>\n                        <th>Right   </th>\n                        <th>Down    </th>\n                        <th>Parking </th>\n                        <th>Stop    </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        inspected?.map((a) => renderAD(a))\n                    }\n                </tbody>\n            </table>\n        </div>\n    );\n\n}","import React, { useRef } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Area, AreaDictionary, Point } from '../utilities/types';\n\nimport './IOManager.css';\n\nconst fields = [\n    \"luX\",\n    \"luY\",\n    \"ruX\",\n    \"ruY\",\n    \"rbX\",\n    \"rbY\",\n    \"lbX\",\n    \"lbY\",\n    \"CarWalk\",\n    \"Left\",\n    \"Up\",\n    \"Right\",\n    \"Down\",\n    \"Parking\",\n    \"Stop\",\n];\n\ntype IOMangerProps = {\n    target: Area[];\n    source?: string;\n    load: (arr: Area[]) => void;\n};\n\nexport function IOManager({ target, source, load }: IOMangerProps) {\n    const dlRef = useRef<HTMLAnchorElement>(null);\n    const loadRef = useRef<HTMLInputElement>(null);\n\n    const filename = source ? source.replace(\".mp4\", \"_areas.csv\") : \"areas.csv\";\n\n    const download = () => {\n        const outStr = formatData(target);\n        const blob = new Blob([outStr], { type: 'text/csv;charset=utf-8;' });\n        const dlUrl = URL.createObjectURL(blob);\n        dlRef.current?.setAttribute(\"href\", dlUrl);\n        dlRef.current?.click();\n        URL.revokeObjectURL(dlUrl);\n    };\n\n    const formatData = (target: Area[]) => {\n        const formatted = target.map(formatArea);\n        return [fields.join(',')].concat(formatted).join('\\n');\n    };\n\n    const formatArea = (area: Area) => {\n        const ad = area.toAreaDictionary();\n\n        const points = [ad.points.lu, ad.points.ru, ad.points.rb, ad.points.lb].map(p => p.join(',')).join(',');\n        const carWalk = ad.carWalk ? 1 : 0;\n        const parking = ad.parking ? 1 : 0;\n        const stop = ad.stop;\n        const direction = [ad.dir.left, ad.dir.up, ad.dir.right, ad.dir.down].map(f => f ? 1 : 0).join(',');\n\n        return [points, carWalk, direction, parking, stop].join(',');\n    };\n\n    const loader = async (f: File | null) => {\n        if (!f) {\n            console.error(\"Unable to load file!\");\n            return;\n        }\n        const csv = await f.text();\n        const rows = csv.split('\\n').filter(s => s !== \"\");\n        const strings = rows.slice(1).map(r => r.split(','));\n        const dictionaries = strings.map(r => {\n            let ad: any = { points: {}, dir: {} };\n            const vals: number[] = r.map(v => +v);\n            ad.points.lu = vals.slice(0, 2) as Point;\n            ad.points.ru = vals.slice(2, 4) as Point;\n            ad.points.rb = vals.slice(4, 6) as Point;\n            ad.points.lb = vals.slice(6, 8) as Point;\n            ad.carWalk = vals[8] > 0;\n            ad.dir.left = vals[9] > 0;\n            ad.dir.up = vals[10] > 0;\n            ad.dir.right = vals[11] > 0;\n            ad.dir.down = vals[12] > 0;\n            ad.parking = vals[13] > 0;\n            ad.stop = r[14];\n            return ad as AreaDictionary;\n        });\n        const newAreas = dictionaries.map(ad => new Area().fromAreaDictionary(ad));\n        load(newAreas);\n    };\n\n    return (\n        <div className=\"IOManager\">\n            <Button variant=\"contained\" color=\"primary\"\n                onClick={() => loadRef.current?.click()}\n            >\n                Load CSV\n            </Button>\n            <input hidden\n                type=\"file\"\n                ref={loadRef}\n                accept=\".csv\"\n                onChange={() => loader(loadRef.current?.files?.item(0) ?? null)}\n            />\n\n            <Button variant=\"contained\" color=\"primary\"\n                onClick={download}\n            >\n                Download\n            </Button>\n            <a\n                ref={dlRef}\n                download={filename}\n                hidden\n            />\n        </div >\n    );\n}","import React, { useEffect, useRef, useState } from 'react';\nimport './App.scss';\nimport VideoCanvas from './components/VideoCanvas';\nimport FilePicker from './components/FilePicker';\nimport { Area, Point, Shape, Tool } from './utilities/types';\nimport ToolSelector from './components/ToolSelector';\nimport Canvas from './components/Canvas';\nimport Inspector from './components/Inspector';\nimport { IOManager } from './components/IOManager';\n\n\nexport default function App() {\n\n    const [file, setFile] = useState<File | null>(null);\n    const [videoSrc, setVideoSrc] = useState<string>(\"\");\n    const [video, setVideo] = useState<HTMLVideoElement | null>(null);\n    const [slider, setSlider] = useState<number | undefined>();\n    const [quadList, setQuadList] = useState<Area[]>([]);\n    const [tool, setTool] = useState<Tool>(Tool.ADD);\n\n    useEffect(() => {\n        if (file) {\n            const source = URL.createObjectURL(file);\n            setVideoSrc(source);\n        }\n    }, [file]);\n\n    const moveSelected = (vec: Point) => {\n        // get the selected areas\n        const selected = quadList.filter(a => a.isSelected);\n        // add the vector to the points of the selected areas\n        selected.map(a => {\n            for (const p of a.shape) {\n                p[0] += vec[0];\n                p[1] += vec[1];\n            }\n        });\n        updateQuads(selected);\n    };\n\n    const deleteSelected = () => {\n        const filteredList = quadList.filter(a => !a.isSelected);\n        setQuadList(filteredList);\n    };\n\n    const setSelected = (index: number) => {\n        quadList.map(a => a.isSelected = false);\n        if (index >= 0 && index < quadList.length) {\n            quadList[index].isSelected = true;\n        }\n        setQuadList([...quadList]);\n    };\n\n    const setSelectedById = (id: number) => {\n        setSelected(quadList.findIndex(a => a.id === id));\n    };\n\n    const updateQuads = (quads: Area[]) => {\n        const notUpdated = quadList.filter(a => {\n            for (const b of quads) {\n                if (a.id === b.id)\n                    return false;\n            }\n            return true;\n        });\n        setQuadList([...quads, ...notUpdated]);\n    };\n\n    return (\n        <div className=\"App\">\n            <div>\n                <div className=\"BlockCanvas\">\n                    <Canvas\n                        img={video}\n                        quads={quadList}\n                        newQuad={(quad: Area) => setQuadList([quad, ...quadList])}\n                        tool={tool}\n                        setSelected={setSelected}\n                        moveSelected={moveSelected}\n                        deleteSelected={deleteSelected}\n                        slider={slider}\n                        width={video?.videoWidth || undefined}\n                        height={video?.videoHeight || undefined}\n                    />\n                    <VideoCanvas\n                        source={videoSrc}\n                        setVideo={setVideo}\n                        setSlider={setSlider}\n                        value={slider ?? 0}\n                    />\n                </div>\n                <div className=\"BlockButtons\">\n                    <ToolSelector\n                        value={tool}\n                        onAdd={() => { setTool(Tool.ADD); setSelected(-1); }}\n                        onSelect={() => { setTool(Tool.SELECT); setSelected(-1); }}\n                    />\n                    <FilePicker setFile={setFile} accept_types=\"video/*\" />\n                    <IOManager\n                        target={quadList}\n                        source={file?.name}\n                        load={arr => setQuadList(arr)}\n                    />\n                </div>\n            </div>\n            <div>\n                <Inspector\n                    target={quadList}\n                    update={updateQuads}\n                    selectById={setSelectedById}\n                />\n            </div>\n        </div>\n    );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { blue, red } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: blue[400],\n    },\n    secondary: {\n      main: red[400],\n    },\n  },\n  typography: {\n    button: {\n      fontWeight: \"bold\",\n    },\n  },\n  overrides: {\n    MuiButton: {\n      outlined: {\n        border: \"2px solid !important\",\n      }\n    }\n  }\n\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}