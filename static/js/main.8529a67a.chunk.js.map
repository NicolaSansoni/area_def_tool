{"version":3,"sources":["components/VideoCanvas.tsx","components/FilePicker.tsx","utilities/types.ts","components/ToolSelector.tsx","utilities/shapes.ts","components/Canvas.tsx","components/Inspector.tsx","utilities/data.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["VideoCanvas","source","setVideo","setSlider","value","videoRef","useRef","useEffect","current","src","className","type","min","max","onChange","ev","percentage","currentTime","duration","setVideoPos","target","ref","hidden","FilePicker","Tool","setFile","accept_types","accept","_","files","item","ToolSelector","onSelect","onAdd","SELECT","onClick","ADD","isPointInShape","p","s","res","i","length","edge","distancePointToPoint","a","b","Math","hypot","vecSum","v1","v2","vecSub","v","vecMul","n","Canvas","img","quads","newQuad","tool","selected","setSelected","moveSelected","deleteSelected","slider","useState","points","setPoints","dragging","setDragging","oldMouse","setOldMouse","mouse","useMouse","canvas","context","getContext","drawImage","fillStyle","fillRect","width","height","strokeStyle","quad","drawPath","x","y","path","snapToShapes","movement","pos","shapes","reduce","dist","point","p1","p2","console","log","d","proj","l","vec1","vec2","lineVec","lineLen","lineVecNormalized","pointProjLen","projectPointToSegment","d1","d2","minDist","newPoint","canvasCtx","f_drawPoints","moveTo","beginPath","lineTo","stroke","drawPoint","arc","closePath","fill","handleSelect","findPointIndexInShape","onMouseDown","updatedShape","addPoint","Error","onMouseUp","onMouseLeave","Inspector","csvObj","ol","sort","tmp","order","lu","round","ru","rb","lb","carWalk","direction","left","up","right","down","parking","stop","convertToCSV","formatCSV","App","file","videoSrc","setVideoSrc","video","quadList","setQuadList","setTool","URL","createObjectURL","vec","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8529a67a.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Shape } from '../utilities/types';\r\nimport Canvas, { CanvasProps } from './Canvas';\r\n\r\nimport './VideoCanvas.css';\r\n\r\ntype VideoCanvasProps = {\r\n    source: string;\r\n    setVideo: (video: HTMLVideoElement) => void;\r\n    setSlider: (value: number | undefined) => void;\r\n    value: number;\r\n};\r\n\r\nexport default function VideoCanvas({ source, setVideo, setSlider, value }: VideoCanvasProps) {\r\n\r\n    const videoRef = useRef<HTMLVideoElement>(null);\r\n\r\n\r\n    useEffect(() => {\r\n        if (videoRef.current && source) {\r\n            videoRef.current.src = source;\r\n            setVideo(videoRef.current);\r\n            setSlider(0);\r\n        }\r\n    }, [source]);\r\n\r\n    const setVideoPos = (percentage: number) => {\r\n        if (!videoRef.current) {\r\n            return;\r\n        }\r\n        // force range 0 - 100\r\n        const value = percentage < 0 ? 0 : percentage > 100 ? 100 : percentage;\r\n        videoRef.current.currentTime = value / 100 * videoRef.current.duration;\r\n        setSlider(value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"VideoCanvas\">\r\n            <input className=\"slider\"\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                value={value}\r\n                onChange={ev => { setVideoPos(+ev.target.value); }}\r\n            />\r\n            <video ref={videoRef} hidden />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react';\r\n\r\nimport './FilePicker.css';\r\n\r\ntype FilePickerProps = {\r\n    setFile: (f: File | null) => void,\r\n    accept_types?: string;\r\n};\r\n\r\nfunction FilePicker({ setFile, accept_types = \"\" }: FilePickerProps) {\r\n\r\n    const ref = useRef<HTMLInputElement>(null);\r\n\r\n    return (\r\n        <div className=\"FilePicker\">\r\n            <input\r\n                ref={ref}\r\n                type=\"file\"\r\n                accept={accept_types}\r\n                onChange={_ => setFile(ref.current?.files?.item(0) ?? null)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FilePicker;","export type Point = [number, number];\r\nexport type Shape = Point[];\r\nexport enum Tool { ADD, SELECT };\r\nexport type CSVArea = {\r\n    lu: {\r\n        x: number;\r\n        y: number;\r\n    };\r\n    ru: {\r\n        x: number;\r\n        y: number;\r\n    };\r\n    rb: {\r\n        x: number;\r\n        y: number;\r\n    };\r\n    lb: {\r\n        x: number;\r\n        y: number;\r\n    };\r\n    carWalk: boolean;\r\n    direction: {\r\n        left: boolean;\r\n        up: boolean;\r\n        right: boolean;\r\n        down: boolean;\r\n    };\r\n    parking: boolean;\r\n    stop: null;\r\n};","import React from 'react';\r\nimport { Tool } from '../utilities/types';\r\nimport './ToolSelector.css';\r\n\r\ntype ToolSelectorProps = {\r\n    value?: Tool;\r\n    onSelect?: () => void;\r\n    onAdd?: () => void;\r\n};\r\n\r\nexport default function ToolSelector({ value, onSelect, onAdd }: ToolSelectorProps) {\r\n    return (\r\n        <div className=\"ToolSelector\">\r\n            <button\r\n                className={value === Tool.SELECT ? \"active\" : \"\"}\r\n                onClick={onSelect}\r\n            >\r\n                SELECT\r\n                \r\n            </button>\r\n\r\n            <button\r\n                className={value === Tool.ADD ? \"active\" : \"\"}\r\n                onClick={onAdd}\r\n            >\r\n                ADD\r\n\r\n            </button>\r\n        </div>\r\n    );\r\n}","import { Point, Shape } from './types';\r\n\r\nexport function findPointIndexInShape(target: Point, shapes: Shape[]) {\r\n    for (let i = 0; i < shapes.length; i++) {\r\n        if (isPointInShape(target, shapes[i])) return i;\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function isPointInShape(p: Point, s: Shape) {\r\n    let res = false;\r\n    const X = 0;\r\n    const Y = 1;\r\n    for (let i = 0; i < s.length; i++) {\r\n        // https://www.eecs.umich.edu/courses/eecs380/HANDOUTS/PROJ2/InsidePoly.html\r\n        const edge = [s[i], s[(i + 1) % s.length]];\r\n        if (\r\n            (   // is the point in the Y range of the edge?\r\n                edge[0][Y] <= p[Y] && edge[1][Y] >= p[Y] ||\r\n                edge[1][Y] <= p[Y] && edge[0][Y] >= p[Y]\r\n            )\r\n            &&\r\n            (   // is our point to the left the line that our edge sits on at Y = point[Y]?\r\n                p[X] < (edge[0][X] - edge[1][X]) * (p[Y] - edge[1][Y]) / (edge[0][Y] - edge[1][Y]) + edge[1][X]\r\n            )\r\n        ) {\r\n            res = !res;\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function distancePointToPoint(a: Point, b: Point) {\r\n    // Pitagora\r\n    return Math.hypot(a[0] - b[0], a[1] - b[1]);\r\n}\r\n\r\nfunction badProjectPointToSegment(p: Point, l: [Point, Point]) {\r\n    // WHY DID I EVEN BOTHER WITH ALL OF THIS MATH\r\n    const [x, y] = [p[0], p[1]];\r\n    const [x1, y1] = [l[0][0], l[0][1]];\r\n    const [x2, y2] = [l[1][0], l[1][1]];\r\n\r\n    // find m and q of the segment line\r\n    const m = (y1 - y2) / (x1 - x2);\r\n    const q = (x1 * y2 - x2 * y1) / (x1 - x2);\r\n\r\n    // find m and q of the projection line\r\n    const mproj = -1 / m;\r\n    const qproj = y - mproj * x;\r\n\r\n    // solve the system and find the point that sits on both lines\r\n    const xproj = (qproj - q) / (m - mproj);\r\n    const yproj = m * xproj + q;\r\n\r\n    const proj = [xproj, yproj] as Point;\r\n\r\n    if (\r\n        proj[0] > l[0][0] && proj[0] > l[1][0] || // too far left\r\n        proj[0] < l[0][0] && proj[0] < l[1][0] || // too far right\r\n        proj[1] > l[0][1] && proj[1] > l[1][1] || // too far up\r\n        proj[1] < l[0][1] && proj[1] < l[1][1]    // too far down\r\n    ) {\r\n        return null;\r\n    }\r\n    return proj;\r\n}\r\n\r\nexport function projectPointToSegment(p: Point, l: [Point, Point]): Point | null {\r\n    // WHY DO I ONLY THINK OF VECTORS IN MY FREE TIME AND NOT WHEN I'M ON THE CLOCK??????\r\n    const lineVec = vecSub(l[1], l[0]);\r\n    const lineLen = distancePointToPoint(l[0], l[1]);\r\n    const lineVecNormalized = vecMul(lineVec, 1 / lineLen);\r\n    const pointProjLen = dot(vecSub(p, l[0]), lineVecNormalized);\r\n    if (pointProjLen < 0 || pointProjLen > lineLen) return null; // proj outside the segment\r\n    const pointProj = vecSum(l[0], vecMul(lineVecNormalized, pointProjLen));\r\n    return pointProj;\r\n}\r\n\r\nfunction dot(vec1: Point, vec2: Point) {\r\n    return vec1[0] * vec2[0] + vec1[1] * vec2[1];\r\n}\r\n\r\nfunction vecSum(v1: Point, v2: Point): Point {\r\n    return [v1[0] + v2[0], v1[1] + v2[1]];\r\n}\r\n\r\nfunction vecNegative(v: Point): Point {\r\n    return [-v[0], -v[1]];\r\n}\r\n\r\nfunction vecSub(v1: Point, v2: Point): Point {\r\n    return vecSum(v1, vecNegative(v2));\r\n}\r\n\r\nfunction vecMul(v: Point, n: number): Point {\r\n    return [v[0] * n, v[1] * n];\r\n}","import React, { useRef, useState, useEffect, ComponentProps } from 'react';\r\nimport useMouse from '@react-hook/mouse-position';\r\nimport './Canvas.css';\r\nimport { Point, Shape, Tool } from '../utilities/types';\r\nimport { distancePointToPoint, projectPointToSegment, findPointIndexInShape } from '../utilities/shapes';\r\n\r\nconst CANVAS_W = 1280;\r\nconst CANVAS_H = 720;\r\nconst POINT_RADIUS = 5;\r\nconst SNAP_DISTANCE = 50;\r\n\r\nexport interface CanvasProps {\r\n    img: CanvasImageSource | null;\r\n    quads: Shape[];\r\n    newQuad: (quad: Shape) => void;\r\n    tool: Tool;\r\n    selected: number;\r\n    setSelected: (index: number) => void;\r\n    moveSelected: (vector: Point) => void;\r\n    deleteSelected: () => void;\r\n    slider?: number;\r\n};\r\n\r\nexport default function Canvas({\r\n    img, quads, newQuad,\r\n    tool, selected, setSelected,\r\n    moveSelected, deleteSelected, slider,\r\n}: CanvasProps) {\r\n\r\n    const [points, setPoints] = useState<Shape>([]);\r\n    const [dragging, setDragging] = useState<boolean>(false);\r\n    const [oldMouse, setOldMouse] = useState<Point | null>(null);\r\n\r\n    const ref = useRef<HTMLCanvasElement>(null);\r\n    const mouse = useMouse(ref);\r\n\r\n    useEffect(() => {\r\n        const canvas = ref.current;\r\n        const context = canvas?.getContext('2d');\r\n        if (!canvas || !context) {\r\n            return;\r\n        }\r\n\r\n        if (tool === Tool.ADD) {\r\n            setSelected(-1);\r\n        }\r\n\r\n        // Background\r\n        if (img) {\r\n            context.drawImage(img, 0, 0, CANVAS_W, CANVAS_H);\r\n        } else {\r\n            context.fillStyle = '#fff';\r\n            context.fillRect(0, 0, canvas.width, canvas.height);\r\n        }\r\n\r\n        // Finished Quads\r\n        context.strokeStyle = '#f00';\r\n        context.fillStyle = '#00f';\r\n        for (const quad of quads) {\r\n            drawPath(context, [...quad, quad[0]], true);\r\n        }\r\n\r\n        // Selected Quad\r\n        if (selected >= 0 && quads[selected]) {\r\n            const quad = quads[selected];\r\n            context.strokeStyle = '#ff0';\r\n            context.fillStyle = '#0ff';\r\n            drawPath(context, [...quad, quad[0]], true);\r\n        }\r\n\r\n        if (mouse.x && mouse.y) {\r\n\r\n            // New Quad\r\n            if (points && tool === Tool.ADD) {\r\n                const pos = snapToShapes([mouse.x, mouse.y], quads);\r\n                let path = [pos, ...points];\r\n                if (points.length === 3) {\r\n                    path = [points[2], ...path];\r\n                }\r\n                drawPath(context, path, true);\r\n            }\r\n\r\n            // Drag\r\n            if (dragging && oldMouse && selected >= 0) {\r\n                const movement = [mouse.x - oldMouse[0], mouse.y - oldMouse[1]] as Point;\r\n                moveSelected(movement);\r\n            }\r\n\r\n            setOldMouse([mouse.x, mouse.y]);\r\n        }\r\n    }, [img, quads, tool, mouse, selected, points, slider]);\r\n\r\n    const snapToShapes = (pos: Point, shapes: Shape[]) => {\r\n        let [minDist, newPoint] = shapes.reduce(([dist, point]: [number, Point | null], s) => {\r\n\r\n            // find the most close point in each shape with his distance\r\n            let [d, p] = s.reduce(([dist, point]: [number, Point | null], p1, i, s) => {\r\n\r\n                const p2 = s[(i + 1) % s.length];\r\n                console.log(i, p1, p2);\r\n                let proj = projectPointToSegment(pos, [p1, p2]);\r\n                let d, p;\r\n                // if we found a projection it is the closest point\r\n                if (proj) {\r\n                    d = distancePointToPoint(pos, proj);\r\n                    p = proj;\r\n                }\r\n                // otherwise check wich end of the segment is the closest and pick that one\r\n                else {\r\n                    const d1 = distancePointToPoint(pos, p1);\r\n                    const d2 = distancePointToPoint(pos, p2);\r\n                    [d, p] = d1 < d2 ? [d1, [...p1] as Point] : [d2, [...p2] as Point]; // ... to force copy\r\n                }\r\n\r\n                // confront it with the previous results\r\n                if (d < dist || dist === -1) return [d, p];\r\n                else return [dist, point];\r\n            }, [-1, null]);\r\n\r\n            // confront it with the previous results\r\n            if (d < dist || dist === -1) return [d, p];\r\n            else return [dist, point];\r\n        }, [-1, null]);\r\n\r\n        if (newPoint && minDist < SNAP_DISTANCE) {\r\n            pos = newPoint;\r\n        }\r\n        return pos;\r\n    };\r\n\r\n    const addPoint = () => {\r\n        if (!mouse.x || !mouse.y) {\r\n            return;\r\n        }\r\n\r\n        let pos: Point = [mouse.x, mouse.y];\r\n\r\n        pos = snapToShapes(pos, quads);\r\n\r\n        const updatedShape = [pos, ...points];\r\n\r\n        if (updatedShape.length === 4) {\r\n            newQuad(updatedShape);\r\n            setPoints([]);\r\n        } else {\r\n            setPoints(updatedShape);\r\n        }\r\n    };\r\n\r\n    const drawPath = (canvasCtx: CanvasRenderingContext2D, points: [number, number][], f_drawPoints = false) => {\r\n        if (points[0])\r\n            canvasCtx.moveTo(points[0][0], points[0][1]);\r\n        canvasCtx.beginPath();\r\n        for (const p of points) {\r\n            canvasCtx.lineTo(p[0], p[1]);\r\n        }\r\n        canvasCtx.stroke();\r\n\r\n        if (f_drawPoints) {\r\n            for (const p of points)\r\n                drawPoint(canvasCtx, p);\r\n        }\r\n    };\r\n\r\n    const drawPoint = (canvasCtx: CanvasRenderingContext2D, point: Point) => {\r\n        canvasCtx.beginPath();\r\n        canvasCtx.arc(point[0], point[1], POINT_RADIUS, 0, 2 * 3.15);\r\n        canvasCtx.closePath();\r\n        canvasCtx.fill();\r\n    };\r\n\r\n    const handleSelect = () => {\r\n        const target = findPointIndexInShape([mouse.x, mouse.y] as Point, quads);\r\n        if (target >= 0 && target === selected) {\r\n            setDragging(true);\r\n        } else {\r\n            setSelected(target);\r\n        }\r\n    };\r\n\r\n    const onMouseDown = () => {\r\n        switch (tool) {\r\n            case Tool.ADD:\r\n                addPoint();\r\n                break;\r\n            case Tool.SELECT:\r\n                handleSelect();\r\n                break;\r\n            default:\r\n                throw Error(\"No tool selected???\");\r\n        }\r\n    };\r\n    const onMouseUp = () => {\r\n        setDragging(false);\r\n    };\r\n    const onMouseLeave = () => {\r\n        setPoints([]);\r\n        if (dragging && selected >= 0) {\r\n            deleteSelected();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"Canvas\">\r\n            <canvas\r\n                ref={ref}\r\n                onMouseDown={onMouseDown}\r\n                onMouseUp={onMouseUp}\r\n                onMouseLeave={onMouseLeave}\r\n                width={CANVAS_W}\r\n                height={CANVAS_H}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import { format } from 'path';\r\nimport React, { useEffect } from 'react';\r\nimport { convertToCSV } from '../utilities/data';\r\nimport { CSVArea } from '../utilities/types';\r\n\r\nimport './Inspector.css';\r\n\r\ntype InspectorProps = {\r\n    target: any;\r\n};\r\n\r\nexport default function Inspector({ target }: InspectorProps) {\r\n\r\n    let csvObj = null;\r\n    if (target) csvObj = convertToCSV(target);\r\n\r\n    const formatCSV = (csvObj: CSVArea | null) => {\r\n        if (!csvObj) return;\r\n        return (\r\n            <tr>\r\n                <td>{csvObj.lu.x}        </td>\r\n                <td>{csvObj.lu.y}        </td>\r\n                <td>{csvObj.ru.x}        </td>\r\n                <td>{csvObj.ru.y}        </td>\r\n                <td>{csvObj.rb.x}        </td>\r\n                <td>{csvObj.rb.y}        </td>\r\n                <td>{csvObj.lb.x}        </td>\r\n                <td>{csvObj.lb.y}        </td>\r\n                <td>{csvObj.carWalk}        </td>\r\n                <td>{csvObj.direction.left} </td>\r\n                <td>{csvObj.direction.up}   </td>\r\n                <td>{csvObj.direction.right}</td>\r\n                <td>{csvObj.direction.down} </td>\r\n                <td>{csvObj.parking}        </td>\r\n                <td>{csvObj.stop}        </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"Inspector\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>luX     </th>\r\n                        <th>luY     </th>\r\n                        <th>ruX     </th>\r\n                        <th>ruY     </th>\r\n                        <th>rbX     </th>\r\n                        <th>rbY     </th>\r\n                        <th>lbX     </th>\r\n                        <th>lbY     </th>\r\n                        <th>CarWalk </th>\r\n                        <th>Left    </th>\r\n                        <th>Up      </th>\r\n                        <th>Right   </th>\r\n                        <th>Down    </th>\r\n                        <th>Parking </th>\r\n                        <th>Stop    </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {formatCSV(csvObj)}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n\r\n}","import { Shape, CSVArea } from './types';\r\n\r\nexport function order(s: Shape) {\r\n    const X = 0;\r\n    const Y = 1;\r\n\r\n    // sort up first\r\n    let ol = s.sort((a, b) => a[Y] < b[Y] ? -1 : 1);\r\n\r\n    if (ol[0][X] > ol[1][X]) {\r\n        const tmp = ol[0];\r\n        ol[0] = ol[1];\r\n        ol[1] = tmp;\r\n    }\r\n    if (ol[2][X] < ol[3][X]) {\r\n        const tmp = ol[2];\r\n        ol[2] = ol[3];\r\n        ol[3] = tmp;\r\n    }\r\n    return ol;\r\n}\r\n\r\nexport function convertToCSV(s: Shape): CSVArea {\r\n    const ol = order(s);\r\n    return ({\r\n        lu: {\r\n            x: Math.round(ol[0][0]),\r\n            y: Math.round(ol[0][1]),\r\n        },\r\n        ru: {\r\n            x: Math.round(ol[1][0]),\r\n            y: Math.round(ol[1][1]),\r\n        },\r\n        rb: {\r\n            x: Math.round(ol[2][0]),\r\n            y: Math.round(ol[2][1]),\r\n        },\r\n        lb: {\r\n            x: Math.round(ol[3][0]),\r\n            y: Math.round(ol[3][1]),\r\n        },\r\n        carWalk: true,\r\n\r\n        direction: {\r\n            left: false,\r\n            up: false,\r\n            right: false,\r\n            down: false,\r\n        },\r\n\r\n        parking: false,\r\n\r\n        stop: null,\r\n    });\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport './App.css';\r\nimport VideoCanvas from './components/VideoCanvas';\r\nimport FilePicker from './components/FilePicker';\r\nimport { Point, Shape, Tool } from './utilities/types';\r\nimport ToolSelector from './components/ToolSelector';\r\nimport Canvas from './components/Canvas';\r\nimport Inspector from './components/Inspector';\r\n\r\n\r\nexport default function App() {\r\n\r\n    const [file, setFile] = useState<File | null>(null);\r\n    const [videoSrc, setVideoSrc] = useState<string>(\"\");\r\n    const [video, setVideo] = useState<HTMLVideoElement | null>(null);\r\n    const [slider, setSlider] = useState<number | undefined>();\r\n    const [quadList, setQuadList] = useState<Shape[]>([]);\r\n    const [selected, setSelected] = useState<number>(-1);\r\n    const [tool, setTool] = useState<Tool>(Tool.ADD);\r\n\r\n    useEffect(() => {\r\n        if (file) {\r\n            const source = URL.createObjectURL(file);\r\n            setVideoSrc(source);\r\n        }\r\n    }, [file]);\r\n\r\n    const moveSelected = (vec: Point) => {\r\n        for (const p of quadList[selected]) {\r\n            p[0] += vec[0];\r\n            p[1] += vec[1];\r\n        }\r\n    };\r\n\r\n    const deleteSelected = () => {\r\n        quadList.splice(selected, 1);\r\n        setQuadList(quadList);\r\n        setSelected(-1);\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Canvas\r\n                img={video}\r\n                quads={quadList}\r\n                newQuad={(quad: Shape) => { setQuadList([quad, ...quadList]); }}\r\n                tool={tool}\r\n                selected={selected}\r\n                setSelected={setSelected}\r\n                moveSelected={moveSelected}\r\n                deleteSelected={deleteSelected}\r\n                slider={slider}\r\n            />\r\n            <VideoCanvas\r\n                source={videoSrc}\r\n                setVideo={setVideo}\r\n                setSlider={setSlider}\r\n                value={slider ?? 0}\r\n            />\r\n            <FilePicker setFile={setFile} accept_types=\"video/*\" />\r\n            <ToolSelector\r\n                value={tool}\r\n                onAdd={() => setTool(Tool.ADD)}\r\n                onSelect={() => setTool(Tool.SELECT)}\r\n            />\r\n            <Inspector\r\n                target={quadList[selected]}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}