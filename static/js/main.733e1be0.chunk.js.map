{"version":3,"sources":["components/Video.tsx","components/FilePicker.tsx","utilities/shapes.ts","utilities/area.ts","utilities/types.ts","utilities/data.ts","components/ToolSelector.tsx","components/Canvas.tsx","components/Inspector.tsx","components/IOManager.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Video","source","setVideo","setSlider","videoRef","value","useRef","useEffect","current","src","loader","setTimeout","duration","setVideoPos","percentage","currentTime","className","type","min","max","onChange","ev","target","ref","hidden","FilePicker","setFile","accept_types","Button","variant","color","onClick","click","accept","_","files","item","isPointInShape","p","s","res","i","length","edge","distancePointToPoint","a","b","Math","hypot","projectPointToSegment","l","lineVec","vecSub","lineLen","lineVecNormalized","vecMul","pointProjLen","dot","vecSum","vec1","vec2","v1","v2","v","n","Tool","Area","quad","direction","id","shape","isCarWalkable","isParking","stop","isSelected","this","newId","points","lu","sort","slice","i_lu","findIndex","ordered","push","order","dir","map","x","round","ru","rb","lb","carWalk","left","up","right","down","parking","ad","Object","values","dirs","entries","k","reduce","vec","counter","ToolSelector","onSelect","onAdd","ADD","SELECT","alpha","style1","width","stroke","fill","selected","style2","Canvas","img","quads","newQuad","tool","setSelected","updateQuads","deleteQuads","slider","height","useState","setPoints","dragging","setDragging","oldMouse","setOldMouse","dragIndexes","setDragIndexes","y","mouse","setMouse","canvas","context","getContext","Error","drawImage","e","fillStyle","fillRect","movement","style","lineWidth","strokeStyle","drawPath","some","snapToShapes","filter","close","path","pos","shapes","flat","dist","point","d","minDist","newPoint","p1","p2","proj","canvasCtx","f_drawPoints","moveTo","beginPath","lineTo","closePath","drawPoint","tmpFill","tmpStroke","arc","handleSelect","find","indexes","distance","res_d","res_i","res_is","j","findPointInShapeIndex","onMouseDown","updatedShape","newArea","addPoint","onMouseUp","selectedAreas","updated","onMouseLeave","q","onMouseMove","ratio","clientWidth","topLeft","offsetLeft","offsetTop","pageX","pageY","Inspector","update","selectById","inspected","setInspected","updateInspected","changed","unchanged","renderAD","renderedPoints","flatMap","key","val","renderedDirection","checked","t","fromAreaDictionary","Check","toAreaDictionary","Clear","list","pending","fields","IOManager","load","dlRef","loadRef","filename","replace","formatData","formatted","formatArea","join","concat","area","f","console","error","text","csv","rows","split","strings","r","dictionaries","vals","newAreas","outStr","blob","Blob","dlUrl","URL","createObjectURL","setAttribute","revokeObjectURL","download","App","file","videoSrc","setVideoSrc","video","quadList","setQuadList","setTool","index","notUpdated","every","filteredList","videoWidth","undefined","videoHeight","name","arr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","primary","main","blue","secondary","red","typography","button","fontWeight","overrides","MuiButton","outlined","border","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"oXAWe,SAASA,EAAT,GAAoE,IAAnDC,EAAkD,EAAlDA,OAAQC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,UAExCC,GAFwE,EAArBC,MAExCC,iBAAyB,OAE1CC,qBAAU,WACN,GAAIH,EAASI,SAAWP,EAAQ,CAC5BG,EAASI,QAAQC,IAAMR,EACvBC,EAASE,EAASI,UAEH,SAATE,IACFC,YAAW,WAAO,IAAD,GACb,UAAIP,EAASI,eAAb,aAAI,EAAkBI,UAClBC,EAAY,GACTH,MACR,IAGPA,MAEL,CAACT,IAEJ,IAAMY,EAAc,SAACC,GACjB,GAAKV,EAASI,SAAYP,GAAWa,EAArC,CAIA,IAAMT,EAAQS,EAAa,EAAI,EAAIA,EAAa,IAAM,IAAMA,EAC5DV,EAASI,QAAQO,YAAcV,EAAQ,IAAMD,EAASI,QAAQI,SAC9DT,EAAUE,KAGd,OACI,sBAAKW,UAAU,cAAf,UACI,uBAAOA,UAAU,SACbC,KAAK,QACLC,IAAI,IACJC,IAAI,MACJC,SAAU,SAAAC,GAAQR,GAAaQ,EAAGC,OAAOjB,UAE7C,uBAAOkB,IAAKnB,EAAUoB,QAAM,O,kBCnBzBC,MArBf,YAAsE,IAAhDC,EAA+C,EAA/CA,QAA+C,IAAtCC,oBAAsC,MAAvB,GAAuB,EAE3DJ,EAAMjB,iBAAyB,MAErC,OACI,sBAAKU,UAAU,aAAf,UACI,cAACY,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAC9BC,QAAS,kCAAMR,EAAIf,eAAV,aAAM,EAAawB,SADhC,0BAKA,uBAAOR,QAAM,EACTD,IAAKA,EACLN,KAAK,OACLgB,OAAQN,EACRP,SAAU,SAAAc,GAAC,iBAAIR,EAAO,oBAACH,EAAIf,eAAL,iBAAC,EAAa2B,aAAd,aAAC,EAAoBC,KAAK,UAA1B,QAAgC,a,gBChB/D,SAASC,EAAeC,EAAUC,GAIrC,IAHA,IAAIC,GAAM,EAGDC,EAAI,EAAGA,EAAIF,EAAEG,OAAQD,IAAK,CAE/B,IAAME,EAAO,CAACJ,EAAEE,GAAIF,GAAGE,EAAI,GAAKF,EAAEG,UAG1BC,EAAK,GANP,IAMgBL,EANhB,IAMwBK,EAAK,GAN7B,IAMsCL,EANtC,IAOEK,EAAK,GAPP,IAOgBL,EAPhB,IAOwBK,EAAK,GAP7B,IAOsCL,EAPtC,KAWEA,EAZF,IAYUK,EAAK,GAZf,GAYuBA,EAAK,GAZ5B,KAYsCL,EAXtC,GAW6CK,EAAK,GAXlD,KAW4DA,EAAK,GAXjE,GAWyEA,EAAK,GAX9E,IAWuFA,EAAK,GAZ5F,KAeFH,GAAOA,GAGf,OAAOA,EAGJ,SAASI,EAAqBC,EAAUC,GAE3C,OAAOC,KAAKC,MAAMH,EAAE,GAAKC,EAAE,GAAID,EAAE,GAAKC,EAAE,IAkCrC,SAASG,EAAsBX,EAAUY,GAE5C,IAAMC,EAAUC,EAAOF,EAAE,GAAIA,EAAE,IACzBG,EAAUT,EAAqBM,EAAE,GAAIA,EAAE,IACvCI,EAAoBC,EAAOJ,EAAS,EAAIE,GACxCG,EAAeC,EAAIL,EAAOd,EAAGY,EAAE,IAAKI,GAC1C,OAAIE,EAAe,GAAKA,EAAeH,EAAgB,KACrCK,EAAOR,EAAE,GAAIK,EAAOD,EAAmBE,IAItD,SAASC,EAAIE,EAAaC,GAC7B,OAAOD,EAAK,GAAKC,EAAK,GAAKD,EAAK,GAAKC,EAAK,GAGvC,SAASF,EAAOG,EAAWC,GAC9B,MAAO,CAACD,EAAG,GAAKC,EAAG,GAAID,EAAG,GAAKC,EAAG,IAO/B,SAASV,EAAOS,EAAWC,GAC9B,OAAOJ,EAAOG,EAJP,GADiBE,EAKMD,GAJnB,IAAKC,EAAE,KADf,IAAqBA,EAQrB,SAASR,EAAOQ,EAAUC,GAC7B,MAAO,CAACD,EAAE,GAAKC,EAAGD,EAAE,GAAKC,GC5FtB,ICAKC,EDACC,EAAb,WAWI,WAAYC,EAAcC,GAAoB,yBARrCC,QAQoC,OAPtCC,WAOsC,OANtCC,eAAgB,EAMsB,KALtCH,UAA0B,KAKY,KAJtCI,WAAY,EAI0B,KAHtCC,KAAsB,KAGgB,KAFtCC,YAAa,EAGhBC,KAAKN,GAAKH,EAAKU,QACfD,KAAKL,MAAL,OAAaH,QAAb,IAAaA,IAAQ,CAAC,EAAE,GAAI,GAAI,EAAE,GAAI,GAAI,EAAE,GAAI,GAAI,EAAE,GAAI,IACtDC,IAAWO,KAAKP,UAAYA,GAdxC,oDAqBI,WAAoC,IAAD,IACzBS,EExBP,SAAetC,GAQlB,IAPA,IAGIuC,EAAK,YAAIvC,GAAGwC,MAAK,SAAClC,EAAGC,GAAJ,OAAUD,EAFrB,GAE4BC,EAF5B,IAEoC,EAAI,KAAGkC,MAAM,EAAG,GAAGD,MAAK,SAAClC,EAAGC,GAAJ,OAAUD,EAHtE,GAG6EC,EAH7E,IAGqF,EAAI,KAAG,GAClGmC,EAAO1C,EAAE2C,WAAU,SAAA5C,GAAC,OAAIA,IAAMwC,KAE5BK,EAAU,GACP1C,EAAI,EAAGA,EAAIF,EAAEG,OAAQD,IAC1B0C,EAAQC,KAAK7C,GAAG0C,EAAOxC,GAAKF,EAAEG,SAGlC,OAAOyC,EFYYE,CAAMV,KAAKL,OACpBgB,EAAG,UAAGX,KAAKP,iBAAR,QAAqB,CAAC,EAAG,GAClC,MAAO,CACHC,GAAIM,KAAKN,GACTQ,OAAQ,CACJC,GAAID,EAAO,GAAGU,KAAI,SAAAC,GAAC,OAAIzC,KAAK0C,MAAMD,MAClCE,GAAIb,EAAO,GAAGU,KAAI,SAAAC,GAAC,OAAIzC,KAAK0C,MAAMD,MAClCG,GAAId,EAAO,GAAGU,KAAI,SAAAC,GAAC,OAAIzC,KAAK0C,MAAMD,MAClCI,GAAIf,EAAO,GAAGU,KAAI,SAAAC,GAAC,OAAIzC,KAAK0C,MAAMD,OAEtCK,QAASlB,KAAKJ,cACde,IAAK,CACDQ,KAAMrC,EAAI6B,EAAK,EAAE,EAAG,IAAM,IAC1BS,GAAItC,EAAI6B,EAAK,CAAC,GAAI,IAAM,IACxBU,MAAOvC,EAAI6B,EAAK,CAAC,EAAG,IAAM,IAC1BW,KAAMxC,EAAI6B,EAAK,CAAC,EAAG,IAAM,KAE7BY,QAASvB,KAAKH,UACdC,KAAK,GAAD,iBAAKE,KAAKF,YAAV,QAAkB,QACtBlD,IAAKoD,QAzCjB,gCA6CI,SAAmBwB,GACfxB,KAAKL,MAAQ8B,OAAOC,OAAOF,EAAGtB,QAC9BF,KAAKJ,cAAgB4B,EAAGN,QACxB,IAAMS,EAAO,CACTR,KAAM,EAAE,EAAG,GACXE,MAAO,CAAC,EAAG,GACXD,GAAI,CAAC,GAAI,GACTE,KAAM,CAAC,EAAG,IASd,OAPAtB,KAAKP,UAAYgC,OAAOG,QAAQJ,EAAGb,KAC9BC,KAAI,mCAAEiB,EAAF,iBAAiBF,EAAoBE,GAAK,CAAC,EAAG,MAClDC,QAAO,SAACjE,EAAKkE,GAAN,OAAchD,EAAOlB,EAAKkE,MAEtC/B,KAAKH,UAAY2B,EAAGD,QACpBvB,KAAKF,KAAO0B,EAAG1B,KACf0B,EAAG5E,IAAMoD,KACFA,QA7Df,oBAiBI,WACI,OAAOT,EAAKyC,cAlBpB,KAAazC,EACMyC,QAAU,E,SCDjB1C,O,aAAAA,I,oBAAAA,M,WEOG,SAAS2C,EAAT,GAAsE,IAA9CvG,EAA6C,EAA7CA,MAAOwG,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,MACpD,OACI,sBAAK9F,UAAU,eAAf,UACI,cAACY,EAAA,EAAD,CACIC,QAASxB,IAAU4D,EAAK8C,IAAM,YAAc,WAC5CjF,MAAM,YACNC,QAAS+E,EAHb,iBAQA,cAAClF,EAAA,EAAD,CACIC,QAASxB,IAAU4D,EAAK+C,OAAS,YAAc,WAC/ClF,MAAM,YACNC,QAAS8E,EAHb,uB,YCZNI,G,MAAQ,KAERC,EAAS,CACXC,MAAO,EACPC,OAAO,mBACPC,KAAK,qBAAD,OAAuBJ,EAAvB,KACJK,SAAU,CACNH,MAAO,EACPC,OAAO,oBACPC,KAAK,sBAAD,OAAwBJ,EAAxB,OAINM,EAAS,CACXJ,MAAO,EACPC,OAAO,mBACPC,KAAK,qBAAD,OAAuBJ,EAAvB,KACJK,SAAU,CACNH,MAAO,EACPC,OAAO,oBACPC,KAAK,sBAAD,OAAwBJ,EAAxB,OAiBG,SAASO,EAAT,GAEE,IADbC,EACY,EADZA,IAAKC,EACO,EADPA,MAAOC,EACA,EADAA,QAASC,EACT,EADSA,KAAMC,EACf,EADeA,YAAaC,EAC5B,EAD4BA,YAAaC,EACzC,EADyCA,YAAaC,EACtD,EADsDA,OAAQb,EAC9D,EAD8DA,MAAOc,EACrE,EADqEA,OACrE,EAEgBC,mBAAgB,IAFhC,mBAELrD,EAFK,KAEGsD,EAFH,OAGoBD,oBAAkB,GAHtC,mBAGLE,EAHK,KAGKC,EAHL,OAIoBH,mBAAuB,MAJ3C,mBAILI,EAJK,KAIKC,EAJL,OAK0BL,mBAA0B,MALpD,mBAKLM,EALK,KAKQC,EALR,KAONlH,EAAMjB,iBAA0B,MAP1B,EAQc4H,mBAAoC,CAAE1C,EAAG,EAAGkD,EAAG,IAR7D,mBAQLC,EARK,KAQEC,EARF,KAUZrI,qBAAU,WACN,IAAMsI,EAAStH,EAAIf,QACbsI,EAAO,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAQE,WAAW,MACnC,GAAKF,GAAWC,EAAhB,CAKA,IACI,IAAKrB,EAAK,MAAMuB,MAChBF,EAAQG,UAAUxB,EAAK,EAAG,EAAGoB,EAAO1B,MAAO0B,EAAOZ,QACpD,MAAOiB,GACLJ,EAAQK,UAAY,OACpBL,EAAQM,SAAS,EAAG,EAAGP,EAAO1B,MAAO0B,EAAOZ,QAGhD,IAAIoB,EAAkB,CAAC,EAAG,GAEtBjB,GAAYE,IACZe,EAAW,CAACV,EAAMnD,EAAK8C,EAAS,GAAIK,EAAMD,EAAKJ,EAAS,KAnBhD,oBAuBOZ,GAvBP,yBAuBDvD,EAvBC,QAwBJmF,OAAK,EAELA,EADAnF,EAAKI,cACG2C,EAEAK,EAERpD,EAAKO,aACL4E,EAAQA,EAAMhC,UAElBwB,EAAQS,UAAYD,EAAMnC,MAC1B2B,EAAQU,YAAcF,EAAMlC,OAC5B0B,EAAQK,UAAYG,EAAMjC,KAEtBlD,EAAKO,WACL+E,EAASX,EAAS3E,EAAKG,MAAMiB,KAAI,SAACjD,EAAGG,GACjC,OAAK+F,GAAeA,EAAYkB,MAAK,SAAA1F,GAAC,OAAIA,IAAMvB,KACrCkH,EAAajG,EAAOpB,EAAG+G,GAAW3B,EAAMkC,QAAO,SAAA/G,GAAC,OAAIA,EAAEwB,KAAOF,EAAKE,MAAIkB,KAAI,SAAA1C,GAAC,OAAIA,EAAEyB,UAChFhC,MACZ,GAEJmH,EAASX,EAAS3E,EAAKG,QArB/B,2BAA2B,IAvBf,8BAgDZ,GAAIqE,EAAMnD,GAAKmD,EAAMD,GAGb7D,GAAU+C,IAAS3D,EAAK8C,IAAK,CAC7B,IAAI8C,GAAQ,EAERC,EAAI,CADIH,EAAa,CAAChB,EAAMnD,EAAGmD,EAAMD,GAAIhB,EAAMnC,KAAI,SAAA1C,GAAC,OAAIA,EAAEyB,WACtD,mBAAYO,IACE,IAAlBA,EAAOnC,SACPmH,GAAQ,GAEZf,EAAQS,UAAYrC,EAAOC,MAC3B2B,EAAQU,YAActC,EAAOE,OAC7B0B,EAAQK,UAAYjC,EAAOG,KAC3BoC,EAASX,EAASgB,GAAM,EAAMD,OAKvC,CAACpC,EAAKC,EAAOE,EAAMe,EAAO9D,EAAQmD,EAAQb,IAE7C,IAAMwC,EAAe,SAACI,EAAYC,GAAoB,MAGxBA,EAAOC,OAAOxD,QAAO,WAAwCnE,GAAO,IAAD,mBAA5C4H,EAA4C,KAAtCC,EAAsC,KACnFC,EAAIxH,EAAqBmH,EAAKzH,GACpC,OAAI8H,EAAIF,IAAkB,IAAVA,EAAoB,CAACE,EAAG9H,GAC5B,CAAC4H,EAAMC,KACpB,EAAE,EAAG,OAP0C,mBAG7CE,EAH6C,KAGpCC,EAHoC,KASlD,GAAIA,GAAYD,EAhIF,GAiIVN,EAAMO,MAEL,CAAC,IAAD,EACqBN,EAAOvD,QAAO,WAAwClE,GAAO,IAAD,mBAA5C2H,EAA4C,KAAtCC,EAAsC,OAEjE5H,EAAEkE,QAAO,WAAwC8D,EAAI9H,EAAGF,GAAO,IAIpE6H,EAJmE,mBAAnDF,EAAmD,KAA7CC,EAA6C,KAEjEK,EAAKjI,GAAGE,EAAI,GAAKF,EAAEG,QACrB+H,EAAOxH,EAAsB8G,EAAK,CAACQ,EAAIC,IAG3C,OAAIC,KACAL,EAAIxH,EAAqBmH,EAAKU,IAGtBP,IAAkB,IAAVA,GAAoB,CAACE,EAFjCK,GAID,CAACP,EAAMC,KACf,EAAE,EAAG,OAfsE,mBAEzEC,EAFyE,KAEtE9H,EAFsE,KAkB9E,OAAI8H,EAAIF,IAAkB,IAAVA,EAAoB,CAACE,EAAG9H,GAC5B,CAAC4H,EAAMC,KACpB,EAAE,EAAG,OArBP,mBACAE,EADA,MACSC,EADT,OAuBeD,EA1JN,KA2JNN,EAAMO,GAId,OAAOP,GAyBLN,EAAW,SAACiB,EAAqC7F,GAAoE,IAAxC8F,EAAuC,wDAAjBd,IAAiB,yDAClHhF,EAAO,IACP6F,EAAUE,OAAO/F,EAAO,GAAG,GAAIA,EAAO,GAAG,IAC7C6F,EAAUG,YAH4G,oBAItGhG,GAJsG,IAItH,2BAAwB,CAAC,IAAdvC,EAAa,QACpBoI,EAAUI,OAAOxI,EAAE,GAAIA,EAAE,KALyF,8BActH,GANIuH,GACAa,EAAUK,YAEdL,EAAUtD,SACVsD,EAAUrD,OAENsD,EAAc,CAAC,IAAD,gBACE9F,GADF,IACd,gCAAWvC,EAAX,QACI0I,EAAUN,EAAWpI,IAFX,iCAMhB0I,EAAY,SAACN,EAAqCP,GACpD,IAAMc,EAAUP,EAAUvB,UACpB+B,EAAYR,EAAUlB,YAC5BkB,EAAUvB,UAAY,OACtBuB,EAAUlB,YAAc,OACxBkB,EAAUG,YACVH,EAAUS,IAAIhB,EAAM,GAAIA,EAAM,GAnNjB,EAmNmC,EAAG,KACnDO,EAAUK,YACVL,EAAUrD,OACVqD,EAAUtD,SACVsD,EAAUvB,UAAY8B,EACtBP,EAAUlB,YAAc0B,GAGtBE,EAAe,WAEjB,IAAM9D,EAAWI,EAAM2D,MAAK,SAAAxI,GAAC,OAAIA,EAAE6B,cAC/B4G,EAA2B,KAC/B,GAAIhE,EAAU,CAEV,IACIiE,EADE1G,EAASyC,EAAShD,MAExBgH,EAAU,EAAE,GAJF,MAMezG,EAAO4B,QAAO,WAAiBnE,EAAGG,GAAO,IAAD,mBAAxB+I,EAAwB,KAAjBC,EAAiB,KACvDrB,EAAIxH,EAAqB,CAAC+F,EAAMnD,EAAImD,EAAMD,GAAKpG,GACrD,OAAO8H,EAAIoB,EAAQ,CAACpB,EAAG3H,GAAK,CAAC+I,EAAOC,KACrC,CAAC,KAAM,IATA,mBAWV,GALCF,EANS,KAMCD,EAAQ,GANT,KAWNC,EAzOM,GAyOoB,CAAC,IAAD,EACJ1G,EAAO4B,QAAO,WAAkBnE,EAAGG,EAAGoC,GAAY,IAAD,mBAAjC2G,EAAiC,KAA1BE,EAA0B,KAC7DC,GAAKlJ,EAAI,GAAKoC,EAAOnC,OACrB6H,EAAK1F,EAAO8G,GACZlB,EAAOxH,EAAsB,CAAC0F,EAAMnD,EAAImD,EAAMD,GAAK,CAACpG,EAAGiI,IAC7D,IAAKE,EAAM,MAAO,CAACe,EAAOE,GAC1B,IAAMxB,EAAOtH,EAAqB,CAAC+F,EAAMnD,EAAImD,EAAMD,GAAK+B,GACxD,OAAOP,EAAOsB,EAAQ,CAACtB,EAAM,CAACzH,EAAGkJ,IAAM,CAACH,EAAOE,KAChD,CAAC,IAAK,EAAE,KARe,mBACzBH,EADyB,KACfD,EADe,KAW1BC,EApPM,KAsPFD,EADAjJ,EAAe,CAACsG,EAAMnD,EAAGmD,EAAMD,GAAIpB,EAAShD,OAClC,CAAC,EAAG,EAAG,EAAG,GAEV,MAKtB,GAAIgH,EAEA7C,EAAe6C,GACfjD,GAAY,GACZE,EAAY,CAACI,EAAMnD,EAAImD,EAAMD,QAC1B,CAEH,IAAMpH,EL1QX,SAA+BA,EAAe0I,GACjD,IAAK,IAAIvH,EAAI,EAAGA,EAAIuH,EAAOtH,OAAQD,IAC/B,GAAIJ,EAAef,EAAQ0I,EAAOvH,IAAK,OAAOA,EAElD,OAAQ,EKsQemJ,CAAsB,CAACjD,EAAMnD,EAAGmD,EAAMD,GAAIhB,EAAMnC,KAAI,SAAA1C,GAAC,OAAIA,EAAEyB,UAC1EuD,EAAYvG,KAsDpB,OACI,qBAAKN,UAAU,SAAf,SACI,wBACIO,IAAKA,EACLsK,YAtDQ,WAChB,OAAQjE,GACJ,KAAK3D,EAAK8C,KAzGD,WACb,GAAK4B,EAAMnD,GAAMmD,EAAMD,EAAvB,CAIA,IAAIqB,EAAa,CAACpB,EAAMnD,EAAGmD,EAAMD,GAI3BoD,EAAY,CAFlB/B,EAAMJ,EAAaI,EAAKrC,EAAMnC,KAAI,SAAA1C,GAAC,OAAIA,EAAEyB,WAEvB,mBAAYO,IAE9B,GAA4B,IAAxBiH,EAAapJ,OAAc,CAC3B,IAAMqJ,EAAU,IAAI7H,EAAK4H,GACzBC,EAAQrH,YAAa,EACrBmD,GAAa,GACbF,EAAQoE,GACR5D,EAAU,SAEVA,EAAU2D,IAwFNE,GACA,MACJ,KAAK/H,EAAK+C,OACNoE,IACA,MACJ,QACI,MAAMpC,MAAM,yBA8CZiD,UA3CM,WACd,GAAI7D,GAAYE,EAAU,CACtB,IAAM4D,EAAgBxE,EAAMkC,QAAO,SAAA/G,GAAC,OAAIA,EAAE6B,cACpC2E,EAAkB,CAACV,EAAMnD,EAAK8C,EAAS,GAAIK,EAAMD,EAAKJ,EAAS,IAC/D6D,EAAUD,EAAc3G,KAAI,SAAA1C,GAM9B,OALAA,EAAEyB,MAAQzB,EAAEyB,MAAMiB,KAAI,SAACjD,EAAGG,GACtB,OAAI+F,GAAeA,EAAYkB,MAAK,SAAA1F,GAAC,OAAIA,IAAMvB,KACpCkH,EAAajG,EAAOpB,EAAG+G,GAAW3B,EAAMkC,QAAO,SAAA9G,GAAC,OAAIA,EAAEuB,KAAOxB,EAAEwB,MAAIkB,KAAI,SAAAzC,GAAC,OAAIA,EAAEwB,UAC7EhC,KAETO,KAEXiF,EAAYqE,GACZ9D,GAAY,GACZI,EAAe,MACfF,EAAY,QA6BR6D,aA1BS,WACjBjE,EAAU,IACNC,GAAoC,KAAb,OAAXI,QAAW,IAAXA,OAAA,EAAAA,EAAa9F,UACzB2F,GAAY,GACZE,EAAY,MACZR,EAAYL,EAAMkC,QAAO,SAAAyC,GAAC,OAAIA,EAAE3H,iBAsB5B4H,YAAa,SAAApD,GAAC,OAnBN,SAACA,GACjB,IAAML,EAAStH,EAAIf,QACnB,GAAIqI,EAAQ,CACR,IAAM0D,EAAQ1D,EAAO2D,YAAc3D,EAAO1B,MACpCsF,EAAU,CAAC5D,EAAO6D,WAAY7D,EAAO8D,WAC3C/D,EAAS,CACLpD,GAAI0D,EAAE0D,MAAQH,EAAQ,IAAMF,EAC5B7D,GAAIQ,EAAE2D,MAAQJ,EAAQ,IAAMF,KAYVD,CAAYpD,IAC9B/B,MAAK,OAAEA,QAAF,IAAEA,IAtUN,KAuUDc,OAAM,OAAEA,QAAF,IAAEA,IAtUP,S,0BCSF,SAAS6E,EAAT,GAAoE,IAA/CxL,EAA8C,EAA9CA,OAAQyL,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,WAA8B,EAE5C9E,qBAF4C,mBAEvE+E,EAFuE,KAE5DC,EAF4D,KAGxEC,EAAkB,SAAChB,GAA6C,IAApBiB,IAAmB,yDAEjE,GADAjB,EAAQiB,QAAUA,EACbH,EAAL,CACA,IAAMI,EAAS,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAWrD,QAAO,SAAA/G,GAAC,OAAIA,EAAEwB,KAAO8H,EAAQ9H,MAC1D6I,EAAa,CAACf,GAAD,mBAAakB,IAAWtI,MAAK,SAAClC,EAAGC,GAAJ,OAAUD,EAAEwB,GAAKvB,EAAEuB,IAAM,EAAI,QAyB3E,SAASiJ,EAASzK,GAAoB,IAAD,IAmB3B0K,EAAiBnH,OAAOG,QAAQ1D,EAAEgC,QACnC2I,SAAQ,gBAlBkBC,EAAalM,EAkB/B,mBAAEiF,EAAF,KAAKzC,EAAL,YAlBkB0J,EAkBSjH,EAlBIjF,EAkBDsB,EAANkB,EAjBxBwB,KAAI,SAACmI,EAAKjL,GACf,OACI,6BACI,uBACIxB,KAAK,SACLZ,MAAO0C,KAAK0C,MAAMiI,GAClBtM,SAAU,SAAA8H,GACL3H,EAAIsD,OAAsB4I,GAAKhL,IAAMyG,EAAE5H,OAAOjB,MAC/C8M,EAAgB5L,OAN5B,UAAYkM,GAAZ,OAAkBhL,UAiBxBkL,EAAoBvH,OAAOG,QAAQ1D,EAAEyC,KACtCC,KAAI,YAAa,IAAD,mBAAViB,EAAU,KAAPzC,EAAO,KACb,OACI,6BACI,uBAAO9C,KAAK,WACR2M,QAAS7J,EACT3C,SAAU,WACLyB,EAAEyC,IAAmBkB,IAAO3D,EAAEyC,IAAmBkB,GAClD2G,EAAgBtK,OALnB2D,MAYrB,OACI,qBAAezE,QAAS,kBAAMiL,EAAWnK,EAAEwB,KAAKrD,WAAW,UAAA6B,EAAEtB,WAAF,eAAOmD,YAAa,WAAa,GAA5F,UACK6I,EACD,6BACI,uBAAOtM,KAAK,WACR2M,QAAS/K,EAAEgD,QACXzE,SAAU,WACNyB,EAAEgD,SAAWhD,EAAEgD,QACfsH,EAAgBtK,OALpB,iBASP8K,EACD,6BACI,uBAAO1M,KAAK,WACR2M,QAAS/K,EAAEqD,QACX9E,SAAU,WACNyB,EAAEqD,SAAWrD,EAAEqD,QACfiH,EAAgBtK,OALpB,aASR,6BACI,uBACI5B,KAAK,OACLZ,MAAK,UAAEwC,EAAE4B,YAAJ,QAAY,OACjBrD,SAAU,SAAA8H,GACNrG,EAAE4B,KAAOyE,EAAE5H,OAAOjB,MAClB8M,EAAgBtK,OANpB,UAUR,oBAAI7B,UAAY6B,EAAEuK,QAAmB,QAAT,SAC5B,oBAAiBpM,UAAY6B,EAAEuK,QAAmB,GAAT,OAAzC,SACI,cAACxL,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAE9BC,QAAS,WACLoL,EAAgBtK,GAAG,GACnBkK,EAAO,CACHzL,EAAO+J,MAAK,SAAAwC,GAAC,OAAIA,EAAExJ,KAAOxB,EAAEwB,MAAKyJ,mBAAmBjL,MALhE,SASI,cAACkL,EAAA,EAAD,OAVA,UAaR,oBAAkB/M,UAAY6B,EAAEuK,QAAmB,GAAT,OAA1C,SACI,cAACxL,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAC9Bd,UAAY6B,EAAEuK,QAAmB,GAAT,OACxBrL,QAAS,WACLc,EAAIvB,EAAO+J,MAAK,SAAAwC,GAAC,OAAIA,EAAExJ,KAAOxB,EAAEwB,MAAK2J,mBACrCb,EAAgBtK,GAAG,IAJ3B,SAOI,cAACoL,EAAA,EAAD,OARA,aA7CHpL,EAAEwB,IA4DnB,OAxHA9D,qBAAU,WAEN,IAMI2N,EANa5M,EAMGiE,KAAI,SAAA1C,GAAC,OAAIA,EAAEmL,sBAEzBG,EAAO,OAAGlB,QAAH,IAAGA,OAAH,EAAGA,EAAWrD,QAAO,SAAAiE,GAAC,OAAIA,EAAET,WAMzCc,GALAA,EAAOA,EAAK3I,KAAI,SAAA1C,GACZ,IAAMgL,EAAC,OAAGM,QAAH,IAAGA,OAAH,EAAGA,EAAS9C,MAAK,SAAAwC,GAAC,OAAIA,EAAExJ,KAAOxB,EAAEwB,MACxC,OAAOwJ,GAAQhL,MAGPkC,MAAK,SAAClC,EAAGC,GAAJ,OAAUD,EAAEwB,GAAKvB,EAAEuB,IAAM,EAAI,KAE9C6I,EAAagB,KACd,CAAC5M,IAsGA,qBAAKN,UAAU,YAAf,SACI,kCACI,gCACI,+BACI,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,+CAGR,uCAEQiM,QAFR,IAEQA,OAFR,EAEQA,EAAW1H,KAAI,SAAC1C,GAAD,OAAOyK,EAASzK,a,6BCnKjDuL,G,MAAS,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,UACA,OACA,KACA,QACA,OACA,UACA,SASG,SAASC,EAAT,GAA6D,IAAxC/M,EAAuC,EAAvCA,OAAQrB,EAA+B,EAA/BA,OAAQqO,EAAuB,EAAvBA,KAClCC,EAAQjO,iBAA0B,MAClCkO,EAAUlO,iBAAyB,MAEnCmO,EAAWxO,EAASA,EAAOyO,QAAQ,OAAQ,cAAgB,YAW3DC,EAAa,SAACrN,GAChB,IAAMsN,EAAYtN,EAAOiE,IAAIsJ,GAC7B,MAAO,CAACT,EAAOU,KAAK,MAAMC,OAAOH,GAAWE,KAAK,OAG/CD,EAAa,SAACG,GAChB,IAAM7I,EAAK6I,EAAKhB,mBAEVnJ,EAAS,CAACsB,EAAGtB,OAAOC,GAAIqB,EAAGtB,OAAOa,GAAIS,EAAGtB,OAAOc,GAAIQ,EAAGtB,OAAOe,IAAIL,KAAI,SAAAjD,GAAC,OAAIA,EAAEwM,KAAK,QAAMA,KAAK,KAC7FjJ,EAAUM,EAAGN,QAAU,EAAI,EAC3BK,EAAUC,EAAGD,QAAU,EAAI,EAC3BzB,EAAO0B,EAAG1B,KAGhB,MAAO,CAACI,EAAQgB,EAFE,CAACM,EAAGb,IAAIQ,KAAMK,EAAGb,IAAIS,GAAII,EAAGb,IAAIU,MAAOG,EAAGb,IAAIW,MAAMV,KAAI,SAAA0J,GAAC,OAAIA,EAAI,EAAI,KAAGH,KAAK,KAE3D5I,EAASzB,GAAMqK,KAAK,MAGtDpO,EAAM,uCAAG,WAAOuO,GAAP,uBAAApM,EAAA,yDACNoM,EADM,uBAEPC,QAAQC,MAAM,wBAFP,0CAKOF,EAAEG,OALT,OAKLC,EALK,OAMLC,EAAOD,EAAIE,MAAM,MAAM3F,QAAO,SAAArH,GAAC,MAAU,KAANA,KACnCiN,EAAUF,EAAKtK,MAAM,GAAGO,KAAI,SAAAkK,GAAC,OAAIA,EAAEF,MAAM,QACzCG,EAAeF,EAAQjK,KAAI,SAAAkK,GAC7B,IAAItJ,EAAU,CAAEtB,OAAQ,GAAIS,IAAK,IAC3BqK,EAAiBF,EAAElK,KAAI,SAAAxB,GAAC,OAAKA,KAYnC,OAXAoC,EAAGtB,OAAOC,GAAK6K,EAAK3K,MAAM,EAAG,GAC7BmB,EAAGtB,OAAOa,GAAKiK,EAAK3K,MAAM,EAAG,GAC7BmB,EAAGtB,OAAOc,GAAKgK,EAAK3K,MAAM,EAAG,GAC7BmB,EAAGtB,OAAOe,GAAK+J,EAAK3K,MAAM,EAAG,GAC7BmB,EAAGN,QAAU8J,EAAK,GAAK,EACvBxJ,EAAGb,IAAIQ,KAAO6J,EAAK,GAAK,EACxBxJ,EAAGb,IAAIS,GAAK4J,EAAK,IAAM,EACvBxJ,EAAGb,IAAIU,MAAQ2J,EAAK,IAAM,EAC1BxJ,EAAGb,IAAIW,KAAO0J,EAAK,IAAM,EACzBxJ,EAAGD,QAAUyJ,EAAK,IAAM,EACxBxJ,EAAG1B,KAAOgL,EAAE,IACLtJ,KAELyJ,EAAWF,EAAanK,KAAI,SAAAY,GAAE,OAAI,IAAIjC,GAAO4J,mBAAmB3H,MACtEmI,EAAKsB,GAzBM,4CAAH,sDA4BZ,OACI,sBAAK5O,UAAU,YAAf,UACI,cAACY,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAC9BC,QAAS,kCAAMyM,EAAQhO,eAAd,aAAM,EAAiBwB,SADpC,sBAKA,uBAAOR,QAAM,EACTP,KAAK,OACLM,IAAKiN,EACLvM,OAAO,OACPb,SAAU,4BAAMV,EAAM,oBAAC8N,EAAQhO,eAAT,iBAAC,EAAiB2B,aAAlB,aAAC,EAAwBC,KAAK,UAA9B,QAAoC,SAG9D,cAACR,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAC9BC,QArEK,WAAO,IAAD,IACb8N,EAASlB,EAAWrN,GACpBwO,EAAO,IAAIC,KAAK,CAACF,GAAS,CAAE5O,KAAM,4BAClC+O,EAAQC,IAAIC,gBAAgBJ,GAClC,UAAAvB,EAAM/N,eAAN,SAAe2P,aAAa,OAAQH,GACpC,UAAAzB,EAAM/N,eAAN,SAAewB,QACfiO,IAAIG,gBAAgBJ,IA8DhB,sBAKA,mBACIzO,IAAKgN,EACL8B,SAAU5B,EACVjN,QAAM,OCrGP,SAAS8O,IAAO,IAAD,EAEFpI,mBAAsB,MAFpB,mBAEnBqI,EAFmB,KAEb7O,EAFa,OAGMwG,mBAAiB,IAHvB,mBAGnBsI,EAHmB,KAGTC,EAHS,OAIAvI,mBAAkC,MAJlC,mBAInBwI,EAJmB,KAIZxQ,EAJY,OAKEgI,qBALF,mBAKnBF,EALmB,KAKX7H,EALW,OAMM+H,mBAAiB,IANvB,mBAMnByI,EANmB,KAMTC,EANS,OAOF1I,mBAAejE,EAAK8C,KAPlB,mBAOnBa,EAPmB,KAObiJ,EAPa,KAS1BtQ,qBAAU,WACN,GAAIgQ,EAAM,CACN,IAAMtQ,EAASgQ,IAAIC,gBAAgBK,GACnCE,EAAYxQ,MAEjB,CAACsQ,IAEJ,IAKM1I,EAAc,SAACiJ,GACjBH,EAASpL,KAAI,SAAA1C,GAAC,OAAIA,EAAE6B,YAAa,KAC7BoM,GAAS,GAAKA,EAAQH,EAASjO,SAC/BiO,EAASG,GAAOpM,YAAa,GAEjCkM,EAAY,YAAID,KAOd7I,EAAc,SAACJ,GACjB,IAAMqJ,EAAaJ,EAAS/G,QAAO,SAAA/G,GAAC,OAAI6E,EAAMsJ,OAAM,SAAAlO,GAAC,OAAIA,EAAEuB,KAAOxB,EAAEwB,SACpEuM,EAAY,GAAD,mBAAKlJ,GAAL,YAAeqJ,MAG9B,OACI,sBAAK/P,UAAU,MAAf,UACI,gCACI,sBAAKA,UAAU,cAAf,UACI,cAAC,EAAD,CACIyG,IAAKiJ,EACLhJ,MAAOiJ,EACPhJ,QAAS,SAACxD,GAAD,OAAgByM,EAAY,CAACzM,GAAF,mBAAWwM,MAC/C/I,KAAMA,EACNC,YAAaA,EACbC,YAAaA,EACbC,YAjCA,SAACL,GACjB,IAAMuJ,EAAeN,EAAS/G,QAAO,SAAA/G,GAAC,OAAI6E,EAAMsJ,OAAM,SAAAlO,GAAC,OAAIA,EAAEuB,KAAOxB,EAAEwB,SACtEuM,EAAYK,IAgCIjJ,OAAQA,EACRb,OAAY,OAALuJ,QAAK,IAALA,OAAA,EAAAA,EAAOQ,kBAAcC,EAC5BlJ,QAAa,OAALyI,QAAK,IAALA,OAAA,EAAAA,EAAOU,mBAAeD,IAElC,cAAC,EAAD,CACIlR,OAAQuQ,EACRtQ,SAAUA,EACVC,UAAWA,EACXE,MAAK,OAAE2H,QAAF,IAAEA,IAAU,OAGzB,sBAAKhH,UAAU,eAAf,UACI,cAAC,EAAD,CACIX,MAAOuH,EACPd,MAAO,WAAQ+J,EAAQ5M,EAAK8C,KAAMc,GAAa,IAC/ChB,SAAU,WAAQgK,EAAQ5M,EAAK+C,QAASa,GAAa,MAEzD,cAAC,EAAD,CAAYnG,QAASA,EAASC,aAAa,YAC3C,cAAC,EAAD,CACIL,OAAQqP,EACR1Q,OAAM,OAAEsQ,QAAF,IAAEA,OAAF,EAAEA,EAAMc,KACd/C,KAAM,SAAAgD,GAAG,OAAIV,EAAYU,YAIrC,8BACI,cAAC,EAAD,CACIhQ,OAAQqP,EACR5D,OAAQjF,EACRkF,WAlDQ,SAAC3I,GACrBwD,EAAY8I,EAASzL,WAAU,SAAArC,GAAC,OAAIA,EAAEwB,KAAOA,cCvCrD,IAYekN,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wCCARQ,EAAQC,YAAe,CAC3BC,QAAS,CACPjR,KAAM,OACNkR,QAAS,CACPC,KAAMC,IAAK,MAEbC,UAAW,CACTF,KAAMG,IAAI,OAGdC,WAAY,CACVC,OAAQ,CACNC,WAAY,SAGhBC,UAAW,CACTC,UAAW,CACTC,SAAU,CACRC,OAAQ,4BAOhBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAACC,EAAA,EAAD,CAAelB,MAAOA,EAAtB,UACE,cAACmB,EAAA,EAAD,IACA,cAAC,EAAD,SAGJC,SAASC,eAAe,SAM1B9B,M","file":"static/js/main.733e1be0.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nimport './Video.css';\n\ntype VideoProps = {\n    source: string;\n    setVideo: (video: HTMLVideoElement) => void;\n    setSlider: (value: number | undefined) => void;\n    value: number;\n};\n\nexport default function Video({ source, setVideo, setSlider, value }: VideoProps) {\n\n    const videoRef = useRef<HTMLVideoElement>(null);\n\n    useEffect(() => {\n        if (videoRef.current && source) {\n            videoRef.current.src = source;\n            setVideo(videoRef.current);\n\n            const loader = () => {\n                setTimeout(() => {\n                    if (videoRef.current?.duration) {\n                        setVideoPos(1);\n                    } else loader();\n                }, 10);\n            };\n\n            loader();\n        }\n    }, [source]);\n\n    const setVideoPos = (percentage: number) => {\n        if (!videoRef.current || !source || !percentage) {\n            return;\n        }\n        // force range 0 - 100\n        const value = percentage < 1 ? 1 : percentage > 100 ? 100 : percentage;\n        videoRef.current.currentTime = value / 100 * videoRef.current.duration;\n        setSlider(value);\n    };\n\n    return (\n        <div className=\"VideoCanvas\">\n            <input className=\"slider\"\n                type=\"range\"\n                min=\"1\"\n                max=\"100\"\n                onChange={ev => { setVideoPos(+ev.target.value); }}\n            />\n            <video ref={videoRef} hidden />\n        </div>\n    );\n}\n","import React, { useRef, useEffect, useState } from 'react';\nimport { Button } from '@material-ui/core';\n\nimport './FilePicker.css';\n\ntype FilePickerProps = {\n    setFile: (f: File | null) => void,\n    accept_types?: string;\n};\n\nfunction FilePicker({ setFile, accept_types = \"\" }: FilePickerProps) {\n\n    const ref = useRef<HTMLInputElement>(null);\n\n    return (\n        <div className=\"FilePicker\">\n            <Button variant=\"contained\" color=\"primary\"\n                onClick={() => ref.current?.click()}\n            >\n                Select Video\n            </Button>\n            <input hidden\n                ref={ref}\n                type=\"file\"\n                accept={accept_types}\n                onChange={_ => setFile(ref.current?.files?.item(0) ?? null)}\n            />\n        </div>\n    );\n}\n\nexport default FilePicker;","import { Point, Shape } from './types';\n\nexport function findPointInShapeIndex(target: Point, shapes: Shape[]) {\n    for (let i = 0; i < shapes.length; i++) {\n        if (isPointInShape(target, shapes[i])) return i;\n    }\n    return -1;\n}\n\nexport function isPointInShape(p: Point, s: Shape) {\n    let res = false;\n    const X = 0;\n    const Y = 1;\n    for (let i = 0; i < s.length; i++) {\n        // https://www.eecs.umich.edu/courses/eecs380/HANDOUTS/PROJ2/InsidePoly.html\n        const edge = [s[i], s[(i + 1) % s.length]];\n        if (\n            (   // is the point in the Y range of the edge?\n                edge[0][Y] <= p[Y] && edge[1][Y] >= p[Y] ||\n                edge[1][Y] <= p[Y] && edge[0][Y] >= p[Y]\n            )\n            &&\n            (   // is our point to the left the line that our edge sits on at Y = point[Y]?\n                p[X] < (edge[0][X] - edge[1][X]) * (p[Y] - edge[1][Y]) / (edge[0][Y] - edge[1][Y]) + edge[1][X]\n            )\n        ) {\n            res = !res;\n        }\n    }\n    return res;\n}\n\nexport function distancePointToPoint(a: Point, b: Point) {\n    // Pitagora\n    return Math.hypot(a[0] - b[0], a[1] - b[1]);\n}\n\nfunction badProjectPointToSegment(p: Point, l: [Point, Point]) {\n    // WHY DID I EVEN BOTHER WITH ALL OF THIS MATH\n    const [x, y] = [p[0], p[1]];\n    const [x1, y1] = [l[0][0], l[0][1]];\n    const [x2, y2] = [l[1][0], l[1][1]];\n\n    // find m and q of the segment line\n    const m = (y1 - y2) / (x1 - x2);\n    const q = (x1 * y2 - x2 * y1) / (x1 - x2);\n\n    // find m and q of the projection line\n    const mproj = -1 / m;\n    const qproj = y - mproj * x;\n\n    // solve the system and find the point that sits on both lines\n    const xproj = (qproj - q) / (m - mproj);\n    const yproj = m * xproj + q;\n\n    const proj = [xproj, yproj] as Point;\n\n    if (\n        proj[0] > l[0][0] && proj[0] > l[1][0] || // too far left\n        proj[0] < l[0][0] && proj[0] < l[1][0] || // too far right\n        proj[1] > l[0][1] && proj[1] > l[1][1] || // too far up\n        proj[1] < l[0][1] && proj[1] < l[1][1]    // too far down\n    ) {\n        return null;\n    }\n    return proj;\n}\n\nexport function projectPointToSegment(p: Point, l: [Point, Point]): Point | null {\n    // WHY DO I ONLY THINK OF VECTORS IN MY FREE TIME AND NOT WHEN I'M ON THE CLOCK??????\n    const lineVec = vecSub(l[1], l[0]);\n    const lineLen = distancePointToPoint(l[0], l[1]);\n    const lineVecNormalized = vecMul(lineVec, 1 / lineLen);\n    const pointProjLen = dot(vecSub(p, l[0]), lineVecNormalized);\n    if (pointProjLen < 0 || pointProjLen > lineLen) return null; // proj outside the segment\n    const pointProj = vecSum(l[0], vecMul(lineVecNormalized, pointProjLen));\n    return pointProj;\n}\n\nexport function dot(vec1: Point, vec2: Point) {\n    return vec1[0] * vec2[0] + vec1[1] * vec2[1];\n}\n\nexport function vecSum(v1: Point, v2: Point): Point {\n    return [v1[0] + v2[0], v1[1] + v2[1]];\n}\n\nexport function vecNegative(v: Point): Point {\n    return [-v[0], -v[1]];\n}\n\nexport function vecSub(v1: Point, v2: Point): Point {\n    return vecSum(v1, vecNegative(v2));\n}\n\nexport function vecMul(v: Point, n: number): Point {\n    return [v[0] * n, v[1] * n];\n}","import { order } from './data';\nimport { dot, vecSum } from './shapes';\nimport { AreaDictionary, IIndexable, Point, Shape } from './types';\n\nexport class Area {\n    private static counter = 0;\n\n    readonly id: number;\n    public shape: Shape;\n    public isCarWalkable = true;\n    public direction: Point | null = null;\n    public isParking = false;\n    public stop: string | null = null;\n    public isSelected = false;\n\n    constructor(quad?: Shape, direction?: Point) {\n        this.id = Area.newId();\n        this.shape = quad ?? [[-1, -1], [-1, -1], [-1, -1], [-1, -1]];\n        if (direction) this.direction = direction;\n    }\n\n    static newId() {\n        return Area.counter++;\n    }\n\n    toAreaDictionary(): AreaDictionary {\n        const points = order(this.shape);\n        const dir = this.direction ?? [0, 0];\n        return {\n            id: this.id,\n            points: {\n                lu: points[0].map(x => Math.round(x)) as Point,\n                ru: points[1].map(x => Math.round(x)) as Point,\n                rb: points[2].map(x => Math.round(x)) as Point,\n                lb: points[3].map(x => Math.round(x)) as Point,\n            },\n            carWalk: this.isCarWalkable,\n            dir: {\n                left: dot(dir, [-1, 0]) > .25 ? true : false,\n                up: dot(dir, [0, -1]) > .25 ? true : false,\n                right: dot(dir, [1, 0]) > .25 ? true : false,\n                down: dot(dir, [0, 1]) > .25 ? true : false,\n            },\n            parking: this.isParking,\n            stop: `${this.stop ?? \"None\"}`,\n            ref: this,\n        };\n    }\n\n    fromAreaDictionary(ad: AreaDictionary) {\n        this.shape = Object.values(ad.points);\n        this.isCarWalkable = ad.carWalk;\n        const dirs = {\n            left: [-1, 0],\n            right: [1, 0],\n            up: [0, -1],\n            down: [0, 1],\n        };\n        this.direction = Object.entries(ad.dir)\n            .map(([k, v]) => v ? (dirs as IIndexable)[k] : [0, 0])\n            .reduce((res, vec) => vecSum(res, vec));\n\n        this.isParking = ad.parking;\n        this.stop = ad.stop;\n        ad.ref = this;\n        return this;\n    }\n}","import { Area } from \"./area\";\n\nexport type Point = [number, number];\nexport type Shape = Point[];\nexport enum Tool { ADD, SELECT };\n\nexport type AreaDictionary = {\n    id: number;\n    points: {\n        lu: Point;\n        ru: Point;\n        rb: Point;\n        lb: Point;\n    };\n    carWalk: boolean;\n    dir: {\n        left: boolean;\n        up: boolean;\n        right: boolean;\n        down: boolean;\n    };\n    parking: boolean;\n    stop: string;\n    changed?: boolean;\n    ref?: Area;\n};\n\nexport interface IIndexable<T = any> { [key: string]: T; }\n\nexport { Area } from \"./area\";","import { Shape } from './types';\n\nexport function order(s: Shape) {\n    const X = 0;\n    const Y = 1;\n\n    let lu = [...s].sort((a, b) => a[Y] < b[Y] ? -1 : 1).slice(0, 2).sort((a, b) => a[X] < b[X] ? -1 : 1)[0];\n    let i_lu = s.findIndex(p => p === lu);\n\n    const ordered = [];\n    for (let i = 0; i < s.length; i++) {\n        ordered.push(s[(i_lu + i) % s.length]);\n    }\n\n    return ordered;\n}","import React from 'react';\nimport { Tool } from '../utilities/types';\nimport { Button } from '@material-ui/core';\nimport './ToolSelector.scss';\n\ntype ToolSelectorProps = {\n    value?: Tool;\n    onSelect?: () => void;\n    onAdd?: () => void;\n};\n\nexport default function ToolSelector({ value, onSelect, onAdd }: ToolSelectorProps) {\n    return (\n        <div className=\"ToolSelector\">\n            <Button\n                variant={value === Tool.ADD ? \"contained\" : \"outlined\"}\n                color=\"secondary\"\n                onClick={onAdd}\n            >\n                ADD\n            </Button>\n\n            <Button\n                variant={value === Tool.SELECT ? \"contained\" : \"outlined\"}\n                color=\"secondary\"\n                onClick={onSelect}\n            >\n                SELECT\n            </Button>\n        </div>\n    );\n}","import React, { useRef, useState, useEffect, ComponentProps, MouseEvent } from 'react';\nimport './Canvas.scss';\nimport { Area, Point, Shape, Tool } from '../utilities/types';\nimport { distancePointToPoint, projectPointToSegment, findPointInShapeIndex, vecSum, isPointInShape } from '../utilities/shapes';\n\nconst CANVAS_W = 1920;\nconst CANVAS_H = 1080;\nconst POINT_RADIUS = 5;\nconst SNAP_DISTANCE = 25;\n\nconst alpha = .25;\n\nconst style1 = {\n    width: 2,\n    stroke: `rgb(250, 50, 50)`,\n    fill: `rgba(250, 50, 50, ${alpha})`,\n    selected: {\n        width: 2,\n        stroke: `rgb(255, 200, 50)`,\n        fill: `rgba(255, 200, 50, ${alpha})`,\n    },\n};\n\nconst style2 = {\n    width: 2,\n    stroke: `rgb(50, 50, 250)`,\n    fill: `rgba(50, 50, 250, ${alpha})`,\n    selected: {\n        width: 2,\n        stroke: `rgb(50, 250, 250)`,\n        fill: `rgba(50, 250, 250, ${alpha})`,\n    },\n};\n\nexport interface CanvasProps {\n    img: CanvasImageSource | null;\n    quads: Area[];\n    newQuad: (quad: Area) => void;\n    tool: Tool;\n    setSelected: (index: number) => void;\n    updateQuads: (arr: Area[]) => void;\n    deleteQuads: (arr: Area[]) => void;\n    slider?: number;\n    width?: number;\n    height?: number;\n};\n\nexport default function Canvas({\n    img, quads, newQuad, tool, setSelected, updateQuads, deleteQuads, slider, width, height\n}: CanvasProps) {\n\n    const [points, setPoints] = useState<Shape>([]);\n    const [dragging, setDragging] = useState<boolean>(false);\n    const [oldMouse, setOldMouse] = useState<Point | null>(null);\n    const [dragIndexes, setDragIndexes] = useState<number[] | null>(null);\n\n    const ref = useRef<HTMLCanvasElement>(null);\n    const [mouse, setMouse] = useState<{ x: number, y: number; }>({ x: 0, y: 0 });\n\n    useEffect(() => {\n        const canvas = ref.current;\n        const context = canvas?.getContext('2d');\n        if (!canvas || !context) {\n            return;\n        }\n\n        // Background\n        try {\n            if (!img) throw Error;\n            context.drawImage(img, 0, 0, canvas.width, canvas.height);\n        } catch (e) {\n            context.fillStyle = '#fff';\n            context.fillRect(0, 0, canvas.width, canvas.height);\n        }\n\n        let movement: Point = [0, 0];\n        // Drag\n        if (dragging && oldMouse) {\n            movement = [mouse.x! - oldMouse[0], mouse.y! - oldMouse[1]] as Point;\n        }\n\n        // Finished Quads\n        for (const quad of quads) {\n            let style;\n            if (quad.isCarWalkable) {\n                style = style1;\n            } else {\n                style = style2;\n            }\n            if (quad.isSelected)\n                style = style.selected;\n\n            context.lineWidth = style.width;\n            context.strokeStyle = style.stroke;\n            context.fillStyle = style.fill;\n\n            if (quad.isSelected) {\n                drawPath(context, quad.shape.map((p, i) => {\n                    if (!dragIndexes || dragIndexes.some(n => n === i))\n                        return snapToShapes(vecSum(p, movement), quads.filter(a => a.id !== quad.id).map(a => a.shape));\n                    else return p;\n                }), true);\n            } else {\n                drawPath(context, quad.shape);\n            }\n        }\n\n        if (mouse.x && mouse.y) {\n\n            // New Quad\n            if (points && tool === Tool.ADD) {\n                let close = false;\n                const pos = snapToShapes([mouse.x, mouse.y], quads.map(a => a.shape));\n                let path = [pos, ...points];\n                if (points.length === 3) {\n                    close = true;\n                }\n                context.lineWidth = style1.width;\n                context.strokeStyle = style1.stroke;\n                context.fillStyle = style1.fill;\n                drawPath(context, path, true, close);\n            }\n\n\n        }\n    }, [img, quads, tool, mouse, points, slider, width]);\n\n    const snapToShapes = (pos: Point, shapes: Shape[]) => {\n        // give priority to points instead of edges\n        // find the closest point\n        let [minDist, newPoint] = shapes.flat().reduce(([dist, point]: [number, Point | null], p) => {\n            const d = distancePointToPoint(pos, p);\n            if (d < dist || dist === -1) return [d, p];\n            else return [dist, point];\n        }, [-1, null]);\n\n        if (newPoint && minDist < SNAP_DISTANCE) {\n            pos = newPoint;\n        }\n        else {\n            [minDist, newPoint] = shapes.reduce(([dist, point]: [number, Point | null], s) => {\n                // find the closest point in the edges\n                let [d, p] = s.reduce(([dist, point]: [number, Point | null], p1, i, s) => {\n\n                    const p2 = s[(i + 1) % s.length];\n                    let proj = projectPointToSegment(pos, [p1, p2]);\n                    let d, p;\n                    // if we found a projection it is the closest point\n                    if (proj) {\n                        d = distancePointToPoint(pos, proj);\n                        p = proj;\n                        // confront it with the previous results\n                        if (d < dist || dist === -1) return [d, p];\n                    }\n                    return [dist, point];\n                }, [-1, null]);\n\n                // confront it with the previous results\n                if (d < dist || dist === -1) return [d, p];\n                else return [dist, point];\n            }, [-1, null]);\n\n            if (newPoint && minDist < SNAP_DISTANCE) {\n                pos = newPoint;\n            }\n        }\n\n        return pos;\n    };\n\n    const addPoint = () => {\n        if (!mouse.x || !mouse.y) {\n            return;\n        }\n\n        let pos: Point = [mouse.x, mouse.y];\n\n        pos = snapToShapes(pos, quads.map(a => a.shape));\n\n        const updatedShape = [pos, ...points];\n\n        if (updatedShape.length === 4) {\n            const newArea = new Area(updatedShape);\n            newArea.isSelected = true;\n            setSelected(-1);\n            newQuad(newArea);\n            setPoints([]);\n        } else {\n            setPoints(updatedShape);\n        }\n    };\n\n    const drawPath = (canvasCtx: CanvasRenderingContext2D, points: [number, number][], f_drawPoints = false, close = true) => {\n        if (points[0])\n            canvasCtx.moveTo(points[0][0], points[0][1]);\n        canvasCtx.beginPath();\n        for (const p of points) {\n            canvasCtx.lineTo(p[0], p[1]);\n        }\n\n        if (close)\n            canvasCtx.closePath();\n\n        canvasCtx.stroke();\n        canvasCtx.fill();\n\n        if (f_drawPoints) {\n            for (const p of points)\n                drawPoint(canvasCtx, p);\n        }\n    };\n\n    const drawPoint = (canvasCtx: CanvasRenderingContext2D, point: Point) => {\n        const tmpFill = canvasCtx.fillStyle;\n        const tmpStroke = canvasCtx.strokeStyle;\n        canvasCtx.fillStyle = \"#5f5\";\n        canvasCtx.strokeStyle = \"#000\";\n        canvasCtx.beginPath();\n        canvasCtx.arc(point[0], point[1], POINT_RADIUS, 0, 2 * 3.15);\n        canvasCtx.closePath();\n        canvasCtx.fill();\n        canvasCtx.stroke();\n        canvasCtx.fillStyle = tmpFill;\n        canvasCtx.strokeStyle = tmpStroke;\n    };\n\n    const handleSelect = () => {\n        // check if we have a selected area\n        const selected = quads.find(a => a.isSelected);\n        let indexes: number[] | null = null;\n        if (selected) {\n            // check its closest points and edges to drag them\n            const points = selected.shape;\n            let distance: number;\n            indexes = [-1];\n            // find the closest point to the mouse pointer\n            [distance, indexes[0]] = points.reduce(([res_d, res_i], p, i) => {\n                const d = distancePointToPoint([mouse.x!, mouse.y!], p);\n                return d < res_d ? [d, i] : [res_d, res_i];\n            }, [999, -1]);\n            // if it's too far check if one of the edges is close enough\n            if (distance > SNAP_DISTANCE) {\n                [distance, indexes] = points.reduce(([res_d, res_is], p, i, points) => {\n                    const j = (i + 1) % points.length;\n                    const p1 = points[j];\n                    const proj = projectPointToSegment([mouse.x!, mouse.y!], [p, p1]);\n                    if (!proj) return [res_d, res_is];\n                    const dist = distancePointToPoint([mouse.x!, mouse.y!], proj);\n                    return dist < res_d ? [dist, [i, j]] : [res_d, res_is];\n                }, [999, [-1]]);\n            }\n            // if it's not check if we clicked it and drag the entire shape\n            if (distance > SNAP_DISTANCE) {\n                if (isPointInShape([mouse.x, mouse.y], selected.shape)) {\n                    indexes = [0, 1, 2, 3];\n                } else {\n                    indexes = null;\n                }\n            }\n        }\n\n        if (indexes) {\n            // update the state\n            setDragIndexes(indexes);\n            setDragging(true);\n            setOldMouse([mouse.x!, mouse.y!]);\n        } else {\n            // check if we clicked an area and select it\n            const target = findPointInShapeIndex([mouse.x, mouse.y], quads.map(a => a.shape));\n            setSelected(target);\n        }\n    };\n\n    const onMouseDown = () => {\n        switch (tool) {\n            case Tool.ADD:\n                addPoint();\n                break;\n            case Tool.SELECT:\n                handleSelect();\n                break;\n            default:\n                throw Error(\"No tool selected???\");\n        }\n    };\n    const onMouseUp = () => {\n        if (dragging && oldMouse) {\n            const selectedAreas = quads.filter(a => a.isSelected);\n            const movement: Point = [mouse.x! - oldMouse[0], mouse.y! - oldMouse[1]];\n            const updated = selectedAreas.map(a => {\n                a.shape = a.shape.map((p, i) => {\n                    if (dragIndexes && dragIndexes.some(n => n === i))\n                        return snapToShapes(vecSum(p, movement), quads.filter(b => b.id !== a.id).map(b => b.shape));\n                    else return p;\n                });\n                return a;\n            });\n            updateQuads(updated);\n            setDragging(false);\n            setDragIndexes(null);\n            setOldMouse(null);\n        }\n    };\n    const onMouseLeave = () => {\n        setPoints([]);\n        if (dragging && dragIndexes?.length === 4) {\n            setDragging(false);\n            setOldMouse(null);\n            deleteQuads(quads.filter(q => q.isSelected));\n        }\n    };\n    const onMouseMove = (e: React.MouseEvent) => {\n        const canvas = ref.current;\n        if (canvas) {\n            const ratio = canvas.clientWidth / canvas.width;\n            const topLeft = [canvas.offsetLeft, canvas.offsetTop];\n            setMouse({\n                x: (e.pageX - topLeft[0]) / ratio,\n                y: (e.pageY - topLeft[1]) / ratio,\n            });\n        }\n    };\n\n    return (\n        <div className=\"Canvas\">\n            <canvas\n                ref={ref}\n                onMouseDown={onMouseDown}\n                onMouseUp={onMouseUp}\n                onMouseLeave={onMouseLeave}\n                onMouseMove={e => onMouseMove(e)}\n                width={width ?? CANVAS_W}\n                height={height ?? CANVAS_H}\n            />\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Clear, Check, CheckBoxOutlined } from '@material-ui/icons';\nimport { order } from '../utilities/data';\nimport { dot, vecSum } from '../utilities/shapes';\nimport { Area, AreaDictionary, IIndexable, Point } from '../utilities/types';\n\nimport './Inspector.scss';\n\ntype InspectorProps = {\n    target: Area[];\n    update: (updated: Area[]) => void;\n    selectById: (id: number) => void;\n};\n\nexport default function Inspector({ target, update, selectById }: InspectorProps) {\n\n    const [inspected, setInspected] = useState<AreaDictionary[]>();\n    const updateInspected = (updated: AreaDictionary, changed = true) => {\n        updated.changed = changed;\n        if (!inspected) return;\n        const unchanged = inspected?.filter(a => a.id !== updated.id);\n        setInspected([updated, ...unchanged].sort((a, b) => a.id < b.id ? -1 : 1));\n    };\n\n    useEffect(() => {\n\n        const selected = target;\n\n        // let selected: Area[] = target.filter(a => a.isSelected);\n        // if (selected.length === 0)\n        //     selected = target;\n\n        let list = selected.map(a => a.toAreaDictionary());\n\n        const pending = inspected?.filter(t => t.changed);\n        list = list.map(a => {\n            const t = pending?.find(t => t.id === a.id);\n            return t ? t : a;\n        });\n\n        list = list.sort((a, b) => a.id < b.id ? -1 : 1);\n\n        setInspected(list);\n    }, [target]);\n\n\n    function renderAD(a: AreaDictionary) {\n\n        const renderPoint = (p: Point, key: string, ref: AreaDictionary) => {\n            return p.map((val, i) => {\n                return (\n                    <td key={`${key}${i}`}>\n                        <input\n                            type=\"number\"\n                            value={Math.round(val)}\n                            onChange={e => {\n                                (ref.points as IIndexable)[key][i] = +e.target.value;\n                                updateInspected(ref);\n                            }}\n                        />\n                    </td>\n                );\n            });\n        };\n\n        const renderedPoints = Object.entries(a.points)\n            .flatMap(([k, v]) => renderPoint(v, k, a));\n\n        const renderedDirection = Object.entries(a.dir)\n            .map(([k, v]) => {\n                return (\n                    <td key={k}>\n                        <input type=\"checkbox\"\n                            checked={v}\n                            onChange={() => {\n                                (a.dir as IIndexable)[k] = !(a.dir as IIndexable)[k];\n                                updateInspected(a);\n                            }}\n                        />\n                    </td>\n                );\n            });\n\n        return (\n            <tr key={a.id} onClick={() => selectById(a.id)} className={a.ref?.isSelected ? \"selected\" : \"\"}>\n                {renderedPoints}\n                <td key=\"iscarwalkable\">\n                    <input type=\"checkbox\"\n                        checked={a.carWalk}\n                        onChange={() => {\n                            a.carWalk = !a.carWalk;\n                            updateInspected(a);\n                        }}\n                    />\n                </td>\n                {renderedDirection}\n                <td key=\"isparking\">\n                    <input type=\"checkbox\"\n                        checked={a.parking}\n                        onChange={() => {\n                            a.parking = !a.parking;\n                            updateInspected(a);\n                        }}\n                    />\n                </td>\n                <td key=\"isstop\">\n                    <input\n                        type=\"text\"\n                        value={a.stop ?? \"None\"}\n                        onChange={e => {\n                            a.stop = e.target.value;\n                            updateInspected(a);\n                        }}\n                    />\n                </td>\n                <td className={!a.changed ? \"hide\" : \"space\"} />\n                <td key=\"update\" className={!a.changed ? \"hide\" : \"\"}>\n                    <Button variant=\"contained\" color=\"primary\"\n\n                        onClick={() => {\n                            updateInspected(a, false);\n                            update([\n                                target.find(t => t.id === a.id)!.fromAreaDictionary(a)\n                            ]);\n                        }}\n                    >\n                        <Check />\n                    </Button>\n                </td>\n                <td key=\"discard\" className={!a.changed ? \"hide\" : \"\"}>\n                    <Button variant=\"contained\" color=\"secondary\"\n                        className={!a.changed ? \"hide\" : \"\"}\n                        onClick={() => {\n                            a = target.find(t => t.id === a.id)!.toAreaDictionary();\n                            updateInspected(a, false);\n                        }}\n                    >\n                        <Clear />\n                    </Button>\n                </td>\n            </tr>\n        );\n    }\n\n    return (\n        <div className=\"Inspector\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>luX     </th>\n                        <th>luY     </th>\n                        <th>ruX     </th>\n                        <th>ruY     </th>\n                        <th>rbX     </th>\n                        <th>rbY     </th>\n                        <th>lbX     </th>\n                        <th>lbY     </th>\n                        <th>CarWalk </th>\n                        <th>Left    </th>\n                        <th>Up      </th>\n                        <th>Right   </th>\n                        <th>Down    </th>\n                        <th>Parking </th>\n                        <th>Stop    </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        inspected?.map((a) => renderAD(a))\n                    }\n                </tbody>\n            </table>\n        </div>\n    );\n\n}","import React, { useRef } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Area, AreaDictionary, Point } from '../utilities/types';\n\nimport './IOManager.css';\n\nconst fields = [\n    \"luX\",\n    \"luY\",\n    \"ruX\",\n    \"ruY\",\n    \"rbX\",\n    \"rbY\",\n    \"lbX\",\n    \"lbY\",\n    \"CarWalk\",\n    \"Left\",\n    \"Up\",\n    \"Right\",\n    \"Down\",\n    \"Parking\",\n    \"Stop\",\n];\n\ntype IOMangerProps = {\n    target: Area[];\n    source?: string;\n    load: (arr: Area[]) => void;\n};\n\nexport function IOManager({ target, source, load }: IOMangerProps) {\n    const dlRef = useRef<HTMLAnchorElement>(null);\n    const loadRef = useRef<HTMLInputElement>(null);\n\n    const filename = source ? source.replace(\".mp4\", \"_areas.csv\") : \"areas.csv\";\n\n    const download = () => {\n        const outStr = formatData(target);\n        const blob = new Blob([outStr], { type: 'text/csv;charset=utf-8;' });\n        const dlUrl = URL.createObjectURL(blob);\n        dlRef.current?.setAttribute(\"href\", dlUrl);\n        dlRef.current?.click();\n        URL.revokeObjectURL(dlUrl);\n    };\n\n    const formatData = (target: Area[]) => {\n        const formatted = target.map(formatArea);\n        return [fields.join(',')].concat(formatted).join('\\n');\n    };\n\n    const formatArea = (area: Area) => {\n        const ad = area.toAreaDictionary();\n\n        const points = [ad.points.lu, ad.points.ru, ad.points.rb, ad.points.lb].map(p => p.join(',')).join(',');\n        const carWalk = ad.carWalk ? 1 : 0;\n        const parking = ad.parking ? 1 : 0;\n        const stop = ad.stop;\n        const direction = [ad.dir.left, ad.dir.up, ad.dir.right, ad.dir.down].map(f => f ? 1 : 0).join(',');\n\n        return [points, carWalk, direction, parking, stop].join(',');\n    };\n\n    const loader = async (f: File | null) => {\n        if (!f) {\n            console.error(\"Unable to load file!\");\n            return;\n        }\n        const csv = await f.text();\n        const rows = csv.split('\\n').filter(s => s !== \"\");\n        const strings = rows.slice(1).map(r => r.split(','));\n        const dictionaries = strings.map(r => {\n            let ad: any = { points: {}, dir: {} };\n            const vals: number[] = r.map(v => +v);\n            ad.points.lu = vals.slice(0, 2) as Point;\n            ad.points.ru = vals.slice(2, 4) as Point;\n            ad.points.rb = vals.slice(4, 6) as Point;\n            ad.points.lb = vals.slice(6, 8) as Point;\n            ad.carWalk = vals[8] > 0;\n            ad.dir.left = vals[9] > 0;\n            ad.dir.up = vals[10] > 0;\n            ad.dir.right = vals[11] > 0;\n            ad.dir.down = vals[12] > 0;\n            ad.parking = vals[13] > 0;\n            ad.stop = r[14];\n            return ad as AreaDictionary;\n        });\n        const newAreas = dictionaries.map(ad => new Area().fromAreaDictionary(ad));\n        load(newAreas);\n    };\n\n    return (\n        <div className=\"IOManager\">\n            <Button variant=\"contained\" color=\"primary\"\n                onClick={() => loadRef.current?.click()}\n            >\n                Load CSV\n            </Button>\n            <input hidden\n                type=\"file\"\n                ref={loadRef}\n                accept=\".csv\"\n                onChange={() => loader(loadRef.current?.files?.item(0) ?? null)}\n            />\n\n            <Button variant=\"contained\" color=\"primary\"\n                onClick={download}\n            >\n                Download\n            </Button>\n            <a\n                ref={dlRef}\n                download={filename}\n                hidden\n            />\n        </div >\n    );\n}","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport Video from './components/Video';\nimport FilePicker from './components/FilePicker';\nimport { Area, Point, Shape, Tool } from './utilities/types';\nimport ToolSelector from './components/ToolSelector';\nimport Canvas from './components/Canvas';\nimport Inspector from './components/Inspector';\nimport { IOManager } from './components/IOManager';\n\n\nexport default function App() {\n\n    const [file, setFile] = useState<File | null>(null);\n    const [videoSrc, setVideoSrc] = useState<string>(\"\");\n    const [video, setVideo] = useState<HTMLVideoElement | null>(null);\n    const [slider, setSlider] = useState<number | undefined>();\n    const [quadList, setQuadList] = useState<Area[]>([]);\n    const [tool, setTool] = useState<Tool>(Tool.ADD);\n\n    useEffect(() => {\n        if (file) {\n            const source = URL.createObjectURL(file);\n            setVideoSrc(source);\n        }\n    }, [file]);\n\n    const deleteQuads = (quads: Area[]) => {\n        const filteredList = quadList.filter(a => quads.every(b => b.id !== a.id));\n        setQuadList(filteredList);\n    };\n\n    const setSelected = (index: number) => {\n        quadList.map(a => a.isSelected = false);\n        if (index >= 0 && index < quadList.length) {\n            quadList[index].isSelected = true;\n        }\n        setQuadList([...quadList]);\n    };\n\n    const setSelectedById = (id: number) => {\n        setSelected(quadList.findIndex(a => a.id === id));\n    };\n\n    const updateQuads = (quads: Area[]) => {\n        const notUpdated = quadList.filter(a => quads.every(b => b.id !== a.id));\n        setQuadList([...quads, ...notUpdated]);\n    };\n\n    return (\n        <div className=\"App\">\n            <div>\n                <div className=\"BlockCanvas\">\n                    <Canvas\n                        img={video}\n                        quads={quadList}\n                        newQuad={(quad: Area) => setQuadList([quad, ...quadList])}\n                        tool={tool}\n                        setSelected={setSelected}\n                        updateQuads={updateQuads}\n                        deleteQuads={deleteQuads}\n                        slider={slider}\n                        width={video?.videoWidth || undefined}\n                        height={video?.videoHeight || undefined}\n                    />\n                    <Video\n                        source={videoSrc}\n                        setVideo={setVideo}\n                        setSlider={setSlider}\n                        value={slider ?? 0}\n                    />\n                </div>\n                <div className=\"BlockButtons\">\n                    <ToolSelector\n                        value={tool}\n                        onAdd={() => { setTool(Tool.ADD); setSelected(-1); }}\n                        onSelect={() => { setTool(Tool.SELECT); setSelected(-1); }}\n                    />\n                    <FilePicker setFile={setFile} accept_types=\"video/*\" />\n                    <IOManager\n                        target={quadList}\n                        source={file?.name}\n                        load={arr => setQuadList(arr)}\n                    />\n                </div>\n            </div>\n            <div>\n                <Inspector\n                    target={quadList}\n                    update={updateQuads}\n                    selectById={setSelectedById}\n                />\n            </div>\n        </div>\n    );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { blue, red } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: blue[400],\n    },\n    secondary: {\n      main: red[400],\n    },\n  },\n  typography: {\n    button: {\n      fontWeight: \"bold\",\n    },\n  },\n  overrides: {\n    MuiButton: {\n      outlined: {\n        border: \"2px solid !important\",\n      }\n    }\n  }\n\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}