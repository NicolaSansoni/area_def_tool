{"version":3,"sources":["components/VideoCanvas.tsx","components/FilePicker.tsx","utilities/types.ts","components/ToolSelector.tsx","utilities/shapes.ts","components/Canvas.tsx","components/Inspector.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["VideoCanvas","source","setVideo","setSlider","videoRef","useRef","useEffect","current","src","className","type","min","max","onChange","ev","percentage","value","currentTime","duration","setVideoPos","target","ref","hidden","FilePicker","Tool","setFile","accept_types","accept","_","files","item","ToolSelector","onSelect","onAdd","SELECT","onClick","ADD","pointInShape","p","s","res","i","length","edge","Canvas","img","quads","newQuad","tool","selected","setSelected","moveSelected","slider","useState","points","setPoints","dragging","setDragging","oldMouse","setOldMouse","mouse","useMouse","canvas","context","getContext","drawImage","fillStyle","fillRect","width","height","strokeStyle","quad","drawPath","x","y","path","movement","canvasCtx","f_drawPoints","moveTo","beginPath","lineTo","stroke","drawPoint","point","arc","closePath","fill","handleSelect","shapes","findShapeIndex","onMouseDown","updatedShape","addPoint","Error","onMouseUp","onMouseLeave","Inspector","JSON","stringify","App","file","videoSrc","setVideoSrc","video","quadList","setQuadList","setTool","URL","createObjectURL","vec","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b91547cc.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Shape } from '../utilities/types';\nimport Canvas, { CanvasProps } from './Canvas';\n\nimport './VideoCanvas.css';\n\ntype VideoCanvasProps = {\n    source: string;\n    setVideo: (video: HTMLVideoElement) => void;\n    setSlider: (value: number | undefined) => void;\n};\n\nexport default function VideoCanvas({ source, setVideo, setSlider }: VideoCanvasProps) {\n\n    const videoRef = useRef<HTMLVideoElement>(null);\n\n    useEffect(() => {\n        if (videoRef.current && source) {\n            videoRef.current.src = source;\n            setVideo(videoRef.current);\n        }\n    }, [source]);\n\n    const setVideoPos = (percentage: number) => {\n        if (!videoRef.current) {\n            return;\n        }\n        // force range 0 - 100\n        const value = percentage < 0 ? 0 : percentage > 100 ? 100 : percentage;\n        videoRef.current.currentTime = value / 100 * videoRef.current.duration;\n        setSlider(value);\n    };\n\n    return (\n        <div className=\"VideoCanvas\">\n            <input className=\"slider\"\n                type=\"range\"\n                min=\"0\"\n                max=\"100\"\n                onChange={ev => { setVideoPos(+ev.target.value); }}\n            />\n            <video ref={videoRef} hidden />\n        </div>\n    );\n}\n","import React, { useRef, useEffect, useState } from 'react';\n\nimport './FilePicker.css';\n\ntype FilePickerProps = {\n    setFile: (f: File | null) => void,\n    accept_types?: string;\n};\n\nfunction FilePicker({ setFile, accept_types = \"\" }: FilePickerProps) {\n\n    const ref = useRef<HTMLInputElement>(null);\n\n    return (\n        <div className=\"FilePicker\">\n            <input\n                ref={ref}\n                type=\"file\"\n                accept={accept_types}\n                onChange={_ => setFile(ref.current?.files?.item(0) ?? null)}\n            />\n        </div>\n    );\n}\n\nexport default FilePicker;","import { ADDRCONFIG } from \"dns\";\n\nexport type Point = [number, number];\nexport type Shape = Point[];\nexport enum Tool { ADD, SELECT };","import React from 'react';\nimport { Tool } from '../utilities/types';\nimport './ToolSelector.css';\n\ntype ToolSelectorProps = {\n    value?: Tool;\n    onSelect?: () => void;\n    onAdd?: () => void;\n};\n\nexport default function ToolSelector({ value, onSelect, onAdd }: ToolSelectorProps) {\n    return (\n        <div className=\"ToolSelector\">\n            <button\n                className={value === Tool.SELECT ? \"active\" : \"\"}\n                onClick={onSelect}\n            >\n                SELECT\n                \n            </button>\n\n            <button\n                className={value === Tool.ADD ? \"active\" : \"\"}\n                onClick={onAdd}\n            >\n                ADD\n\n            </button>\n        </div>\n    );\n}","import { SSL_OP_SSLEAY_080_CLIENT_DH_BUG } from 'constants';\nimport { Point, Shape } from './types';\n\nexport function findShapeIndex(target: Point, shapes: Shape[]) {\n    for (let i = 0; i < shapes.length; i++) {\n        if (pointInShape(target, shapes[i])) return i;\n    }\n    return -1;\n}\n\nexport function pointInShape(p: Point, s: Shape) {\n    let res = false;\n    const X = 0;\n    const Y = 1;\n    for (let i = 0; i < s.length; i++) {\n        // https://www.eecs.umich.edu/courses/eecs380/HANDOUTS/PROJ2/InsidePoly.html\n        const edge = [s[i], s[(i + 1) % s.length]];\n        if (\n            ( // is the point in the Y range of the edge?\n                edge[0][Y] <= p[Y] && edge[1][Y] >= p[Y] ||\n                edge[1][Y] <= p[Y] && edge[0][Y] >= p[Y]\n            )\n            &&\n            (\n                p[X] < (edge[0][X] - edge[1][X]) * (p[Y] - edge[1][Y]) / (edge[0][Y] - edge[1][Y]) + edge[1][X]\n            )\n        ) {\n            res = !res;\n        }\n    }\n    return res;\n}","import React, { useRef, useState, useEffect, ComponentProps } from 'react';\nimport useMouse from '@react-hook/mouse-position';\nimport './Canvas.css';\nimport { Point, Shape, Tool } from '../utilities/types';\nimport { findShapeIndex } from '../utilities/shapes';\n\nconst CANVAS_W = 1280;\nconst CANVAS_H = 720;\nconst POINT_RADIUS = 5;\n\nexport interface CanvasProps {\n    img: CanvasImageSource | null;\n    quads: Shape[];\n    newQuad: (quad: Shape) => void;\n    tool: Tool;\n    selected: number;\n    setSelected: (index: number) => void;\n    moveSelected: (vector: Point) => void;\n    slider?: number;\n};\n\nexport default function Canvas({ img, quads, newQuad, tool, selected, setSelected, moveSelected, slider }: CanvasProps) {\n\n    const [points, setPoints] = useState<Shape>([]);\n    const [dragging, setDragging] = useState<boolean>(false);\n    const [oldMouse, setOldMouse] = useState<Point | null>(null);\n\n    const ref = useRef<HTMLCanvasElement>(null);\n    const mouse = useMouse(ref);\n\n    useEffect(() => {\n        const canvas = ref.current;\n        const context = canvas?.getContext('2d');\n        if (!canvas || !context) {\n            return;\n        }\n\n        if (tool === Tool.ADD) {\n            setSelected(-1);\n        }\n\n        // Background\n        if (img) {\n            context.drawImage(img, 0, 0, CANVAS_W, CANVAS_H);\n        } else {\n            context.fillStyle = '#fff';\n            context.fillRect(0, 0, canvas.width, canvas.height);\n        }\n\n        // Finished Quads\n        context.strokeStyle = '#f00';\n        context.fillStyle = '#00f';\n        for (const quad of quads) {\n            drawPath(context, [...quad, quad[0]], true);\n        }\n\n        // Selected Quad\n        if (selected >= 0 && quads[selected]) {\n            const quad = quads[selected];\n            context.strokeStyle = '#ff0';\n            context.fillStyle = '#0ff';\n            drawPath(context, [...quad, quad[0]], true);\n        }\n\n        if (mouse.x && mouse.y) {\n\n            // New Quad\n            if (points) {\n                let path = [[mouse.x, mouse.y] as Point, ...points];\n                if (points.length === 3) {\n                    path = [points[2], ...path];\n                }\n                drawPath(context, path, true);\n            }\n\n            // Drag\n            if (dragging && oldMouse) {\n                const movement = [mouse.x - oldMouse[0], mouse.y - oldMouse[1]] as Point;\n                moveSelected(movement);\n            }\n\n            setOldMouse([mouse.x, mouse.y]);\n        }\n    }, [img, quads, tool, mouse, selected, points, slider]);\n\n    const addPoint = () => {\n        if (!mouse.x || !mouse.y) {\n            return;\n        }\n        const updatedShape = [[mouse.x, mouse.y] as Point, ...points];\n\n        if (updatedShape.length === 4) {\n            newQuad(updatedShape);\n            setPoints([]);\n        } else {\n            setPoints(updatedShape);\n        }\n    };\n\n    const drawPath = (canvasCtx: CanvasRenderingContext2D, points: [number, number][], f_drawPoints = false) => {\n        if (points[0])\n            canvasCtx.moveTo(points[0][0], points[0][1]);\n        canvasCtx.beginPath();\n        for (const p of points) {\n            canvasCtx.lineTo(p[0], p[1]);\n        }\n        canvasCtx.stroke();\n\n        if (f_drawPoints) {\n            for (const p of points)\n                drawPoint(canvasCtx, p);\n        }\n    };\n\n    const drawPoint = (canvasCtx: CanvasRenderingContext2D, point: Point) => {\n        canvasCtx.beginPath();\n        canvasCtx.arc(point[0], point[1], POINT_RADIUS, 0, 2 * 3.15);\n        canvasCtx.closePath();\n        canvasCtx.fill();\n    };\n\n    const handleSelect = () => {\n        const target = findShapeIndex([mouse.x, mouse.y] as Point, quads);\n        if (target >= 0 && target === selected) {\n            setDragging(true);\n        } else {\n            setSelected(target);\n        }\n    };\n\n    const onMouseDown = () => {\n        switch (tool) {\n            case Tool.ADD:\n                addPoint();\n                break;\n            case Tool.SELECT:\n                handleSelect();\n                break;\n            default:\n                throw Error(\"No tool selected???\");\n        }\n    };\n    const onMouseUp = () => {\n        setDragging(false);\n    };\n    const onMouseLeave = () => {\n        setPoints([]);\n    };\n\n    return (\n        <div className=\"Canvas\">\n            <canvas\n                ref={ref}\n                onMouseDown={onMouseDown}\n                onMouseUp={onMouseUp}\n                onMouseLeave={onMouseLeave}\n                width={CANVAS_W}\n                height={CANVAS_H}\n            />\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\n\nimport './Inspector.css';\n\ntype InspectorProps = {\n    target: any;\n};\n\nexport default function Inspector({ target }: InspectorProps) {\n\n    return (\n        <div className=\"Inspector\">\n            {JSON.stringify(target)}\n        </div>\n    );\n\n}","import React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport VideoCanvas from './components/VideoCanvas';\nimport FilePicker from './components/FilePicker';\nimport { Point, Shape, Tool } from './utilities/types';\nimport ToolSelector from './components/ToolSelector';\nimport Canvas from './components/Canvas';\nimport Inspector from './components/Inspector';\n\n\nexport default function App() {\n\n    const [file, setFile] = useState<File | null>(null);\n    const [videoSrc, setVideoSrc] = useState<string>(\"\");\n    const [video, setVideo] = useState<HTMLVideoElement | null>(null);\n    const [slider, setSlider] = useState<number | undefined>();\n    const [quadList, setQuadList] = useState<Shape[]>([]);\n    const [selected, setSelected] = useState<number>(-1);\n    const [tool, setTool] = useState<Tool>(Tool.ADD);\n\n    useEffect(() => {\n        if (file) {\n            const source = URL.createObjectURL(file);\n            setVideoSrc(source);\n        }\n    }, [file]);\n\n    const moveSelected = (vec: Point) => {\n        for (const p of quadList[selected]) {\n            p[0] += vec[0];\n            p[1] += vec[1];\n        }\n        setQuadList(quadList);\n    };\n\n    return (\n        <div className=\"App\">\n            <Canvas\n                img={video}\n                quads={quadList}\n                newQuad={(quad: Shape) => { setQuadList([quad, ...quadList]); }}\n                tool={tool}\n                selected={selected}\n                setSelected={setSelected}\n                moveSelected={moveSelected}\n                slider={slider}\n            />\n            <VideoCanvas\n                source={videoSrc}\n                setVideo={setVideo}\n                setSlider={setSlider}\n            />\n            <FilePicker setFile={setFile} accept_types=\"video/*\" />\n            <ToolSelector\n                value={tool}\n                onAdd={() => setTool(Tool.ADD)}\n                onSelect={() => setTool(Tool.SELECT)}\n            />\n            <Inspector\n                target={quadList[selected]}\n            />\n        </div>\n    );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}