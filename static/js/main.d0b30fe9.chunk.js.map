{"version":3,"sources":["components/VideoCanvas.tsx","components/FilePicker.tsx","utilities/types.ts","components/ToolSelector.tsx","utilities/shapes.ts","components/Canvas.tsx","components/Inspector.tsx","utilities/data.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["VideoCanvas","source","setVideo","setSlider","value","videoRef","useRef","useEffect","current","src","className","type","min","max","onChange","ev","percentage","currentTime","duration","setVideoPos","target","ref","hidden","FilePicker","Tool","setFile","accept_types","accept","_","files","item","ToolSelector","onSelect","onAdd","SELECT","onClick","ADD","isPointInShape","p","s","res","i","length","edge","distancePointToPoint","a","b","Math","hypot","Canvas","img","quads","newQuad","tool","selected","setSelected","moveSelected","deleteSelected","slider","useState","points","setPoints","dragging","setDragging","oldMouse","setOldMouse","mouse","useMouse","canvas","context","getContext","drawImage","fillStyle","fillRect","width","height","strokeStyle","quad","drawPath","x","y","path","snapToShapes","movement","pos","shapes","reduce","dist","point","p1","p2","console","log","d","proj","l","vec1","vec2","e1","e2","valDp","len2","projectPointToSegment","d1","d2","minDist","newPoint","canvasCtx","f_drawPoints","moveTo","beginPath","lineTo","stroke","drawPoint","arc","closePath","fill","handleSelect","findPointIndexInShape","onMouseDown","updatedShape","addPoint","Error","onMouseUp","onMouseLeave","Inspector","csvObj","ol","sort","tmp","order","lu","ru","rb","lb","carWalk","direction","left","up","right","down","parking","stop","convertToCSV","formatCSV","App","file","videoSrc","setVideoSrc","video","quadList","setQuadList","setTool","URL","createObjectURL","vec","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0b30fe9.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Shape } from '../utilities/types';\nimport Canvas, { CanvasProps } from './Canvas';\n\nimport './VideoCanvas.css';\n\ntype VideoCanvasProps = {\n    source: string;\n    setVideo: (video: HTMLVideoElement) => void;\n    setSlider: (value: number | undefined) => void;\n    value: number;\n};\n\nexport default function VideoCanvas({ source, setVideo, setSlider, value }: VideoCanvasProps) {\n\n    const videoRef = useRef<HTMLVideoElement>(null);\n\n\n    useEffect(() => {\n        if (videoRef.current && source) {\n            videoRef.current.src = source;\n            setVideo(videoRef.current);\n            setSlider(0);\n        }\n    }, [source]);\n\n    const setVideoPos = (percentage: number) => {\n        if (!videoRef.current) {\n            return;\n        }\n        // force range 0 - 100\n        const value = percentage < 0 ? 0 : percentage > 100 ? 100 : percentage;\n        videoRef.current.currentTime = value / 100 * videoRef.current.duration;\n        setSlider(value);\n    };\n\n    return (\n        <div className=\"VideoCanvas\">\n            <input className=\"slider\"\n                type=\"range\"\n                min=\"0\"\n                max=\"100\"\n                value={value}\n                onChange={ev => { setVideoPos(+ev.target.value); }}\n            />\n            <video ref={videoRef} hidden />\n        </div>\n    );\n}\n","import React, { useRef, useEffect, useState } from 'react';\n\nimport './FilePicker.css';\n\ntype FilePickerProps = {\n    setFile: (f: File | null) => void,\n    accept_types?: string;\n};\n\nfunction FilePicker({ setFile, accept_types = \"\" }: FilePickerProps) {\n\n    const ref = useRef<HTMLInputElement>(null);\n\n    return (\n        <div className=\"FilePicker\">\n            <input\n                ref={ref}\n                type=\"file\"\n                accept={accept_types}\n                onChange={_ => setFile(ref.current?.files?.item(0) ?? null)}\n            />\n        </div>\n    );\n}\n\nexport default FilePicker;","export type Point = [number, number];\nexport type Shape = Point[];\nexport enum Tool { ADD, SELECT };\nexport type CSVArea = {\n    lu: {\n        x: number;\n        y: number;\n    };\n    ru: {\n        x: number;\n        y: number;\n    };\n    rb: {\n        x: number;\n        y: number;\n    };\n    lb: {\n        x: number;\n        y: number;\n    };\n    carWalk: boolean;\n    direction: {\n        left: boolean;\n        up: boolean;\n        right: boolean;\n        down: boolean;\n    };\n    parking: boolean;\n    stop: null;\n};","import React from 'react';\nimport { Tool } from '../utilities/types';\nimport './ToolSelector.css';\n\ntype ToolSelectorProps = {\n    value?: Tool;\n    onSelect?: () => void;\n    onAdd?: () => void;\n};\n\nexport default function ToolSelector({ value, onSelect, onAdd }: ToolSelectorProps) {\n    return (\n        <div className=\"ToolSelector\">\n            <button\n                className={value === Tool.SELECT ? \"active\" : \"\"}\n                onClick={onSelect}\n            >\n                SELECT\n                \n            </button>\n\n            <button\n                className={value === Tool.ADD ? \"active\" : \"\"}\n                onClick={onAdd}\n            >\n                ADD\n\n            </button>\n        </div>\n    );\n}","import { Point, Shape } from './types';\n\nexport function findPointIndexInShape(target: Point, shapes: Shape[]) {\n    for (let i = 0; i < shapes.length; i++) {\n        if (isPointInShape(target, shapes[i])) return i;\n    }\n    return -1;\n}\n\nexport function isPointInShape(p: Point, s: Shape) {\n    let res = false;\n    const X = 0;\n    const Y = 1;\n    for (let i = 0; i < s.length; i++) {\n        // https://www.eecs.umich.edu/courses/eecs380/HANDOUTS/PROJ2/InsidePoly.html\n        const edge = [s[i], s[(i + 1) % s.length]];\n        if (\n            (   // is the point in the Y range of the edge?\n                edge[0][Y] <= p[Y] && edge[1][Y] >= p[Y] ||\n                edge[1][Y] <= p[Y] && edge[0][Y] >= p[Y]\n            )\n            &&\n            (   // is our point to the left the line that our edge sits on at Y = point[Y]?\n                p[X] < (edge[0][X] - edge[1][X]) * (p[Y] - edge[1][Y]) / (edge[0][Y] - edge[1][Y]) + edge[1][X]\n            )\n        ) {\n            res = !res;\n        }\n    }\n    return res;\n}\n\nexport function distancePointToPoint(a: Point, b: Point) {\n    // Pitagora\n    return Math.hypot(a[0] - b[0], a[1] - b[1]);\n}\n\nexport function projectPointToSegment(p: Point, l: [Point, Point]) {\n    // http://www.sunshine2k.de/coding/java/PointOnLine/PointOnLine.html#step5\n    const X = 0;\n    const Y = 1;\n    // get dot product of e1, e2\n    const e1 = [l[1][X] - l[0][X], l[1][Y] - l[0][Y]] as Point;\n    const e2 = [p[X] - l[0][X], p[Y] - l[0][Y]] as Point;\n    const valDp = dotProduct(e1, e2);\n    // get squared length of e1\n    const len2 = e1[X] * e1[X] + e1[Y] * e1[Y];\n    const proj: Point = [(l[0][X] + (valDp * e1[X]) / len2), (l[0][Y] + (valDp * e1[Y]) / len2)];\n    if (\n        proj[0] > l[0][0] && proj[0] > l[1][0] || // too far left\n        proj[0] < l[0][0] && proj[0] < l[1][0] || // too far right\n        proj[1] > l[0][1] && proj[1] > l[1][1] || // too far up\n        proj[1] < l[0][1] && proj[1] < l[1][1]    // too far down\n    ) {\n        return null;\n    } else {\n        return proj;\n    }\n}\n\nfunction dotProduct(vec1: Point, vec2: Point) {\n    // http://www.sunshine2k.de/coding/java/PointOnLine/PointOnLine.html#step4\n    return vec1[0] * vec2[0] + vec1[1] * vec2[0];\n}","import React, { useRef, useState, useEffect, ComponentProps } from 'react';\nimport useMouse from '@react-hook/mouse-position';\nimport './Canvas.css';\nimport { Point, Shape, Tool } from '../utilities/types';\nimport { distancePointToPoint, projectPointToSegment, findPointIndexInShape } from '../utilities/shapes';\n\nconst CANVAS_W = 1280;\nconst CANVAS_H = 720;\nconst POINT_RADIUS = 5;\nconst SNAP_DISTANCE = 50;\n\nexport interface CanvasProps {\n    img: CanvasImageSource | null;\n    quads: Shape[];\n    newQuad: (quad: Shape) => void;\n    tool: Tool;\n    selected: number;\n    setSelected: (index: number) => void;\n    moveSelected: (vector: Point) => void;\n    deleteSelected: () => void;\n    slider?: number;\n};\n\nexport default function Canvas({\n    img, quads, newQuad,\n    tool, selected, setSelected,\n    moveSelected, deleteSelected, slider,\n}: CanvasProps) {\n\n    const [points, setPoints] = useState<Shape>([]);\n    const [dragging, setDragging] = useState<boolean>(false);\n    const [oldMouse, setOldMouse] = useState<Point | null>(null);\n\n    const ref = useRef<HTMLCanvasElement>(null);\n    const mouse = useMouse(ref);\n\n    useEffect(() => {\n        const canvas = ref.current;\n        const context = canvas?.getContext('2d');\n        if (!canvas || !context) {\n            return;\n        }\n\n        if (tool === Tool.ADD) {\n            setSelected(-1);\n        }\n\n        // Background\n        if (img) {\n            context.drawImage(img, 0, 0, CANVAS_W, CANVAS_H);\n        } else {\n            context.fillStyle = '#fff';\n            context.fillRect(0, 0, canvas.width, canvas.height);\n        }\n\n        // Finished Quads\n        context.strokeStyle = '#f00';\n        context.fillStyle = '#00f';\n        for (const quad of quads) {\n            drawPath(context, [...quad, quad[0]], true);\n        }\n\n        // Selected Quad\n        if (selected >= 0 && quads[selected]) {\n            const quad = quads[selected];\n            context.strokeStyle = '#ff0';\n            context.fillStyle = '#0ff';\n            drawPath(context, [...quad, quad[0]], true);\n        }\n\n        if (mouse.x && mouse.y) {\n\n            // New Quad\n            if (points && tool === Tool.ADD) {\n                const pos = snapToShapes([mouse.x, mouse.y], quads);\n                let path = [pos, ...points];\n                if (points.length === 3) {\n                    path = [points[2], ...path];\n                }\n                drawPath(context, path, true);\n            }\n\n            // Drag\n            if (dragging && oldMouse && selected >= 0) {\n                const movement = [mouse.x - oldMouse[0], mouse.y - oldMouse[1]] as Point;\n                moveSelected(movement);\n            }\n\n            setOldMouse([mouse.x, mouse.y]);\n        }\n    }, [img, quads, tool, mouse, selected, points, slider]);\n\n    const snapToShapes = (pos: Point, shapes: Shape[]) => {\n        let [minDist, newPoint] = shapes.reduce(([dist, point]: [number, Point | null], s) => {\n\n            // find the most close point in each shape with his distance\n            let [d, p] = s.reduce(([dist, point]: [number, Point | null], p1, i, s) => {\n\n                const p2 = s[(i + 1) % s.length];\n                console.log(i, p1, p2);\n                let proj = projectPointToSegment(pos, [p1, p2]);\n                let d, p;\n                // if we found a projection it is the closest point\n                if (proj) {\n                    d = distancePointToPoint(pos, proj);\n                    p = proj;\n                }\n                // otherwise check wich end of the segment is the closest and pick that one\n                else {\n                    const d1 = distancePointToPoint(pos, p1);\n                    const d2 = distancePointToPoint(pos, p2);\n                    [d, p] = d1 < d2 ? [d1, p1] : [d2, p2];\n                }\n\n                // confront it with the previous results\n                if (d < dist || dist === -1) return [d, p];\n                else return [dist, point];\n            }, [-1, null]);\n\n            // confront it with the previous results\n            if (d < dist || dist === -1) return [d, p];\n            else return [dist, point];\n        }, [-1, null]);\n\n        if (newPoint && minDist < SNAP_DISTANCE) {\n            pos = newPoint;\n        }\n        return pos;\n    };\n\n    const addPoint = () => {\n        if (!mouse.x || !mouse.y) {\n            return;\n        }\n\n        let pos: Point = [mouse.x, mouse.y];\n\n        pos = snapToShapes(pos, quads);\n\n        const updatedShape = [pos, ...points];\n\n        if (updatedShape.length === 4) {\n            newQuad(updatedShape);\n            setPoints([]);\n        } else {\n            setPoints(updatedShape);\n        }\n    };\n\n    const drawPath = (canvasCtx: CanvasRenderingContext2D, points: [number, number][], f_drawPoints = false) => {\n        if (points[0])\n            canvasCtx.moveTo(points[0][0], points[0][1]);\n        canvasCtx.beginPath();\n        for (const p of points) {\n            canvasCtx.lineTo(p[0], p[1]);\n        }\n        canvasCtx.stroke();\n\n        if (f_drawPoints) {\n            for (const p of points)\n                drawPoint(canvasCtx, p);\n        }\n    };\n\n    const drawPoint = (canvasCtx: CanvasRenderingContext2D, point: Point) => {\n        canvasCtx.beginPath();\n        canvasCtx.arc(point[0], point[1], POINT_RADIUS, 0, 2 * 3.15);\n        canvasCtx.closePath();\n        canvasCtx.fill();\n    };\n\n    const handleSelect = () => {\n        const target = findPointIndexInShape([mouse.x, mouse.y] as Point, quads);\n        if (target >= 0 && target === selected) {\n            setDragging(true);\n        } else {\n            setSelected(target);\n        }\n    };\n\n    const onMouseDown = () => {\n        switch (tool) {\n            case Tool.ADD:\n                addPoint();\n                break;\n            case Tool.SELECT:\n                handleSelect();\n                break;\n            default:\n                throw Error(\"No tool selected???\");\n        }\n    };\n    const onMouseUp = () => {\n        setDragging(false);\n    };\n    const onMouseLeave = () => {\n        setPoints([]);\n        if (dragging && selected >= 0) {\n            deleteSelected();\n        }\n    };\n\n    return (\n        <div className=\"Canvas\">\n            <canvas\n                ref={ref}\n                onMouseDown={onMouseDown}\n                onMouseUp={onMouseUp}\n                onMouseLeave={onMouseLeave}\n                width={CANVAS_W}\n                height={CANVAS_H}\n            />\n        </div>\n    );\n}\n","import { format } from 'path';\nimport React, { useEffect } from 'react';\nimport { convertToCSV } from '../utilities/data';\nimport { CSVArea } from '../utilities/types';\n\nimport './Inspector.css';\n\ntype InspectorProps = {\n    target: any;\n};\n\nexport default function Inspector({ target }: InspectorProps) {\n\n    let csvObj = null;\n    if (target) csvObj = convertToCSV(target);\n\n    const formatCSV = (csvObj: CSVArea | null) => {\n        if (!csvObj) return;\n        return (\n            <tr>\n                <td>{csvObj.lu.x}        </td>\n                <td>{csvObj.lu.y}        </td>\n                <td>{csvObj.ru.x}        </td>\n                <td>{csvObj.ru.y}        </td>\n                <td>{csvObj.rb.x}        </td>\n                <td>{csvObj.rb.y}        </td>\n                <td>{csvObj.lb.x}        </td>\n                <td>{csvObj.lb.y}        </td>\n                <td>{csvObj.carWalk}        </td>\n                <td>{csvObj.direction.left} </td>\n                <td>{csvObj.direction.up}   </td>\n                <td>{csvObj.direction.right}</td>\n                <td>{csvObj.direction.down} </td>\n                <td>{csvObj.parking}        </td>\n                <td>{csvObj.stop}        </td>\n            </tr>\n        );\n    };\n\n    return (\n        <div className=\"Inspector\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>luX     </th>\n                        <th>luY     </th>\n                        <th>ruX     </th>\n                        <th>ruY     </th>\n                        <th>rbX     </th>\n                        <th>rbY     </th>\n                        <th>lbX     </th>\n                        <th>lbY     </th>\n                        <th>CarWalk </th>\n                        <th>Left    </th>\n                        <th>Up      </th>\n                        <th>Right   </th>\n                        <th>Down    </th>\n                        <th>Parking </th>\n                        <th>Stop    </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {formatCSV(csvObj)}\n                </tbody>\n            </table>\n        </div>\n    );\n\n}","import { Shape, CSVArea } from './types';\n\nexport function order(s: Shape) {\n    const X = 0;\n    const Y = 1;\n\n    let ol = s.sort((a, b) => a[Y] > b[Y] ? -1 : 1);\n\n    if (ol[0][X] > ol[1][X]) {\n        const tmp = ol[0];\n        ol[0] = ol[1];\n        ol[1] = tmp;\n    }\n    if (ol[2][X] < ol[3][X]) {\n        const tmp = ol[2];\n        ol[2] = ol[3];\n        ol[3] = tmp;\n    }\n    return ol;\n}\n\nexport function convertToCSV(s: Shape): CSVArea {\n    const ol = order(s);\n    return ({\n        lu: {\n            x: ol[0][0],\n            y: ol[0][1],\n        },\n        ru: {\n            x: ol[1][0],\n            y: ol[1][1],\n        },\n        rb: {\n            x: ol[2][0],\n            y: ol[2][1],\n        },\n        lb: {\n            x: ol[3][0],\n            y: ol[3][1],\n        },\n        carWalk: true,\n\n        direction: {\n            left: false,\n            up: false,\n            right: false,\n            down: false,\n        },\n\n        parking: false,\n\n        stop: null,\n    });\n}","import React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport VideoCanvas from './components/VideoCanvas';\nimport FilePicker from './components/FilePicker';\nimport { Point, Shape, Tool } from './utilities/types';\nimport ToolSelector from './components/ToolSelector';\nimport Canvas from './components/Canvas';\nimport Inspector from './components/Inspector';\n\n\nexport default function App() {\n\n    const [file, setFile] = useState<File | null>(null);\n    const [videoSrc, setVideoSrc] = useState<string>(\"\");\n    const [video, setVideo] = useState<HTMLVideoElement | null>(null);\n    const [slider, setSlider] = useState<number | undefined>();\n    const [quadList, setQuadList] = useState<Shape[]>([]);\n    const [selected, setSelected] = useState<number>(-1);\n    const [tool, setTool] = useState<Tool>(Tool.ADD);\n\n    useEffect(() => {\n        if (file) {\n            const source = URL.createObjectURL(file);\n            setVideoSrc(source);\n        }\n    }, [file]);\n\n    const moveSelected = (vec: Point) => {\n        for (const p of quadList[selected]) {\n            p[0] += vec[0];\n            p[1] += vec[1];\n        }\n        setQuadList(quadList);\n    };\n\n    const deleteSelected = () => {\n        quadList.splice(selected, 1);\n        setQuadList(quadList);\n        setSelected(-1);\n    };\n\n    return (\n        <div className=\"App\">\n            <Canvas\n                img={video}\n                quads={quadList}\n                newQuad={(quad: Shape) => { setQuadList([quad, ...quadList]); }}\n                tool={tool}\n                selected={selected}\n                setSelected={setSelected}\n                moveSelected={moveSelected}\n                deleteSelected={deleteSelected}\n                slider={slider}\n            />\n            <VideoCanvas\n                source={videoSrc}\n                setVideo={setVideo}\n                setSlider={setSlider}\n                value={slider ?? 0}\n            />\n            <FilePicker setFile={setFile} accept_types=\"video/*\" />\n            <ToolSelector\n                value={tool}\n                onAdd={() => setTool(Tool.ADD)}\n                onSelect={() => setTool(Tool.SELECT)}\n            />\n            <Inspector\n                target={quadList[selected]}\n            />\n        </div>\n    );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}