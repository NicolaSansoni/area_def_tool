{"version":3,"sources":["components/VideoCanvas.tsx","components/FilePicker.tsx","utilities/data.ts","utilities/shapes.ts","utilities/area.ts","utilities/types.ts","components/ToolSelector.tsx","components/Canvas.tsx","components/Inspector.tsx","components/IOManager.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["VideoCanvas","source","setVideo","setSlider","value","videoRef","useRef","useEffect","current","src","loader","setTimeout","duration","setVideoPos","percentage","currentTime","className","type","min","max","onChange","ev","target","ref","hidden","FilePicker","setFile","accept_types","onClick","click","accept","_","files","item","order","s","ol","sort","a","b","tmp","isPointInShape","p","res","i","length","edge","distancePointToPoint","Math","hypot","dot","vec1","vec2","vecSum","v1","v2","vecSub","v","vecMul","n","Tool","Area","quad","direction","id","shape","isCarWalkable","isParking","stop","isSelected","this","newId","points","dir","lu","ru","rb","lb","carWalk","left","up","right","down","parking","ad","Object","values","dirs","entries","map","k","reduce","vec","counter","ToolSelector","onSelect","onAdd","ADD","SELECT","Canvas","img","quads","newQuad","tool","setSelected","moveSelected","deleteSelected","slider","width","height","useState","setPoints","dragging","setDragging","oldMouse","setOldMouse","rawMouse","useMouse","mouse","x","y","canvas","context","getContext","ratio","clientWidth","drawImage","fillStyle","fillRect","movement","strokeStyle","drawPath","close","path","snapToShapes","pos","shapes","dist","point","p1","d","p2","proj","l","lineVec","lineLen","lineVecNormalized","pointProjLen","projectPointToSegment","d1","d2","minDist","newPoint","canvasCtx","f_drawPoints","moveTo","beginPath","lineTo","closePath","stroke","drawPoint","arc","fill","handleSelect","findPointIndexInShape","onMouseDown","updatedShape","newArea","addPoint","Error","onMouseUp","onMouseLeave","Inspector","update","inspected","setInspected","updateInspected","updated","changed","unchanged","filter","renderAD","renderedPoints","flatMap","key","val","round","e","renderedDirection","checked","find","t","fromAreaDictionary","toAreaDictionary","selected","list","pending","console","log","fields","IOManager","dlRef","filename","replace","formatData","formatted","formatArea","join","concat","area","outStr","blob","Blob","dlUrl","URL","createObjectURL","setAttribute","revokeObjectURL","download","App","file","videoSrc","setVideoSrc","video","quadList","setQuadList","setTool","index","updateQuads","notUpdated","filteredList","videoWidth","videoHeight","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ca76cf6.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Shape } from '../utilities/types';\nimport Canvas, { CanvasProps } from './Canvas';\n\nimport './VideoCanvas.css';\n\ntype VideoCanvasProps = {\n    source: string;\n    setVideo: (video: HTMLVideoElement) => void;\n    setSlider: (value: number | undefined) => void;\n    value: number;\n};\n\nexport default function VideoCanvas({ source, setVideo, setSlider, value }: VideoCanvasProps) {\n\n    const videoRef = useRef<HTMLVideoElement>(null);\n\n\n    useEffect(() => {\n        if (videoRef.current && source) {\n            videoRef.current.src = source;\n            setVideo(videoRef.current);\n\n            const loader = () => {\n                setTimeout(() => {\n                    if (videoRef.current?.duration) {\n                        setVideoPos(1);\n                    } else loader();\n                }, 10);\n            };\n\n            loader();\n        }\n    }, [source]);\n\n    const setVideoPos = (percentage: number) => {\n        if (!videoRef.current || !source || !percentage) {\n            return;\n        }\n        // force range 0 - 100\n        const value = percentage < 1 ? 1 : percentage > 100 ? 100 : percentage;\n        videoRef.current.currentTime = value / 100 * videoRef.current.duration;\n        setSlider(value);\n    };\n\n    return (\n        <div className=\"VideoCanvas\">\n            <input className=\"slider\"\n                type=\"range\"\n                min=\"1\"\n                max=\"100\"\n                value={value}\n                onChange={ev => { setVideoPos(+ev.target.value); }}\n            />\n            <video ref={videoRef} hidden />\n        </div>\n    );\n}\n","import React, { useRef, useEffect, useState } from 'react';\n\nimport './FilePicker.css';\n\ntype FilePickerProps = {\n    setFile: (f: File | null) => void,\n    accept_types?: string;\n};\n\nfunction FilePicker({ setFile, accept_types = \"\" }: FilePickerProps) {\n\n    const ref = useRef<HTMLInputElement>(null);\n\n    return (\n        <div className=\"FilePicker\">\n            <button\n                onClick={() => ref.current?.click()}\n            >\n                Select Video\n            </button>\n            <input hidden\n                ref={ref}\n                type=\"file\"\n                accept={accept_types}\n                onChange={_ => setFile(ref.current?.files?.item(0) ?? null)}\n            />\n        </div>\n    );\n}\n\nexport default FilePicker;","import { Shape } from './types';\n\nexport function order(s: Shape) {\n    const X = 0;\n    const Y = 1;\n\n    // sort up first\n    let ol = s.sort((a, b) => a[Y] < b[Y] ? -1 : 1);\n\n    if (ol[0][X] > ol[1][X]) {\n        const tmp = ol[0];\n        ol[0] = ol[1];\n        ol[1] = tmp;\n    }\n    if (ol[2][X] < ol[3][X]) {\n        const tmp = ol[2];\n        ol[2] = ol[3];\n        ol[3] = tmp;\n    }\n    return ol;\n}","import { Point, Shape } from './types';\n\nexport function findPointIndexInShape(target: Point, shapes: Shape[]) {\n    for (let i = 0; i < shapes.length; i++) {\n        if (isPointInShape(target, shapes[i])) return i;\n    }\n    return -1;\n}\n\nexport function isPointInShape(p: Point, s: Shape) {\n    let res = false;\n    const X = 0;\n    const Y = 1;\n    for (let i = 0; i < s.length; i++) {\n        // https://www.eecs.umich.edu/courses/eecs380/HANDOUTS/PROJ2/InsidePoly.html\n        const edge = [s[i], s[(i + 1) % s.length]];\n        if (\n            (   // is the point in the Y range of the edge?\n                edge[0][Y] <= p[Y] && edge[1][Y] >= p[Y] ||\n                edge[1][Y] <= p[Y] && edge[0][Y] >= p[Y]\n            )\n            &&\n            (   // is our point to the left the line that our edge sits on at Y = point[Y]?\n                p[X] < (edge[0][X] - edge[1][X]) * (p[Y] - edge[1][Y]) / (edge[0][Y] - edge[1][Y]) + edge[1][X]\n            )\n        ) {\n            res = !res;\n        }\n    }\n    return res;\n}\n\nexport function distancePointToPoint(a: Point, b: Point) {\n    // Pitagora\n    return Math.hypot(a[0] - b[0], a[1] - b[1]);\n}\n\nfunction badProjectPointToSegment(p: Point, l: [Point, Point]) {\n    // WHY DID I EVEN BOTHER WITH ALL OF THIS MATH\n    const [x, y] = [p[0], p[1]];\n    const [x1, y1] = [l[0][0], l[0][1]];\n    const [x2, y2] = [l[1][0], l[1][1]];\n\n    // find m and q of the segment line\n    const m = (y1 - y2) / (x1 - x2);\n    const q = (x1 * y2 - x2 * y1) / (x1 - x2);\n\n    // find m and q of the projection line\n    const mproj = -1 / m;\n    const qproj = y - mproj * x;\n\n    // solve the system and find the point that sits on both lines\n    const xproj = (qproj - q) / (m - mproj);\n    const yproj = m * xproj + q;\n\n    const proj = [xproj, yproj] as Point;\n\n    if (\n        proj[0] > l[0][0] && proj[0] > l[1][0] || // too far left\n        proj[0] < l[0][0] && proj[0] < l[1][0] || // too far right\n        proj[1] > l[0][1] && proj[1] > l[1][1] || // too far up\n        proj[1] < l[0][1] && proj[1] < l[1][1]    // too far down\n    ) {\n        return null;\n    }\n    return proj;\n}\n\nexport function projectPointToSegment(p: Point, l: [Point, Point]): Point | null {\n    // WHY DO I ONLY THINK OF VECTORS IN MY FREE TIME AND NOT WHEN I'M ON THE CLOCK??????\n    const lineVec = vecSub(l[1], l[0]);\n    const lineLen = distancePointToPoint(l[0], l[1]);\n    const lineVecNormalized = vecMul(lineVec, 1 / lineLen);\n    const pointProjLen = dot(vecSub(p, l[0]), lineVecNormalized);\n    if (pointProjLen < 0 || pointProjLen > lineLen) return null; // proj outside the segment\n    const pointProj = vecSum(l[0], vecMul(lineVecNormalized, pointProjLen));\n    return pointProj;\n}\n\nexport function dot(vec1: Point, vec2: Point) {\n    return vec1[0] * vec2[0] + vec1[1] * vec2[1];\n}\n\nexport function vecSum(v1: Point, v2: Point): Point {\n    return [v1[0] + v2[0], v1[1] + v2[1]];\n}\n\nexport function vecNegative(v: Point): Point {\n    return [-v[0], -v[1]];\n}\n\nexport function vecSub(v1: Point, v2: Point): Point {\n    return vecSum(v1, vecNegative(v2));\n}\n\nexport function vecMul(v: Point, n: number): Point {\n    return [v[0] * n, v[1] * n];\n}","import { order } from './data';\nimport { dot, vecSum } from './shapes';\nimport { AreaDictionary, IIndexable, Point, Shape } from './types';\n\nexport class Area {\n    private static counter = 0;\n\n    readonly id: number;\n    public shape: Shape;\n    public isCarWalkable = true;\n    public direction: Point | null = null;\n    public isParking = false;\n    public stop: string | null = null;\n    public isSelected = false;\n\n    constructor(quad: Shape, direction?: Point) {\n        this.id = Area.newId();\n        this.shape = quad;\n        if (direction) this.direction = direction;\n    }\n\n    static newId() {\n        return Area.counter++;\n    }\n\n    toAreaDictionary(): AreaDictionary {\n        const points = order(this.shape);\n        const dir = this.direction ?? [0, 0];\n        return {\n            id: this.id,\n            points: {\n                lu: [...points[0]],\n                ru: [...points[1]],\n                rb: [...points[2]],\n                lb: [...points[3]],\n            },\n            carWalk: this.isCarWalkable,\n            dir: {\n                left: dot(dir, [-1, 0]) > .25 ? true : false,\n                up: dot(dir, [0, -1]) > .25 ? true : false,\n                right: dot(dir, [1, 0]) > .25 ? true : false,\n                down: dot(dir, [0, 1]) > .25 ? true : false,\n            },\n            parking: this.isParking,\n            stop: `${this.stop ?? \"None\"}`,\n        };\n    }\n\n    fromAreaDictionary(ad: AreaDictionary) {\n        this.shape = Object.values(ad.points);\n        this.isCarWalkable = ad.carWalk;\n        const dirs = {\n            left: [-1, 0],\n            right: [1, 0],\n            up: [0, -1],\n            down: [0, 1],\n        };\n        this.direction = Object.entries(ad.dir)\n            .map(([k, v]) => v ? (dirs as IIndexable)[k] : [0, 0])\n            .reduce((res, vec) => vecSum(res, vec));\n\n        this.isParking = ad.parking;\n        this.stop = ad.stop;\n        return this;\n    }\n}","export type Point = [number, number];\nexport type Shape = Point[];\nexport enum Tool { ADD, SELECT };\n\nexport type AreaDictionary = {\n    id: number;\n    points: {\n        lu: Point;\n        ru: Point;\n        rb: Point;\n        lb: Point;\n    };\n    carWalk: boolean;\n    dir: {\n        left: boolean;\n        up: boolean;\n        right: boolean;\n        down: boolean;\n    };\n    parking: boolean;\n    stop: string;\n    changed?: boolean;\n};\n\nexport interface IIndexable<T = any> { [key: string]: T; }\n\nexport { Area } from \"./area\";","import React from 'react';\nimport { Tool } from '../utilities/types';\nimport './ToolSelector.scss';\n\ntype ToolSelectorProps = {\n    value?: Tool;\n    onSelect?: () => void;\n    onAdd?: () => void;\n};\n\nexport default function ToolSelector({ value, onSelect, onAdd }: ToolSelectorProps) {\n    return (\n        <div className=\"ToolSelector\">\n            <button\n                className={value === Tool.ADD ? \"active\" : \"\"}\n                onClick={onAdd}\n            >\n                ADD\n            </button>\n\n            <button\n                className={value === Tool.SELECT ? \"active\" : \"\"}\n                onClick={onSelect}\n            >\n                SELECT\n            </button>\n        </div>\n    );\n}","import React, { useRef, useState, useEffect, ComponentProps } from 'react';\nimport useMouse from '@react-hook/mouse-position';\nimport './Canvas.scss';\nimport { Area, Point, Shape, Tool } from '../utilities/types';\nimport { distancePointToPoint, projectPointToSegment, findPointIndexInShape, vecSum } from '../utilities/shapes';\n\nconst CANVAS_W = 1280;\nconst CANVAS_H = 720;\nconst POINT_RADIUS = 5;\nconst SNAP_DISTANCE = 50;\n\nexport interface CanvasProps {\n    img: CanvasImageSource | null;\n    quads: Area[];\n    newQuad: (quad: Area) => void;\n    tool: Tool;\n    setSelected: (index: number) => void;\n    moveSelected: (vector: Point) => void;\n    deleteSelected: () => void;\n    slider?: number;\n    width?: number;\n    height?: number;\n};\n\nexport default function Canvas({\n    img, quads, newQuad, tool, setSelected, moveSelected, deleteSelected, slider, width, height\n}: CanvasProps) {\n\n    const [points, setPoints] = useState<Shape>([]);\n    const [dragging, setDragging] = useState<boolean>(false);\n    const [oldMouse, setOldMouse] = useState<Point | null>(null);\n\n    const ref = useRef<HTMLCanvasElement>(null);\n    const rawMouse = useMouse(ref);\n    const mouse: { x: number | null, y: number | null; } = { x: null, y: null };\n\n    useEffect(() => {\n        const canvas = ref.current;\n        const context = canvas?.getContext('2d');\n        if (!canvas || !context) {\n            return;\n        }\n\n        const ratio = canvas.clientWidth / canvas.width;\n        mouse.x = rawMouse.x ? rawMouse.x / ratio : null;\n        mouse.y = rawMouse.y ? rawMouse.y / ratio : null;\n\n        // Background\n        if (img) {\n            context.drawImage(img, 0, 0, canvas.width, canvas.height);\n        } else {\n            context.fillStyle = '#fff';\n            context.fillRect(0, 0, canvas.width, canvas.height);\n        }\n\n        let movement: Point = [0, 0];\n        // Drag\n        if (dragging && oldMouse) {\n            movement = [mouse.x! - oldMouse[0], mouse.y! - oldMouse[1]] as Point;\n        }\n\n        // Finished Quads\n        for (const quad of quads) {\n            if (quad.isSelected) {\n                context.strokeStyle = '#ff0';\n                context.fillStyle = '#0ff';\n                drawPath(context, quad.shape.map(p => vecSum(p, movement)), true);\n            } else {\n                context.strokeStyle = '#f00';\n                context.fillStyle = '#00f';\n                drawPath(context, quad.shape, true);\n            }\n        }\n\n        if (mouse.x && mouse.y) {\n\n            // New Quad\n            if (points && tool === Tool.ADD) {\n                let close = false;\n                const pos = snapToShapes([mouse.x, mouse.y], quads.map(a => a.shape));\n                let path = [pos, ...points];\n                if (points.length === 3) {\n                    close = true;\n                }\n                context.strokeStyle = '#f00';\n                context.fillStyle = '#00f';\n                drawPath(context, path, true, close);\n            }\n\n\n        }\n    }, [img, quads, tool, rawMouse, points, slider, width]);\n\n    const snapToShapes = (pos: Point, shapes: Shape[]) => {\n        let [minDist, newPoint] = shapes.reduce(([dist, point]: [number, Point | null], s) => {\n\n            // find the most close point in each shape with his distance\n            let [d, p] = s.reduce(([dist, point]: [number, Point | null], p1, i, s) => {\n\n                const p2 = s[(i + 1) % s.length];\n                let proj = projectPointToSegment(pos, [p1, p2]);\n                let d, p;\n                // if we found a projection it is the closest point\n                if (proj) {\n                    d = distancePointToPoint(pos, proj);\n                    p = proj;\n                }\n                // otherwise check wich end of the segment is the closest and pick that one\n                else {\n                    const d1 = distancePointToPoint(pos, p1);\n                    const d2 = distancePointToPoint(pos, p2);\n                    [d, p] = d1 < d2 ? [d1, [...p1] as Point] : [d2, [...p2] as Point]; // ... to force copy\n                }\n\n                // confront it with the previous results\n                if (d < dist || dist === -1) return [d, p];\n                else return [dist, point];\n            }, [-1, null]);\n\n            // confront it with the previous results\n            if (d < dist || dist === -1) return [d, p];\n            else return [dist, point];\n        }, [-1, null]);\n\n        if (newPoint && minDist < SNAP_DISTANCE) {\n            pos = newPoint;\n        }\n        return pos;\n    };\n\n    const addPoint = () => {\n        if (!mouse.x || !mouse.y) {\n            return;\n        }\n\n        let pos: Point = [mouse.x, mouse.y];\n\n        pos = snapToShapes(pos, quads.map(a => a.shape));\n\n        const updatedShape = [pos, ...points];\n\n        if (updatedShape.length === 4) {\n            const newArea = new Area(updatedShape);\n            newArea.isSelected = true;\n            setSelected(-1);\n            newQuad(newArea);\n            setPoints([]);\n        } else {\n            setPoints(updatedShape);\n        }\n    };\n\n    const drawPath = (canvasCtx: CanvasRenderingContext2D, points: [number, number][], f_drawPoints = false, close = true) => {\n        if (points[0])\n            canvasCtx.moveTo(points[0][0], points[0][1]);\n        canvasCtx.beginPath();\n        for (const p of points) {\n            canvasCtx.lineTo(p[0], p[1]);\n        }\n\n        if (close)\n            canvasCtx.closePath();\n\n        canvasCtx.stroke();\n\n        if (f_drawPoints) {\n            for (const p of points)\n                drawPoint(canvasCtx, p);\n        }\n    };\n\n    const drawPoint = (canvasCtx: CanvasRenderingContext2D, point: Point) => {\n        canvasCtx.beginPath();\n        canvasCtx.arc(point[0], point[1], POINT_RADIUS, 0, 2 * 3.15);\n        canvasCtx.closePath();\n        canvasCtx.fill();\n    };\n\n    const handleSelect = () => {\n        const target = findPointIndexInShape([mouse.x, mouse.y] as Point, quads.map(a => a.shape));\n        if (target >= 0 && quads[target].isSelected) {\n            setDragging(true);\n            setOldMouse([mouse.x!, mouse.y!]);\n        } else {\n            setSelected(target);\n        }\n    };\n\n    const onMouseDown = () => {\n        switch (tool) {\n            case Tool.ADD:\n                addPoint();\n                break;\n            case Tool.SELECT:\n                handleSelect();\n                break;\n            default:\n                throw Error(\"No tool selected???\");\n        }\n    };\n    const onMouseUp = () => {\n        if (dragging && oldMouse) {\n            moveSelected([mouse.x! - oldMouse[0], mouse.y! - oldMouse[1]]);\n            setDragging(false);\n            setOldMouse(null);\n        }\n    };\n    const onMouseLeave = () => {\n        setPoints([]);\n        if (dragging) {\n            setDragging(false);\n            setOldMouse(null);\n            deleteSelected();\n        }\n    };\n\n    return (\n        <div className=\"Canvas\">\n            <canvas\n                ref={ref}\n                onMouseDown={onMouseDown}\n                onMouseUp={onMouseUp}\n                onMouseLeave={onMouseLeave}\n                width={width ?? CANVAS_W}\n                height={height ?? CANVAS_H}\n            />\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { order } from '../utilities/data';\nimport { dot, vecSum } from '../utilities/shapes';\nimport { Area, AreaDictionary, IIndexable, Point } from '../utilities/types';\n\nimport './Inspector.scss';\n\ntype InspectorProps = {\n    target: Area[];\n    update: (updated: Area[]) => void;\n};\n\nexport default function Inspector({ target, update }: InspectorProps) {\n\n    const [inspected, setInspected] = useState<AreaDictionary[]>();\n    const updateInspected = (updated: AreaDictionary, changed = true) => {\n        updated.changed = changed;\n        if (!inspected) return;\n        const unchanged = inspected?.filter(a => a.id !== updated.id);\n        setInspected([updated, ...unchanged].sort((a, b) => a.id < b.id ? -1 : 1));\n    };\n\n    useEffect(() => {\n        let selected: Area[] = target.filter(a => a.isSelected);\n        if (selected.length === 0)\n            selected = target;\n\n        let list = selected.map(a => a.toAreaDictionary());\n\n        const pending = inspected?.filter(t => t.changed);\n        list = list.map(a => {\n            const t = pending?.find(t => t.id === a.id);\n            return t ? t : a;\n        });\n\n        list = list.sort((a, b) => a.id < b.id ? -1 : 1);\n\n        setInspected(list);\n    }, [target]);\n\n    useEffect(() => { console.log(inspected); }, [inspected]);\n\n\n    function renderAD(a: AreaDictionary) {\n\n        const renderPoint = (p: Point, key: string, ref: AreaDictionary) => {\n            return p.map((val, i) => {\n                return (\n                    <td key={`${key}${i}`}>\n                        <input className=\"simple\"\n                            type=\"number\"\n                            value={Math.round(val)}\n                            onChange={e => {\n                                (ref.points as IIndexable)[key][i] = +e.target.value;\n                                updateInspected(ref);\n                            }}\n                        />\n                    </td>\n                );\n            });\n        };\n\n        const renderedPoints = Object.entries(a.points)\n            .flatMap(([k, v]) => renderPoint(v, k, a));\n\n        const renderedDirection = Object.entries(a.dir)\n            .map(([k, v]) => {\n                return (\n                    <td key={k}>\n                        <input className=\"simple\"\n                            type=\"number\"\n                            value={v ? 1 : 0}\n                            onChange={e => {\n                                (a.dir as IIndexable)[k] = +e.target.value > 0;\n                                updateInspected(a);\n                            }}\n                        />\n                    </td>\n                );\n            });\n\n        return (\n            <tr key={a.id}>\n                {renderedPoints}\n                <td key=\"iscarwalkable\">\n                    <input type=\"checkbox\"\n                        checked={a.carWalk}\n                        onChange={() => {\n                            a.carWalk = !a.carWalk;\n                            updateInspected(a);\n                        }}\n                    />\n                </td>\n                {renderedDirection}\n                <td key=\"isparking\">\n                    <input type=\"checkbox\"\n                        checked={a.parking}\n                        onChange={() => {\n                            a.parking = !a.parking;\n                            updateInspected(a);\n                        }}\n                    />\n                </td>\n                <td key=\"isstop\">\n                    <input className=\"simple\"\n                        type=\"text\"\n                        value={a.stop ?? \"None\"}\n                        onChange={e => {\n                            a.stop = e.target.value;\n                            updateInspected(a);\n                        }}\n                    />\n                </td>\n                <td key=\"update\">\n                    <button\n                        hidden={!a.changed}\n                        onClick={() => {\n                            updateInspected(a, false);\n                            update([\n                                target.find(t => t.id === a.id)!.fromAreaDictionary(a)\n                            ]);\n                        }}\n                    >\n                        update\n                    </button>\n                </td>\n                <td key=\"discard\">\n                    <button\n                        hidden={!a.changed}\n                        onClick={() => {\n                            a = target.find(t => t.id === a.id)!.toAreaDictionary();\n                            updateInspected(a, false);\n                        }}\n                    >\n                        discard\n                    </button>\n                </td>\n            </tr>\n        );\n    }\n\n    return (\n        <div className=\"Inspector\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>luX     </th>\n                        <th>luY     </th>\n                        <th>ruX     </th>\n                        <th>ruY     </th>\n                        <th>rbX     </th>\n                        <th>rbY     </th>\n                        <th>lbX     </th>\n                        <th>lbY     </th>\n                        <th>CarWalk </th>\n                        <th>Left    </th>\n                        <th>Up      </th>\n                        <th>Right   </th>\n                        <th>Down    </th>\n                        <th>Parking </th>\n                        <th>Stop    </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        inspected?.map((a) => renderAD(a))\n                    }\n                </tbody>\n            </table>\n        </div>\n    );\n\n}","import React, { useRef, useState } from 'react';\nimport { order } from '../utilities/data';\nimport { dot } from '../utilities/shapes';\nimport { Area, Point } from '../utilities/types';\n\nimport './IOManager.css';\n\nconst fields = [\n    \"luX\",\n    \"luY\",\n    \"ruX\",\n    \"ruY\",\n    \"rbX\",\n    \"rbY\",\n    \"lbX\",\n    \"lbY\",\n    \"CarWalk\",\n    \"Left\",\n    \"Up\",\n    \"Right\",\n    \"Down\",\n    \"Parking\",\n    \"Stop\",\n];\n\ntype IOMangerProps = {\n    target: Area[];\n    source?: string;\n};\n\nexport function IOManager({ target, source }: IOMangerProps) {\n    const dlRef = useRef<HTMLAnchorElement>(null);\n\n    const filename = source ? source.replace(\".mp4\", \"_areas.csv\") : \"areas.csv\";\n\n    const download = () => {\n        const outStr = formatData(target);\n        const blob = new Blob([outStr], { type: 'text/csv;charset=utf-8;' });\n        const dlUrl = URL.createObjectURL(blob);\n        dlRef.current?.setAttribute(\"href\", dlUrl);\n        dlRef.current?.click();\n        URL.revokeObjectURL(dlUrl);\n    };\n\n    const formatData = (target: Area[]) => {\n        const formatted = target.map(formatArea);\n        return [fields.join(',')].concat(formatted).join('\\n');\n    };\n\n    const formatArea = (area: Area) => {\n        const points = order(area.shape)\n            .map(p => [\n                Math.round(p[0]),\n                Math.round(p[1])\n            ].join(','))\n            .join(',');\n\n        const carWalk = area.isCarWalkable ? \"1\" : \"0\";\n\n        const dir: Point = area.direction ? area.direction : [0, 0];\n        const direction = [\n            dot(dir, [-1, 0]) > .25 ? \"1\" : \"0\",\n            dot(dir, [0, -1]) > .25 ? \"1\" : \"0\",\n            dot(dir, [1, 0]) > .25 ? \"1\" : \"0\",\n            dot(dir, [0, 1]) > .25 ? \"1\" : \"0\",\n        ].join(',');\n\n        const parking = area.isCarWalkable ? \"1\" : \"0\";\n        const stop = area.stop ? \"\" + area.stop : \"None\";\n\n        return [points, carWalk, direction, parking, stop].join(',');\n    };\n\n    return (\n        <div className=\"IOManager\">\n            <button\n                onClick={download}\n            >\n                Download\n            </button>\n            <a\n                ref={dlRef}\n                download={filename}\n                hidden\n            />\n        </div>\n    );\n}","import React, { useEffect, useRef, useState } from 'react';\nimport './App.scss';\nimport VideoCanvas from './components/VideoCanvas';\nimport FilePicker from './components/FilePicker';\nimport { Area, Point, Shape, Tool } from './utilities/types';\nimport ToolSelector from './components/ToolSelector';\nimport Canvas from './components/Canvas';\nimport Inspector from './components/Inspector';\nimport { IOManager } from './components/IOManager';\n\n\nexport default function App() {\n\n    const [file, setFile] = useState<File | null>(null);\n    const [videoSrc, setVideoSrc] = useState<string>(\"\");\n    const [video, setVideo] = useState<HTMLVideoElement | null>(null);\n    const [slider, setSlider] = useState<number | undefined>();\n    const [quadList, setQuadList] = useState<Area[]>([]);\n    const [tool, setTool] = useState<Tool>(Tool.ADD);\n\n    useEffect(() => {\n        if (file) {\n            const source = URL.createObjectURL(file);\n            setVideoSrc(source);\n        }\n    }, [file]);\n\n    const moveSelected = (vec: Point) => {\n        // get the selected areas\n        const selected = quadList.filter(a => a.isSelected);\n        // add the vector to the points of the selected areas\n        selected.map(a => {\n            for (const p of a.shape) {\n                p[0] += vec[0];\n                p[1] += vec[1];\n            }\n        });\n        updateQuads(selected);\n    };\n\n    const deleteSelected = () => {\n        const filteredList = quadList.filter(a => !a.isSelected);\n        setQuadList(filteredList);\n    };\n\n    const setSelected = (index: number) => {\n        quadList.map(a => a.isSelected = false);\n        if (index >= 0 && index < quadList.length) {\n            quadList[index].isSelected = true;\n        }\n        setQuadList([...quadList]);\n    };\n\n    const updateQuads = (quads: Area[]) => {\n        const notUpdated = quadList.filter(a => {\n            for (const b of quads) {\n                if (a.id === b.id)\n                    return false;\n            }\n            return true;\n        });\n        setQuadList([...quads, ...notUpdated]);\n    };\n\n    return (\n        <div className=\"App\">\n            <div>\n                <div className=\"BlockCanvas\">\n                    <Canvas\n                        img={video}\n                        quads={quadList}\n                        newQuad={(quad: Area) => setQuadList([quad, ...quadList])}\n                        tool={tool}\n                        setSelected={setSelected}\n                        moveSelected={moveSelected}\n                        deleteSelected={deleteSelected}\n                        slider={slider}\n                        width={video?.videoWidth}\n                        height={video?.videoHeight}\n                    />\n                    <VideoCanvas\n                        source={videoSrc}\n                        setVideo={setVideo}\n                        setSlider={setSlider}\n                        value={slider ?? 0}\n                    />\n                </div>\n                <div className=\"BlockButtons\">\n                    <ToolSelector\n                        value={tool}\n                        onAdd={() => { setTool(Tool.ADD); setSelected(-1); }}\n                        onSelect={() => { setTool(Tool.SELECT); setSelected(-1); }}\n                    />\n                    <FilePicker setFile={setFile} accept_types=\"video/*\" />\n                    <IOManager\n                        target={quadList}\n                        source={file?.name}\n                    />\n                </div>\n            </div>\n            <div>\n                <Inspector\n                    target={quadList}\n                    update={updateQuads}\n                />\n            </div>\n        </div>\n    );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}