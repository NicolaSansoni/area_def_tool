{"version":3,"sources":["components/Video.tsx","components/FilePicker.tsx","utilities/data.ts","utilities/area.ts","utilities/types.ts","components/ToolSelector.tsx","utilities/shapes.ts","components/Canvas.tsx","components/Inspector.tsx","components/IOManager.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Video","source","setVideo","setSlider","videoRef","value","useRef","useEffect","current","src","loader","setTimeout","duration","setVideoPos","percentage","currentTime","className","type","min","max","onChange","ev","target","ref","hidden","FilePicker","setFile","accept_types","Button","variant","color","onClick","click","accept","_","files","item","order","s","lu","sort","a","b","slice","i_lu","findIndex","p","ordered","nextP","length","prevP","i","push","Tool","Area","quad","id","shape","isCarWalkable","direction","left","up","right","down","isParking","stop","isSelected","this","newId","points","map","x","Math","round","ru","rb","lb","carWalk","dir","parking","ad","Object","values","counter","ToolSelector","onSelect","onAdd","ADD","SELECT","isPointInShape","res","edge","distancePointToPoint","hypot","projectPointToSegment","l","vec1","vec2","lineVec","vecSub","lineLen","lineVecNormalized","vecScale","pointProjLen","vecSum","v1","v2","v","n","vecFromCoordinateSystem","vecToCoordinateSystem","y","vecRotate","upRotated","vecLen","alpha","style1","width","stroke","fill","arrow","selected","style2","Canvas","img","quads","newQuad","tool","setSelected","updateQuads","deleteQuads","slider","height","useState","setPoints","dragging","setDragging","oldMouse","setOldMouse","dragIndexes","setDragIndexes","mouse","setMouse","canvasH","canvasW","canvas","context","getContext","Error","drawImage","e","fillStyle","fillRect","movement","style","lineWidth","strokeStyle","some","snapToShapes","filter","drawPath","drawArrow","drawParking","close","path","pos","shapes","flat","reduce","dist","point","d","minDist","newPoint","p1","p2","proj","canvasCtx","f_drawPoints","moveTo","beginPath","lineTo","closePath","drawPoint","tmpFill","tmpStroke","arc","dirVec","diag","diagInPerspective","ratioX","ratioY","lenUp","lenRight","ratio","handleSelect","find","indexes","distance","res_d","res_i","res_is","j","findPointInShapeIndex","tmpWidth","stopDragging","selectedAreas","updated","onMouseDown","updatedShape","newArea","addPoint","onMouseUp","onMouseLeave","q","onMouseMove","clientWidth","topLeft","offsetLeft","offsetTop","pageX","pageY","Inspector","update","selectById","inspected","setInspected","updateInspected","changed","unchanged","renderAD","renderedPoints","entries","flatMap","key","k","val","renderedDirection","checked","t","fromAreaDictionary","Check","toAreaDictionary","Clear","list","pending","fields","IOManager","load","dlRef","loadRef","filename","replace","formatData","formatted","formatArea","join","concat","area","f","console","error","text","csv","rows","split","strings","r","dictionaries","vals","newAreas","outStr","blob","Blob","dlUrl","URL","createObjectURL","setAttribute","revokeObjectURL","download","App","file","videoSrc","setVideoSrc","video","quadList","setQuadList","setTool","index","notUpdated","every","filteredList","videoWidth","undefined","videoHeight","name","arr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","primary","main","blue","secondary","red","typography","button","fontWeight","overrides","MuiButton","outlined","border","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"oXAWe,SAASA,EAAT,GAAoE,IAAnDC,EAAkD,EAAlDA,OAAQC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,UAExCC,GAFwE,EAArBC,MAExCC,iBAAyB,OAE1CC,qBAAU,WACN,GAAIH,EAASI,SAAWP,EAAQ,CAC5BG,EAASI,QAAQC,IAAMR,EACvBC,EAASE,EAASI,UAEH,SAATE,IACFC,YAAW,WAAO,IAAD,GACb,UAAIP,EAASI,eAAb,aAAI,EAAkBI,UAClBC,EAAY,GACTH,MACR,IAGPA,MAEL,CAACT,IAEJ,IAAMY,EAAc,SAACC,GACjB,GAAKV,EAASI,SAAYP,GAAWa,EAArC,CAIA,IAAMT,EAAQS,EAAa,EAAI,EAAIA,EAAa,IAAM,IAAMA,EAC5DV,EAASI,QAAQO,YAAcV,EAAQ,IAAMD,EAASI,QAAQI,SAC9DT,EAAUE,KAGd,OACI,sBAAKW,UAAU,cAAf,UACI,uBAAOA,UAAU,SACbC,KAAK,QACLC,IAAI,IACJC,IAAI,MACJC,SAAU,SAAAC,GAAQR,GAAaQ,EAAGC,OAAOjB,UAE7C,uBAAOkB,IAAKnB,EAAUoB,QAAM,O,kBCnBzBC,MArBf,YAAsE,IAAhDC,EAA+C,EAA/CA,QAA+C,IAAtCC,oBAAsC,MAAvB,GAAuB,EAE3DJ,EAAMjB,iBAAyB,MAErC,OACI,sBAAKU,UAAU,aAAf,UACI,cAACY,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAC9BC,QAAS,kCAAMR,EAAIf,eAAV,aAAM,EAAawB,SADhC,0BAKA,uBAAOR,QAAM,EACTD,IAAKA,EACLN,KAAK,OACLgB,OAAQN,EACRP,SAAU,SAAAc,GAAC,iBAAIR,EAAO,oBAACH,EAAIf,eAAL,iBAAC,EAAa2B,aAAd,aAAC,EAAoBC,KAAK,UAA1B,QAAgC,a,gBCvB/D,SAASC,EAAMC,GAClB,IAGIC,EAAK,YAAID,GAAGE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAFrB,GAE4BC,EAF5B,IAEoC,EAAI,KAAGC,MAAM,EAAG,GAAGH,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAHtE,GAG6EC,EAH7E,IAGqF,EAAI,KAAG,GAClGE,EAAON,EAAEO,WAAU,SAAAC,GAAC,OAAIA,IAAMP,KAE5BQ,EAAiB,GACjBC,EAAQV,GAAGM,EAAO,GAAKN,EAAEW,QACzBC,EAAQZ,GAAGM,EAAON,EAAEW,OAAS,GAAKX,EAAEW,QAE1C,GAAID,EATM,GASKE,EATL,GAUN,IAAK,IAAIC,EAAI,EAAGA,EAAIb,EAAEW,OAAQE,IAAK,CAC/B,IAAML,EAAIR,GAAGM,EAAOO,GAAKb,EAAEW,QAC3BF,EAAQK,KAAR,YAAiBN,SAGrB,IAAK,IAAIK,EAAI,EAAGA,EAAIb,EAAEW,OAAQE,IAAK,CAC/B,IAAML,EAAIR,GAAGM,EAAON,EAAEW,OAASE,GAAKb,EAAEW,QACtCF,EAAQK,KAAR,YAAiBN,IAIzB,OAAOC,ECrBJ,ICAKM,EDACC,EAAb,WAgBI,WAAYC,GAAe,yBAblBC,QAaiB,OAZnBC,WAYmB,OAXnBC,eAAgB,EAWG,KAVnBC,UAAY,CACfC,MAAM,EACNC,IAAI,EACJC,OAAO,EACPC,MAAM,GAMgB,KAJnBC,WAAY,EAIO,KAHnBC,KAAsB,KAGH,KAFnBC,YAAa,EAGhBC,KAAKX,GAAKF,EAAKc,QACfD,KAAKV,MAAL,OAAaF,QAAb,IAAaA,IAAQ,CAAC,EAAE,GAAI,GAAI,EAAE,GAAI,GAAI,EAAE,GAAI,GAAI,EAAE,GAAI,IAlBlE,oDAyBI,WAAoC,IAAD,IACzBc,EAAShC,EAAM8B,KAAKV,OACjB,EAAGU,KAAKR,UACjB,MAAO,CACHH,GAAIW,KAAKX,GACTa,OAAQ,CACJ9B,GAAI8B,EAAO,GAAGC,KAAI,SAAAC,GAAC,OAAIC,KAAKC,MAAMF,MAClCG,GAAIL,EAAO,GAAGC,KAAI,SAAAC,GAAC,OAAIC,KAAKC,MAAMF,MAClCI,GAAIN,EAAO,GAAGC,KAAI,SAAAC,GAAC,OAAIC,KAAKC,MAAMF,MAClCK,GAAIP,EAAO,GAAGC,KAAI,SAAAC,GAAC,OAAIC,KAAKC,MAAMF,OAEtCM,QAASV,KAAKT,cACdoB,IAAKX,KAAKR,UACVoB,QAASZ,KAAKH,UACdC,KAAK,GAAD,iBAAKE,KAAKF,YAAV,QAAkB,QACtB1C,IAAK4C,QAxCjB,gCA4CI,SAAmBa,GACfb,KAAKV,MAAQwB,OAAOC,OAAOF,EAAGX,QAC9BF,KAAKT,cAAgBsB,EAAGH,QAYxB,OALAV,KAAKR,UAAYqB,EAAGF,IAEpBX,KAAKH,UAAYgB,EAAGD,QACpBZ,KAAKF,KAAOe,EAAGf,KACfe,EAAGzD,IAAM4C,KACFA,QA1Df,oBAqBI,WACI,OAAOb,EAAK6B,cAtBpB,KAAa7B,EACM6B,QAAU,E,SCDjB9B,O,aAAAA,I,oBAAAA,M,WCOG,SAAS+B,EAAT,GAAsE,IAA9C/E,EAA6C,EAA7CA,MAAOgF,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,MACpD,OACI,sBAAKtE,UAAU,eAAf,UACI,cAACY,EAAA,EAAD,CACIC,QAASxB,IAAUgD,EAAKkC,IAAM,YAAc,WAC5CzD,MAAM,YACNC,QAASuD,EAHb,iBAQA,cAAC1D,EAAA,EAAD,CACIC,QAASxB,IAAUgD,EAAKmC,OAAS,YAAc,WAC/C1D,MAAM,YACNC,QAASsD,EAHb,uB,kBCbL,SAASI,EAAe3C,EAAWR,GAItC,IAHA,IAAIoD,GAAM,EAGDvC,EAAI,EAAGA,EAAIb,EAAEW,OAAQE,IAAK,CAE/B,IAAMwC,EAAO,CAACrD,EAAEa,GAAIb,GAAGa,EAAI,GAAKb,EAAEW,UAG1B0C,EAAK,GANP,IAMgB7C,EANhB,IAMwB6C,EAAK,GAN7B,IAMsC7C,EANtC,IAOE6C,EAAK,GAPP,IAOgB7C,EAPhB,IAOwB6C,EAAK,GAP7B,IAOsC7C,EAPtC,KAWEA,EAZF,IAYU6C,EAAK,GAZf,GAYuBA,EAAK,GAZ5B,KAYsC7C,EAXtC,GAW6C6C,EAAK,GAXlD,KAW4DA,EAAK,GAXjE,GAWyEA,EAAK,GAX9E,IAWuFA,EAAK,GAZ5F,KAeFD,GAAOA,GAGf,OAAOA,EAGJ,SAASE,EAAqBnD,EAAWC,GAE5C,OAAO8B,KAAKqB,MAAMpD,EAAE,GAAKC,EAAE,GAAID,EAAE,GAAKC,EAAE,IAkCrC,SAASoD,EAAsBhD,EAAWiD,GAE7C,IASgBC,EAAcC,EATxBC,EAAUC,EAAOJ,EAAE,GAAIA,EAAE,IACzBK,EAAUR,EAAqBG,EAAE,GAAIA,EAAE,IACvCM,EAAoBC,EAASJ,EAAS,EAAIE,GAC1CG,GAMUP,EANSG,EAAOrD,EAAGiD,EAAE,IAMPE,EANYI,EAOnCL,EAAK,GAAKC,EAAK,GAAKD,EAAK,GAAKC,EAAK,IAN1C,OAAIM,EAAe,GAAKA,EAAeH,EAAgB,KACrCI,EAAOT,EAAE,GAAIO,EAASD,EAAmBE,IAQxD,SAASC,EAAOC,EAAYC,GAC/B,MAAO,CAACD,EAAG,GAAKC,EAAG,GAAID,EAAG,GAAKC,EAAG,IAO/B,SAASP,EAAOM,EAAYC,GAC/B,OAAOF,EAAOC,EAJP,GADiBE,EAKMD,GAJnB,IAAKC,EAAE,KADf,IAAqBA,EAQrB,SAASL,EAASK,EAAWC,GAChC,MAAO,CAACD,EAAE,GAAKC,EAAGD,EAAE,GAAKC,GAOtB,SAASC,EAAwBF,EAAW9C,EAAYC,GAC3D,OAAO0C,EAAOF,EAASxC,EAAO6C,EAAE,IAAKL,EAASzC,EAAI8C,EAAE,KAGjD,SAASG,EAAsBH,EAAW9C,EAAYC,GASzD,IAAMiD,GAAKJ,EAAE,GAAK7C,EAAM,GAAK6C,EAAE,GAAK7C,EAAM,KAAOD,EAAG,GAAKC,EAAM,GAAKD,EAAG,GAAKC,EAAM,IAElF,MAAO,EADI6C,EAAE,GAAK9C,EAAG,GAAKkD,GAAKjD,EAAM,GAC1BiD,GAGR,SAASC,EAAUL,EAAWM,GACjC,IAAMpD,EAAKyC,EAASW,EAAW,EAvB5B,SAAgBN,GACnB,OAAOf,EAAqB,CAAC,EAAG,GAAIe,GAsBDO,CAAOD,IAE1C,OAAOJ,EAAwBF,EAAG9C,EADpB,CAACA,EAAG,IAAKA,EAAG,KCrH9B,IAOMsD,EAAQ,IAERC,EAAS,CACXC,MAAO,EACPC,OAAO,mBACPC,KAAK,qBAAD,OAAuBJ,EAAvB,KACJK,MAAM,qBAAD,OAAuBL,GAAvB,KACLM,SAAU,CACNJ,MAAO,EACPC,OAAO,oBACPC,KAAK,sBAAD,OAAwBJ,EAAxB,KACJK,MAAM,sBAAD,OAAwBL,GAAxB,OAIPO,EAAS,CACXL,MAAO,EACPC,OAAO,mBACPC,KAAK,qBAAD,OAAuBJ,EAAvB,KACJK,MAAM,qBAAD,OAAuBL,GAAvB,KACLM,SAAU,CACNJ,MAAO,EACPC,OAAO,oBACPC,KAAK,sBAAD,OAAwBJ,EAAxB,KACJK,MAAM,sBAAD,OAAwBL,GAAxB,OAiBE,SAASQ,EAAT,GAEE,IADbC,EACY,EADZA,IAAKC,EACO,EADPA,MAAOC,EACA,EADAA,QAASC,EACT,EADSA,KAAMC,EACf,EADeA,YAAaC,EAC5B,EAD4BA,YAAaC,EACzC,EADyCA,YAAaC,EACtD,EADsDA,OAAQd,EAC9D,EAD8DA,MAAOe,EACrE,EADqEA,OACrE,EAEgBC,mBAAgB,IAFhC,mBAELhE,EAFK,KAEGiE,EAFH,OAGoBD,oBAAkB,GAHtC,mBAGLE,EAHK,KAGKC,EAHL,OAIoBH,mBAAwB,MAJ5C,mBAILI,EAJK,KAIKC,EAJL,OAK0BL,mBAA0B,MALpD,mBAKLM,EALK,KAKQC,EALR,KAONrH,EAAMjB,iBAA0B,MAP1B,EAQc+H,mBAAoC,CAAE9D,EAAG,EAAGwC,EAAG,IAR7D,mBAQL8B,EARK,KAQEC,EARF,KAURC,EA3DS,KA4DTC,EA7DS,KA+DbzI,qBAAU,WACN,IAAM0I,EAAS1H,EAAIf,QACb0I,EAAO,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAQE,WAAW,MACnC,GAAKF,GAAWC,EAAhB,CAIAH,EAAUE,EAAOb,OACjBY,EAAUC,EAAO5B,MAGjB,IACI,IAAKO,EAAK,MAAMwB,MAChBF,EAAQG,UAAUzB,EAAK,EAAG,EAAGqB,EAAO5B,MAAO4B,EAAOb,QACpD,MAAOkB,GACLJ,EAAQK,UAAY,OACpBL,EAAQM,SAAS,EAAG,EAAGP,EAAO5B,MAAO4B,EAAOb,QAGhD,IAAIqB,EAAmB,CAAC,EAAG,GAEvBlB,GAAYE,IACZgB,EAAW,CAACZ,EAAMtE,EAAKkE,EAAS,GAAII,EAAM9B,EAAK0B,EAAS,KAtBhD,oBA0BOZ,GA1BP,yBA0BDtE,EA1BC,QA2BJmG,OAAK,EAELA,EADAnG,EAAKG,cACG0D,EAEAM,EAERnE,EAAKW,aACLwF,EAAQA,EAAMjC,UAElByB,EAAQS,UAAYD,EAAMrC,MAC1B6B,EAAQU,YAAcF,EAAMpC,OAC5B4B,EAAQK,UAAYG,EAAMnC,KAE1B,IAAM9D,EAAQF,EAAKW,WACbX,EAAKE,MAAMa,KAAI,SAACxB,EAAGK,GACjB,OAAIwF,GAAeA,EAAYkB,MAAK,SAAAjD,GAAC,OAAIA,IAAMzD,KACpC2G,EAAatD,EAAO1D,EAAG2G,GAAW5B,EAAMkC,QAAO,SAAAtH,GAAC,OAAIA,EAAEe,KAAOD,EAAKC,MAAIc,KAAI,SAAA7B,GAAC,OAAIA,EAAEgB,UAChFX,KAEdS,EAAKE,MAGXuG,GAASd,EAASzF,EAAOF,EAAKW,YAC9B+F,GAAUf,EAASzF,EAAO,CAAC,EAAG,GAAIiG,EAAMlC,OACpCjE,EAAKS,WAAWkG,GAAYhB,EAASzF,EAAO,SAzBpD,2BAA2B,IA1Bf,8BAsDZ,GAAIoF,EAAMtE,GAAKsE,EAAM9B,GAGb1C,GAAU0D,IAAS1E,EAAKkC,IAAK,CAC7B,IAAI4E,GAAQ,EAERC,EAAI,CADIN,EAAa,CAACjB,EAAMtE,EAAGsE,EAAM9B,GAAIc,EAAMvD,KAAI,SAAA7B,GAAC,OAAIA,EAAEgB,WACtD,mBAAYY,IACE,IAAlBA,EAAOpB,SACPkH,GAAQ,GAEZjB,EAAQS,UAAYvC,EAAOC,MAC3B6B,EAAQU,YAAcxC,EAAOE,OAC7B4B,EAAQK,UAAYnC,EAAOG,KAC3ByC,GAASd,EAASkB,GAAM,EAAMD,OAKvC,CAACvC,EAAKC,EAAOE,EAAMc,EAAOxE,EAAQ8D,EAAQd,IAE7C,IAAMyC,EAAe,SAACO,EAAaC,GAG/BA,EAAOlH,KAAK,CAAC,CAAC,EAAG,GAAI,CAAC4F,EAAS,GAAI,CAACA,EAASD,GAAU,CAAC,EAAGA,KAHR,MAIzBuB,EAAOC,OAAOC,QAAO,WAAyC1H,GAAO,IAAD,mBAA7C2H,EAA6C,KAAvCC,EAAuC,KACpFC,EAAI/E,EAAqByE,EAAKvH,GACpC,OAAI6H,EAAIF,IAAkB,IAAVA,EAAoB,CAACE,EAAG7H,GAC5B,CAAC2H,EAAMC,KACpB,EAAE,EAAG,OAR2C,mBAI9CE,EAJ8C,KAIrCC,EAJqC,KAUnD,GAAIA,GAAYD,EAhJF,GAiJVP,EAAMQ,MACH,CAAC,IAAD,EACmBP,EAAOE,QAAO,WAAyClI,GAAO,IAAD,mBAA7CmI,EAA6C,KAAvCC,EAAuC,OAElEpI,EAAEkI,QAAO,WAAyCM,EAAI3H,EAAGb,GAAO,IAIrEqI,EAJoE,mBAApDF,EAAoD,KAA9CC,EAA8C,KAElEK,EAAKzI,GAAGa,EAAI,GAAKb,EAAEW,QACrB+H,EAAOlF,EAAsBuE,EAAK,CAACS,EAAIC,IAG3C,OAAIC,KACAL,EAAI/E,EAAqByE,EAAKW,IAGtBP,IAAkB,IAAVA,GAAoB,CAACE,EAFjCK,GAID,CAACP,EAAMC,KACf,EAAE,EAAG,OAfuE,mBAE1EC,EAF0E,KAEvE7H,EAFuE,KAkB/E,OAAIA,GAAK6H,EAAIF,IAAkB,IAAVA,EAAoB,CAACE,EAAG7H,GACtC,CAAC2H,EAAMC,KACf,EAAE,EAAG,OArBL,mBACFE,EADE,MACOC,EADP,OAuBaD,EAzKN,KA0KNP,EAAMQ,GAId,OAAOR,GAyBLL,GAAW,SAACiB,EAAqC5G,GAAoE,IAAxC6G,EAAuC,wDAAjBf,IAAiB,yDAClH9F,EAAO,IACP4G,EAAUE,OAAO9G,EAAO,GAAG,GAAIA,EAAO,GAAG,IAC7C4G,EAAUG,YAH4G,oBAItG/G,GAJsG,IAItH,2BAAwB,CAAC,IAAdvB,EAAa,QACpBmI,EAAUI,OAAOvI,EAAE,GAAIA,EAAE,KALyF,8BActH,GANIqH,GACAc,EAAUK,YAEdL,EAAU3D,SACV2D,EAAU1D,OAEN2D,EAAc,CAAC,IAAD,gBACE7G,GADF,IACd,gCAAWvB,EAAX,QACIyI,GAAUN,EAAWnI,IAFX,iCAMhByI,GAAY,SAACN,EAAqCP,GACpD,IAAMc,EAAUP,EAAU1B,UACpBkC,EAAYR,EAAUrB,YAC5BqB,EAAU1B,UAAY,OACtB0B,EAAUrB,YAAc,OACxBqB,EAAUG,YACVH,EAAUS,IAAIhB,EAAM,GAAIA,EAAM,GAlOjB,EAkOmC,EAAG,KACnDO,EAAUK,YACVL,EAAU1D,OACV0D,EAAU3D,SACV2D,EAAU1B,UAAYiC,EACtBP,EAAUrB,YAAc6B,GAGtBxB,GAAY,SAACgB,EAAqC1H,EAAgBoI,GAAoC,IAApB7J,EAAmB,uDAAX,OAEtF+B,EAAKsC,EAAO5C,EAAK,GAAIA,EAAK,IAE1BO,EAAQqC,EAAO5C,EAAK,GAAIA,EAAK,IAE7BqI,EAAOzF,EAAO5C,EAAK,GAAIA,EAAK,IAE5BsI,EAAoB/E,EAAsB8E,EAAM/H,EAAIC,GASpDgI,EAASD,EAAkB,GAAK,EAChCE,EAASF,EAAkB,GAAK,EAEhCG,EAAQpG,EAAqBrC,EAAK,GAAIA,EAAK,IAAMqC,EAAqBrC,EAAK,GAAIA,EAAK,IACpF0I,EAAWrG,EAAqBrC,EAAK,GAAIA,EAAK,IAAMqC,EAAqBrC,EAAK,GAAIA,EAAK,IACvF2I,EAAQF,EAAQC,EAGlBzE,EAAe,CAAC,EAAE,IAAK,IAAK,CAAC,EAAG,IAAK,CAAC,IAAK,IAAK,CAAC,GAAI,KAMzDA,GAFAA,GAFAA,EAAQA,EAAMlD,KAAI,SAAAqC,GAAC,OAAIK,EAAUL,EAAGgF,OAEtBrH,KAAI,SAAAqC,GAAC,MAAI,CAACA,EAAE,IAAKA,EAAE,QAEnBrC,KAAI,SAAAqC,GAAC,OAAIL,EAASK,EAvQpB,QAwRZa,GAFAA,GAPAA,GAFAA,GAJAA,EAAQ0E,EAAQ,EACV1E,EAAMlD,KAAI,SAAAqC,GAAC,MAAI,CAACA,EAAE,GAAIA,EAAE,GAAKuF,MAC7B1E,EAAMlD,KAAI,SAAAqC,GAAC,MAAI,CAACA,EAAE,GAAKuF,EAAOvF,EAAE,QAExBrC,KAAI,SAAAqC,GAAC,OAAIH,EAAOG,EAAG,CAAC,GAAI,SAExBrC,KAAI,SAAAqC,GACd,MAAO,CACHA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKmF,EACrBnF,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKoF,OAIfzH,KAAI,SAAAqC,GAAC,OAAIE,EAAwBF,EAAG9C,EAAIC,OAExCQ,KAAI,SAAAqC,GAAC,OAAIH,EAAOG,EAAGpD,EAAK,OAEtC,IAAMiI,EAAUP,EAAU1B,UACpBkC,EAAYR,EAAUrB,YAG5BqB,EAAU1B,UAAYzH,EAEtBkI,GAASiB,EAAWzD,GAAO,GAAO,GAElCyD,EAAU1B,UAAYiC,EACtBP,EAAUrB,YAAc6B,GAGtBU,GAAe,WAEjB,IAAM1E,EAAWI,EAAMuE,MAAK,SAAA3J,GAAC,OAAIA,EAAEyB,cAC/BmI,EAA2B,KAC/B,GAAI5E,EAAU,CAEV,IACI6E,EADEjI,EAASoD,EAAShE,MAExB4I,EAAU,EAAE,GAJF,MAMehI,EAAOmG,QAAO,WAAiB1H,EAAGK,GAAO,IAAD,mBAAxBoJ,EAAwB,KAAjBC,EAAiB,KACvD7B,EAAI/E,EAAqB,CAACiD,EAAMtE,EAAIsE,EAAM9B,GAAKjE,GACrD,OAAO6H,EAAI4B,EAAQ,CAAC5B,EAAGxH,GAAK,CAACoJ,EAAOC,KACrC,CAAC,KAAM,IATA,mBAWV,GALCF,EANS,KAMCD,EAAQ,GANT,KAWNC,EAtTM,GAsToB,CAAC,IAAD,EACJjI,EAAOmG,QAAO,WAAkB1H,EAAGK,EAAGkB,GAAY,IAAD,mBAAjCkI,EAAiC,KAA1BE,EAA0B,KAC7DC,GAAKvJ,EAAI,GAAKkB,EAAOpB,OACrB6H,EAAKzG,EAAOqI,GACZ1B,EAAOlF,EAAsB,CAAC+C,EAAMtE,EAAIsE,EAAM9B,GAAK,CAACjE,EAAGgI,IAC7D,IAAKE,EAAM,MAAO,CAACuB,EAAOE,GAC1B,IAAMhC,EAAO7E,EAAqB,CAACiD,EAAMtE,EAAIsE,EAAM9B,GAAKiE,GACxD,OAAOP,EAAO8B,EAAQ,CAAC9B,EAAM,CAACtH,EAAGuJ,IAAM,CAACH,EAAOE,KAChD,CAAC,IAAK,EAAE,KARe,mBACzBH,EADyB,KACfD,EADe,KAW1BC,EAjUM,KAmUFD,EADA5G,EAAe,CAACoD,EAAMtE,EAAGsE,EAAM9B,GAAIU,EAAShE,OAClC,CAAC,EAAG,EAAG,EAAG,GAEV,MAKtB,GAAI4I,EAEAzD,EAAeyD,GACf7D,GAAY,GACZE,EAAY,CAACG,EAAMtE,EAAIsE,EAAM9B,QAC1B,CAEH,IAAMzF,EDxVX,SAA+BA,EAAgBgJ,GAClD,IAAK,IAAInH,EAAI,EAAGA,EAAImH,EAAOrH,OAAQE,IAC/B,GAAIsC,EAAenE,EAAQgJ,EAAOnH,IAAK,OAAOA,EAElD,OAAQ,ECoVewJ,CAAsB,CAAC9D,EAAMtE,EAAGsE,EAAM9B,GAAIc,EAAMvD,KAAI,SAAA7B,GAAC,OAAIA,EAAEgB,UAC1EuE,EAAY1G,KAId4I,GAAc,SAACe,EAAqC1H,GAAoC,IAApBzB,EAAmB,uDAAX,OAE9E,GAAoB,IAAhByB,EAAKN,OAAT,CAEA,IAAMwI,EAAYR,EAAUrB,YACtBgD,EAAW3B,EAAUtB,UAC3BsB,EAAUrB,YAAc9H,EACxBmJ,EAAUtB,UAAY,EAEtBK,GAASiB,EAAW,CAAC1H,EAAK,GAAIA,EAAK,KAAK,GAAO,GAC/CyG,GAASiB,EAAW,CAAC1H,EAAK,GAAIA,EAAK,KAAK,GAAO,GAE/C0H,EAAUrB,YAAc6B,EACxBR,EAAUtB,UAAYiD,IAgBpBC,GAAe,WACjB,GAAItE,GAAYE,EAAU,CACtB,IAAMqE,EAAgBjF,EAAMkC,QAAO,SAAAtH,GAAC,OAAIA,EAAEyB,cACpCuF,EAAmB,CAACZ,EAAMtE,EAAKkE,EAAS,GAAII,EAAM9B,EAAK0B,EAAS,IAChEsE,EAAUD,EAAcxI,KAAI,SAAA7B,GAM9B,OALAA,EAAEgB,MAAQhB,EAAEgB,MAAMa,KAAI,SAACxB,EAAGK,GACtB,OAAIwF,GAAeA,EAAYkB,MAAK,SAAAjD,GAAC,OAAIA,IAAMzD,KACpC2G,EAAatD,EAAO1D,EAAG2G,GAAW5B,EAAMkC,QAAO,SAAArH,GAAC,OAAIA,EAAEc,KAAOf,EAAEe,MAAIc,KAAI,SAAA5B,GAAC,OAAIA,EAAEe,UAC7EX,KAETL,KAEXwF,EAAY8E,GACZvE,GAAY,GACZI,EAAe,MACfF,EAAY,QAgCpB,OACI,qBAAK1H,UAAU,SAAf,SACI,wBACIO,IAAKA,EACLyL,YAhEQ,WAChB,OAAQjF,GACJ,KAAK1E,EAAKkC,KAvLD,WACb,GAAKsD,EAAMtE,GAAMsE,EAAM9B,EAAvB,CAIA,IAAIsD,EAAc,CAACxB,EAAMtE,EAAGsE,EAAM9B,GAI5BkG,EAAY,CAFlB5C,EAAMP,EAAaO,EAAKxC,EAAMvD,KAAI,SAAA7B,GAAC,OAAIA,EAAEgB,WAEvB,mBAAYY,IAE9B,GAA4B,IAAxB4I,EAAahK,OAAc,CAC3B,IAAMiK,EAAU,IAAI5J,EAAKjB,EAAM4K,IAC/BC,EAAQhJ,YAAa,EACrB8D,GAAa,GACbF,EAAQoF,GACR5E,EAAU,SAEVA,EAAU2E,IAsKNE,GACA,MACJ,KAAK9J,EAAKmC,OACN2G,KACA,MACJ,QACI,MAAM/C,MAAM,yBAwDZgE,UAjCM,WACdP,MAiCQQ,aA9BS,WACjB/E,EAAU,IACNC,GAAoC,KAAb,OAAXI,QAAW,IAAXA,OAAA,EAAAA,EAAa1F,SACzBuF,GAAY,GACZI,EAAe,MACfF,EAAY,MACZR,EAAYL,EAAMkC,QAAO,SAAAuD,GAAC,OAAIA,EAAEpJ,gBAGhC2I,MAsBIU,YAAa,SAAAjE,GAAC,OAnBN,SAACA,GACjB,IAAML,EAAS1H,EAAIf,QACnB,GAAIyI,EAAQ,CACR,IAAMiD,EAAQjD,EAAOuE,YAAcvE,EAAO5B,MACpCoG,EAAU,CAACxE,EAAOyE,WAAYzE,EAAO0E,WAC3C7E,EAAS,CACLvE,GAAI+E,EAAEsE,MAAQH,EAAQ,IAAMvB,EAC5BnF,GAAIuC,EAAEuE,MAAQJ,EAAQ,IAAMvB,KAYVqB,CAAYjE,IAC9BjC,MAAK,OAAEA,QAAF,IAAEA,IA7aN,KA8aDe,OAAM,OAAEA,QAAF,IAAEA,IA7aP,S,0BCQF,SAAS0F,EAAT,GAAoE,IAA/CxM,EAA8C,EAA9CA,OAAQyM,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,WAA8B,EAE5C3F,qBAF4C,mBAEvE4F,EAFuE,KAE5DC,EAF4D,KAGxEC,EAAkB,SAACpB,GAA6C,IAApBqB,IAAmB,yDAEjE,GADArB,EAAQqB,QAAUA,EACbH,EAAL,CACA,IAAMI,EAAS,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAWlE,QAAO,SAAAtH,GAAC,OAAIA,EAAEe,KAAOuJ,EAAQvJ,MAC1D0K,EAAa,CAACnB,GAAD,mBAAasB,IAAW7L,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEe,GAAKd,EAAEc,IAAM,EAAI,QAyB3E,SAAS8K,EAAS7L,GAAoB,IAAD,IAmB3B8L,EAAiBtJ,OAAOuJ,QAAQ/L,EAAE4B,QACnCoK,SAAQ,gBAlBmBC,EAAanN,EAkBhC,mBAAEoN,EAAF,KAAKhI,EAAL,YAlBmB+H,EAkBQC,EAlBKpN,EAkBFkB,EAANkE,EAjBxBrC,KAAI,SAACsK,EAAKzL,GACf,OACI,6BACI,uBACIlC,KAAK,SACLZ,MAAOmE,KAAKC,MAAMmK,GAClBxN,SAAU,SAAAkI,GACL/H,EAAI8C,OAAsBqK,GAAKvL,IAAMmG,EAAEhI,OAAOjB,MAC/C8N,EAAgB5M,OAN5B,UAAYmN,GAAZ,OAAkBvL,UAiBxB0L,EAAoB5J,OAAOuJ,QAAQ/L,EAAEqC,KACtCR,KAAI,YAAa,IAAD,mBAAVqK,EAAU,KAAPhI,EAAO,KACb,OACI,6BACI,uBAAO1F,KAAK,WACR6N,QAASnI,EACTvF,SAAU,WACLqB,EAAEqC,IAAmB6J,IAAOlM,EAAEqC,IAAmB6J,GAClDR,EAAgB1L,OALnBkM,MAYrB,OACI,qBAAe5M,QAAS,kBAAMiM,EAAWvL,EAAEe,KAAKxC,WAAW,UAAAyB,EAAElB,WAAF,eAAO2C,YAAa,WAAa,GAA5F,UACKqK,EACD,6BACI,uBAAOtN,KAAK,WACR6N,QAASrM,EAAEoC,QACXzD,SAAU,WACNqB,EAAEoC,SAAWpC,EAAEoC,QACfsJ,EAAgB1L,OALpB,iBASPoM,EACD,6BACI,uBAAO5N,KAAK,WACR6N,QAASrM,EAAEsC,QACX3D,SAAU,WACNqB,EAAEsC,SAAWtC,EAAEsC,QACfoJ,EAAgB1L,OALpB,aASR,6BACI,uBACIxB,KAAK,OACLZ,MAAK,UAAEoC,EAAEwB,YAAJ,QAAY,OACjB7C,SAAU,SAAAkI,GACN7G,EAAEwB,KAAOqF,EAAEhI,OAAOjB,MAClB8N,EAAgB1L,OANpB,UAUR,oBAAIzB,UAAYyB,EAAE2L,QAAmB,QAAT,SAC5B,oBAAiBpN,UAAYyB,EAAE2L,QAAmB,GAAT,OAAzC,SACI,cAACxM,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAE9BC,QAAS,WACLoM,EAAgB1L,GAAG,GACnBsL,EAAO,CACHzM,EAAO8K,MAAK,SAAA2C,GAAC,OAAIA,EAAEvL,KAAOf,EAAEe,MAAKwL,mBAAmBvM,MALhE,SASI,cAACwM,EAAA,EAAD,OAVA,UAaR,oBAAkBjO,UAAYyB,EAAE2L,QAAmB,GAAT,OAA1C,SACI,cAACxM,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAC9Bd,UAAYyB,EAAE2L,QAAmB,GAAT,OACxBrM,QAAS,WACLU,EAAInB,EAAO8K,MAAK,SAAA2C,GAAC,OAAIA,EAAEvL,KAAOf,EAAEe,MAAK0L,mBACrCf,EAAgB1L,GAAG,IAJ3B,SAOI,cAAC0M,EAAA,EAAD,OARA,aA7CH1M,EAAEe,IA4DnB,OAxHAjD,qBAAU,WAEN,IAMI6O,EANa9N,EAMGgD,KAAI,SAAA7B,GAAC,OAAIA,EAAEyM,sBAEzBG,EAAO,OAAGpB,QAAH,IAAGA,OAAH,EAAGA,EAAWlE,QAAO,SAAAgF,GAAC,OAAIA,EAAEX,WAMzCgB,GALAA,EAAOA,EAAK9K,KAAI,SAAA7B,GACZ,IAAMsM,EAAC,OAAGM,QAAH,IAAGA,OAAH,EAAGA,EAASjD,MAAK,SAAA2C,GAAC,OAAIA,EAAEvL,KAAOf,EAAEe,MACxC,OAAOuL,GAAQtM,MAGPD,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEe,GAAKd,EAAEc,IAAM,EAAI,KAE9C0K,EAAakB,KACd,CAAC9N,IAsGA,qBAAKN,UAAU,YAAf,SACI,kCACI,gCACI,+BACI,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,+CAGR,uCAEQiN,QAFR,IAEQA,OAFR,EAEQA,EAAW3J,KAAI,SAAC7B,GAAD,OAAO6L,EAAS7L,a,6BCnKjD6M,G,MAAS,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,UACA,OACA,KACA,QACA,OACA,UACA,SASG,SAASC,EAAT,GAA6D,IAAxCjO,EAAuC,EAAvCA,OAAQrB,EAA+B,EAA/BA,OAAQuP,EAAuB,EAAvBA,KAClCC,EAAQnP,iBAA0B,MAClCoP,EAAUpP,iBAAyB,MAEnCqP,EAAW1P,EAASA,EAAO2P,QAAQ,OAAQ,cAAgB,YAW3DC,EAAa,SAACvO,GAChB,IAAMwO,EAAYxO,EAAOgD,IAAIyL,GAC7B,MAAO,CAACT,EAAOU,KAAK,MAAMC,OAAOH,GAAWE,KAAK,OAG/CD,EAAa,SAACG,GAChB,IAAMlL,EAAKkL,EAAKhB,mBAEV7K,EAAS,CAACW,EAAGX,OAAO9B,GAAIyC,EAAGX,OAAOK,GAAIM,EAAGX,OAAOM,GAAIK,EAAGX,OAAOO,IAAIN,KAAI,SAAAxB,GAAC,OAAIA,EAAEkN,KAAK,QAAMA,KAAK,KAC7FnL,EAAUG,EAAGH,QAAU,EAAI,EAC3BE,EAAUC,EAAGD,QAAU,EAAI,EAC3Bd,EAAOe,EAAGf,KAGhB,MAAO,CAACI,EAAQQ,EAFE,CAACG,EAAGF,IAAIlB,KAAMoB,EAAGF,IAAIjB,GAAImB,EAAGF,IAAIhB,MAAOkB,EAAGF,IAAIf,MAAMO,KAAI,SAAA6L,GAAC,OAAIA,EAAI,EAAI,KAAGH,KAAK,KAE3DjL,EAASd,GAAM+L,KAAK,MAGtDtP,EAAM,uCAAG,WAAOyP,GAAP,uBAAA1N,EAAA,yDACN0N,EADM,uBAEPC,QAAQC,MAAM,wBAFP,0CAKOF,EAAEG,OALT,OAKLC,EALK,OAMLC,EAAOD,EAAIE,MAAM,MAAM1G,QAAO,SAAAzH,GAAC,MAAU,KAANA,KACnCoO,EAAUF,EAAK7N,MAAM,GAAG2B,KAAI,SAAAqM,GAAC,OAAIA,EAAEF,MAAM,QACzCG,EAAeF,EAAQpM,KAAI,SAAAqM,GAC7B,IAAI3L,EAAU,CAAEX,OAAQ,GAAIS,IAAK,IAC3B+L,EAAiBF,EAAErM,KAAI,SAAAqC,GAAC,OAAKA,KAYnC,OAXA3B,EAAGX,OAAO9B,GAAKsO,EAAKlO,MAAM,EAAG,GAC7BqC,EAAGX,OAAOK,GAAKmM,EAAKlO,MAAM,EAAG,GAC7BqC,EAAGX,OAAOM,GAAKkM,EAAKlO,MAAM,EAAG,GAC7BqC,EAAGX,OAAOO,GAAKiM,EAAKlO,MAAM,EAAG,GAC7BqC,EAAGH,QAAUgM,EAAK,GAAK,EACvB7L,EAAGF,IAAIlB,KAAOiN,EAAK,GAAK,EACxB7L,EAAGF,IAAIjB,GAAKgN,EAAK,IAAM,EACvB7L,EAAGF,IAAIhB,MAAQ+M,EAAK,IAAM,EAC1B7L,EAAGF,IAAIf,KAAO8M,EAAK,IAAM,EACzB7L,EAAGD,QAAU8L,EAAK,IAAM,EACxB7L,EAAGf,KAAO0M,EAAE,IACL3L,KAEL8L,EAAWF,EAAatM,KAAI,SAAAU,GAAE,OAAI,IAAI1B,GAAO0L,mBAAmBhK,MACtEwK,EAAKsB,GAzBM,4CAAH,sDA4BZ,OACI,sBAAK9P,UAAU,YAAf,UACI,cAACY,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAC9BC,QAAS,kCAAM2N,EAAQlP,eAAd,aAAM,EAAiBwB,SADpC,sBAKA,uBAAOR,QAAM,EACTP,KAAK,OACLM,IAAKmO,EACLzN,OAAO,OACPb,SAAU,4BAAMV,EAAM,oBAACgP,EAAQlP,eAAT,iBAAC,EAAiB2B,aAAlB,aAAC,EAAwBC,KAAK,UAA9B,QAAoC,SAG9D,cAACR,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAC9BC,QArEK,WAAO,IAAD,IACbgP,EAASlB,EAAWvO,GACpB0P,EAAO,IAAIC,KAAK,CAACF,GAAS,CAAE9P,KAAM,4BAClCiQ,EAAQC,IAAIC,gBAAgBJ,GAClC,UAAAvB,EAAMjP,eAAN,SAAe6Q,aAAa,OAAQH,GACpC,UAAAzB,EAAMjP,eAAN,SAAewB,QACfmP,IAAIG,gBAAgBJ,IA8DhB,sBAKA,mBACI3P,IAAKkO,EACL8B,SAAU5B,EACVnO,QAAM,OCrGP,SAASgQ,IAAO,IAAD,EAEFnJ,mBAAsB,MAFpB,mBAEnBoJ,EAFmB,KAEb/P,EAFa,OAGM2G,mBAAiB,IAHvB,mBAGnBqJ,EAHmB,KAGTC,EAHS,OAIAtJ,mBAAkC,MAJlC,mBAInBuJ,EAJmB,KAIZ1R,EAJY,OAKEmI,qBALF,mBAKnBF,EALmB,KAKXhI,EALW,OAMMkI,mBAAiB,IANvB,mBAMnBwJ,EANmB,KAMTC,EANS,OAOFzJ,mBAAehF,EAAKkC,KAPlB,mBAOnBwC,EAPmB,KAObgK,EAPa,KAS1BxR,qBAAU,WACN,GAAIkR,EAAM,CACN,IAAMxR,EAASkR,IAAIC,gBAAgBK,GACnCE,EAAY1R,MAEjB,CAACwR,IAEJ,IAKMzJ,EAAc,SAACgK,GACjBH,EAASvN,KAAI,SAAA7B,GAAC,OAAIA,EAAEyB,YAAa,KAC7B8N,GAAS,GAAKA,EAAQH,EAAS5O,SAC/B4O,EAASG,GAAO9N,YAAa,GAEjC4N,EAAY,YAAID,KAOd5J,EAAc,SAACJ,GACjB,IAAMoK,EAAaJ,EAAS9H,QAAO,SAAAtH,GAAC,OAAIoF,EAAMqK,OAAM,SAAAxP,GAAC,OAAIA,EAAEc,KAAOf,EAAEe,SACpEsO,EAAY,GAAD,mBAAKjK,GAAL,YAAeoK,MAG9B,OACI,sBAAKjR,UAAU,MAAf,UACI,gCACI,sBAAKA,UAAU,cAAf,UACI,cAAC,EAAD,CACI4G,IAAKgK,EACL/J,MAAOgK,EACP/J,QAAS,SAACvE,GAAD,OAAgBuO,EAAY,CAACvO,GAAF,mBAAWsO,MAC/C9J,KAAMA,EACNC,YAAaA,EACbC,YAAaA,EACbC,YAjCA,SAACL,GACjB,IAAMsK,EAAeN,EAAS9H,QAAO,SAAAtH,GAAC,OAAIoF,EAAMqK,OAAM,SAAAxP,GAAC,OAAIA,EAAEc,KAAOf,EAAEe,SACtEsO,EAAYK,IAgCIhK,OAAQA,EACRd,OAAY,OAALuK,QAAK,IAALA,OAAA,EAAAA,EAAOQ,kBAAcC,EAC5BjK,QAAa,OAALwJ,QAAK,IAALA,OAAA,EAAAA,EAAOU,mBAAeD,IAElC,cAAC,EAAD,CACIpS,OAAQyR,EACRxR,SAAUA,EACVC,UAAWA,EACXE,MAAK,OAAE8H,QAAF,IAAEA,IAAU,OAGzB,sBAAKnH,UAAU,eAAf,UACI,cAAC,EAAD,CACIX,MAAO0H,EACPzC,MAAO,WAAQyM,EAAQ1O,EAAKkC,KAAMyC,GAAa,IAC/C3C,SAAU,WAAQ0M,EAAQ1O,EAAKmC,QAASwC,GAAa,MAEzD,cAAC,EAAD,CAAYtG,QAASA,EAASC,aAAa,YAC3C,cAAC,EAAD,CACIL,OAAQuQ,EACR5R,OAAM,OAAEwR,QAAF,IAAEA,OAAF,EAAEA,EAAMc,KACd/C,KAAM,SAAAgD,GAAG,OAAIV,EAAYU,YAIrC,8BACI,cAAC,EAAD,CACIlR,OAAQuQ,EACR9D,OAAQ9F,EACR+F,WAlDQ,SAACxK,GACrBwE,EAAY6J,EAAShP,WAAU,SAAAJ,GAAC,OAAIA,EAAEe,KAAOA,cCvCrD,IAYeiP,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wCCARQ,EAAQC,YAAe,CAC3BC,QAAS,CACPnS,KAAM,OACNoS,QAAS,CACPC,KAAMC,IAAK,MAEbC,UAAW,CACTF,KAAMG,IAAI,OAGdC,WAAY,CACVC,OAAQ,CACNC,WAAY,SAGhBC,UAAW,CACTC,UAAW,CACTC,SAAU,CACRC,OAAQ,4BAOhBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAACC,EAAA,EAAD,CAAelB,MAAOA,EAAtB,UACE,cAACmB,EAAA,EAAD,IACA,cAAC,EAAD,SAGJC,SAASC,eAAe,SAM1B9B,M","file":"static/js/main.cd4ff27c.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nimport './Video.css';\n\ntype VideoProps = {\n    source: string;\n    setVideo: (video: HTMLVideoElement) => void;\n    setSlider: (value: number | undefined) => void;\n    value: number;\n};\n\nexport default function Video({ source, setVideo, setSlider, value }: VideoProps) {\n\n    const videoRef = useRef<HTMLVideoElement>(null);\n\n    useEffect(() => {\n        if (videoRef.current && source) {\n            videoRef.current.src = source;\n            setVideo(videoRef.current);\n\n            const loader = () => {\n                setTimeout(() => {\n                    if (videoRef.current?.duration) {\n                        setVideoPos(1);\n                    } else loader();\n                }, 10);\n            };\n\n            loader();\n        }\n    }, [source]);\n\n    const setVideoPos = (percentage: number) => {\n        if (!videoRef.current || !source || !percentage) {\n            return;\n        }\n        // force range 0 - 100\n        const value = percentage < 1 ? 1 : percentage > 100 ? 100 : percentage;\n        videoRef.current.currentTime = value / 100 * videoRef.current.duration;\n        setSlider(value);\n    };\n\n    return (\n        <div className=\"VideoCanvas\">\n            <input className=\"slider\"\n                type=\"range\"\n                min=\"1\"\n                max=\"100\"\n                onChange={ev => { setVideoPos(+ev.target.value); }}\n            />\n            <video ref={videoRef} hidden />\n        </div>\n    );\n}\n","import React, { useRef, useEffect, useState } from 'react';\nimport { Button } from '@material-ui/core';\n\nimport './FilePicker.css';\n\ntype FilePickerProps = {\n    setFile: (f: File | null) => void,\n    accept_types?: string;\n};\n\nfunction FilePicker({ setFile, accept_types = \"\" }: FilePickerProps) {\n\n    const ref = useRef<HTMLInputElement>(null);\n\n    return (\n        <div className=\"FilePicker\">\n            <Button variant=\"contained\" color=\"primary\"\n                onClick={() => ref.current?.click()}\n            >\n                Select Video\n            </Button>\n            <input hidden\n                ref={ref}\n                type=\"file\"\n                accept={accept_types}\n                onChange={_ => setFile(ref.current?.files?.item(0) ?? null)}\n            />\n        </div>\n    );\n}\n\nexport default FilePicker;","import { Shape } from './types';\n\nexport function order(s: Shape) {\n    const X = 0;\n    const Y = 1;\n\n    let lu = [...s].sort((a, b) => a[Y] < b[Y] ? -1 : 1).slice(0, 2).sort((a, b) => a[X] < b[X] ? -1 : 1)[0];\n    let i_lu = s.findIndex(p => p === lu);\n\n    const ordered: Shape = [];\n    const nextP = s[(i_lu + 1) % s.length];\n    const prevP = s[(i_lu + s.length - 1) % s.length];\n\n    if (nextP[Y] < prevP[Y]) {\n        for (let i = 0; i < s.length; i++) {\n            const p = s[(i_lu + i) % s.length];\n            ordered.push([...p]);\n        }\n    } else {\n        for (let i = 0; i < s.length; i++) {\n            const p = s[(i_lu + s.length - i) % s.length];\n            ordered.push([...p]);\n        }\n    }\n\n    return ordered; // force copy;\n}","import { order } from './data';\nimport { dot, vecSum } from './shapes';\nimport { AreaDictionary, IIndexable, Vector, Shape } from './types';\n\nexport class Area {\n    private static counter = 0;\n\n    readonly id: number;\n    public shape: Shape;\n    public isCarWalkable = true;\n    public direction = {\n        left: true,\n        up: true,\n        right: true,\n        down: true,\n    };\n    public isParking = false;\n    public stop: string | null = null;\n    public isSelected = false;\n\n    constructor(quad?: Shape) {\n        this.id = Area.newId();\n        this.shape = quad ?? [[-1, -1], [-1, -1], [-1, -1], [-1, -1]];\n    }\n\n    static newId() {\n        return Area.counter++;\n    }\n\n    toAreaDictionary(): AreaDictionary {\n        const points = order(this.shape);\n        const dir = this.direction ?? [0, 0];\n        return {\n            id: this.id,\n            points: {\n                lu: points[0].map(x => Math.round(x)) as Vector,\n                ru: points[1].map(x => Math.round(x)) as Vector,\n                rb: points[2].map(x => Math.round(x)) as Vector,\n                lb: points[3].map(x => Math.round(x)) as Vector,\n            },\n            carWalk: this.isCarWalkable,\n            dir: this.direction,\n            parking: this.isParking,\n            stop: `${this.stop ?? \"None\"}`,\n            ref: this,\n        };\n    }\n\n    fromAreaDictionary(ad: AreaDictionary) {\n        this.shape = Object.values(ad.points);\n        this.isCarWalkable = ad.carWalk;\n        const dirs = {\n            left: [-1, 0],\n            right: [1, 0],\n            up: [0, 1],\n            down: [0, -1],\n        };\n        this.direction = ad.dir;\n\n        this.isParking = ad.parking;\n        this.stop = ad.stop;\n        ad.ref = this;\n        return this;\n    }\n}","import { Area } from \"./area\";\n\nexport type Vector = [number, number];\nexport type Shape = Vector[];\nexport enum Tool { ADD, SELECT };\n\nexport type AreaDictionary = {\n    id: number;\n    points: {\n        lu: Vector;\n        ru: Vector;\n        rb: Vector;\n        lb: Vector;\n    };\n    carWalk: boolean;\n    dir: {\n        left: boolean;\n        up: boolean;\n        right: boolean;\n        down: boolean;\n    };\n    parking: boolean;\n    stop: string;\n    changed?: boolean;\n    ref?: Area;\n};\n\nexport interface IIndexable<T = any> { [key: string]: T; }\n\nexport { Area } from \"./area\";","import React from 'react';\nimport { Tool } from '../utilities/types';\nimport { Button } from '@material-ui/core';\nimport './ToolSelector.scss';\n\ntype ToolSelectorProps = {\n    value?: Tool;\n    onSelect?: () => void;\n    onAdd?: () => void;\n};\n\nexport default function ToolSelector({ value, onSelect, onAdd }: ToolSelectorProps) {\n    return (\n        <div className=\"ToolSelector\">\n            <Button\n                variant={value === Tool.ADD ? \"contained\" : \"outlined\"}\n                color=\"secondary\"\n                onClick={onAdd}\n            >\n                ADD\n            </Button>\n\n            <Button\n                variant={value === Tool.SELECT ? \"contained\" : \"outlined\"}\n                color=\"secondary\"\n                onClick={onSelect}\n            >\n                SELECT\n            </Button>\n        </div>\n    );\n}","import { Vector, Shape } from './types';\n\nexport function findPointInShapeIndex(target: Vector, shapes: Shape[]) {\n    for (let i = 0; i < shapes.length; i++) {\n        if (isPointInShape(target, shapes[i])) return i;\n    }\n    return -1;\n}\n\nexport function isPointInShape(p: Vector, s: Shape) {\n    let res = false;\n    const X = 0;\n    const Y = 1;\n    for (let i = 0; i < s.length; i++) {\n        // https://www.eecs.umich.edu/courses/eecs380/HANDOUTS/PROJ2/InsidePoly.html\n        const edge = [s[i], s[(i + 1) % s.length]];\n        if (\n            (   // is the point in the Y range of the edge?\n                edge[0][Y] <= p[Y] && edge[1][Y] >= p[Y] ||\n                edge[1][Y] <= p[Y] && edge[0][Y] >= p[Y]\n            )\n            &&\n            (   // is our point to the left the line that our edge sits on at Y = point[Y]?\n                p[X] < (edge[0][X] - edge[1][X]) * (p[Y] - edge[1][Y]) / (edge[0][Y] - edge[1][Y]) + edge[1][X]\n            )\n        ) {\n            res = !res;\n        }\n    }\n    return res;\n}\n\nexport function distancePointToPoint(a: Vector, b: Vector) {\n    // Pitagora\n    return Math.hypot(a[0] - b[0], a[1] - b[1]);\n}\n\nfunction badProjectPointToSegment(p: Vector, l: [Vector, Vector]) {\n    // WHY DID I EVEN BOTHER WITH ALL OF THIS MATH\n    const [x, y] = [p[0], p[1]];\n    const [x1, y1] = [l[0][0], l[0][1]];\n    const [x2, y2] = [l[1][0], l[1][1]];\n\n    // find m and q of the segment line\n    const m = (y1 - y2) / (x1 - x2);\n    const q = (x1 * y2 - x2 * y1) / (x1 - x2);\n\n    // find m and q of the projection line\n    const mproj = -1 / m;\n    const qproj = y - mproj * x;\n\n    // solve the system and find the point that sits on both lines\n    const xproj = (qproj - q) / (m - mproj);\n    const yproj = m * xproj + q;\n\n    const proj = [xproj, yproj] as Vector;\n\n    if (\n        proj[0] > l[0][0] && proj[0] > l[1][0] || // too far left\n        proj[0] < l[0][0] && proj[0] < l[1][0] || // too far right\n        proj[1] > l[0][1] && proj[1] > l[1][1] || // too far up\n        proj[1] < l[0][1] && proj[1] < l[1][1]    // too far down\n    ) {\n        return null;\n    }\n    return proj;\n}\n\nexport function projectPointToSegment(p: Vector, l: [Vector, Vector]): Vector | null {\n    // WHY DO I ONLY THINK OF VECTORS IN MY FREE TIME AND NOT WHEN I'M ON THE CLOCK??????\n    const lineVec = vecSub(l[1], l[0]);\n    const lineLen = distancePointToPoint(l[0], l[1]);\n    const lineVecNormalized = vecScale(lineVec, 1 / lineLen);\n    const pointProjLen = dot(vecSub(p, l[0]), lineVecNormalized);\n    if (pointProjLen < 0 || pointProjLen > lineLen) return null; // proj outside the segment\n    const pointProj = vecSum(l[0], vecScale(lineVecNormalized, pointProjLen));\n    return pointProj;\n}\n\nexport function dot(vec1: Vector, vec2: Vector) {\n    return vec1[0] * vec2[0] + vec1[1] * vec2[1];\n}\n\nexport function vecSum(v1: Vector, v2: Vector): Vector {\n    return [v1[0] + v2[0], v1[1] + v2[1]];\n}\n\nexport function vecNegative(v: Vector): Vector {\n    return [-v[0], -v[1]];\n}\n\nexport function vecSub(v1: Vector, v2: Vector): Vector {\n    return vecSum(v1, vecNegative(v2));\n}\n\nexport function vecScale(v: Vector, n: number): Vector {\n    return [v[0] * n, v[1] * n];\n}\n\nexport function vecLen(v: Vector): number {\n    return distancePointToPoint([0, 0], v);\n}\n\nexport function vecFromCoordinateSystem(v: Vector, up: Vector, right: Vector): Vector {\n    return vecSum(vecScale(right, v[0]), vecScale(up, v[1]));\n}\n\nexport function vecToCoordinateSystem(v: Vector, up: Vector, right: Vector): Vector {\n    /* \n        x1 = rx * x + ux * y \n        y1 = ry * x + uy * y\n\n        x = (x1 - ux * y) / rx = (y1 - uy * y) / ry => \n        x1 * ry - ux * ry * y = y1 * rx - uy * rx * y =>\n        y = (x1 * ry - y1 * rx) / (ux * ry - uy * rx)\n     */\n    const y = (v[0] * right[1] - v[1] * right[0]) / (up[0] * right[1] - up[1] * right[0]);\n    const x = (v[0] - up[0] * y) / right[0];\n    return [x, y];\n}\n\nexport function vecRotate(v: Vector, upRotated: Vector): Vector {\n    const up = vecScale(upRotated, 1 / vecLen(upRotated));\n    const right = [up[1], -up[0]] as Vector;\n    return vecFromCoordinateSystem(v, up, right);\n}\n\nexport function centroidOfShape(shape: Shape) {\n    const sum = shape.reduce((res, v) => vecSum(v, res));\n    return vecScale(sum, 1 / shape.length);\n}\n\nexport function dirShapeToShape(s1: Shape, s2: Shape) {\n    const center1 = centroidOfShape(s1);\n    const center2 = centroidOfShape(s2);\n    const lineC1toC2 = vecSub(center2, center1);\n    const distance = distancePointToPoint([0, 0], lineC1toC2);\n    return vecScale(lineC1toC2, 1 / distance);\n}","import React, { useRef, useState, useEffect } from 'react';\nimport './Canvas.scss';\nimport { Area, Vector, Shape, Tool } from '../utilities/types';\nimport { distancePointToPoint, projectPointToSegment, findPointInShapeIndex, vecSum, vecScale, vecFromCoordinateSystem, isPointInShape, vecRotate, vecSub, vecToCoordinateSystem } from '../utilities/shapes';\nimport { order } from '../utilities/data';\n\nconst CANVAS_W = 1920;\nconst CANVAS_H = 1080;\nconst POINT_RADIUS = 5;\nconst SNAP_DISTANCE = 25;\nconst ARROW_SCALE = .25;\n// const ARROW_SIZE = 50;\n\nconst alpha = .25;\n\nconst style1 = {\n    width: 2,\n    stroke: `rgb(250, 50, 50)`,\n    fill: `rgba(250, 50, 50, ${alpha})`,\n    arrow: `rgba(250, 50, 50, ${alpha * 2})`,\n    selected: {\n        width: 2,\n        stroke: `rgb(255, 200, 50)`,\n        fill: `rgba(255, 200, 50, ${alpha})`,\n        arrow: `rgba(255, 200, 50, ${alpha * 2})`,\n    },\n};\n\nconst style2 = {\n    width: 2,\n    stroke: `rgb(50, 50, 250)`,\n    fill: `rgba(50, 50, 250, ${alpha})`,\n    arrow: `rgba(50, 50, 250, ${alpha * 2})`,\n    selected: {\n        width: 2,\n        stroke: `rgb(50, 250, 250)`,\n        fill: `rgba(50, 250, 250, ${alpha})`,\n        arrow: `rgba(50, 250, 250, ${alpha * 2})`,\n    },\n};\n\nexport interface CanvasProps {\n    img: CanvasImageSource | null;\n    quads: Area[];\n    newQuad: (quad: Area) => void;\n    tool: Tool;\n    setSelected: (index: number) => void;\n    updateQuads: (arr: Area[]) => void;\n    deleteQuads: (arr: Area[]) => void;\n    slider?: number;\n    width?: number;\n    height?: number;\n};\n\nexport default function Canvas({\n    img, quads, newQuad, tool, setSelected, updateQuads, deleteQuads, slider, width, height\n}: CanvasProps) {\n\n    const [points, setPoints] = useState<Shape>([]);\n    const [dragging, setDragging] = useState<boolean>(false);\n    const [oldMouse, setOldMouse] = useState<Vector | null>(null);\n    const [dragIndexes, setDragIndexes] = useState<number[] | null>(null);\n\n    const ref = useRef<HTMLCanvasElement>(null);\n    const [mouse, setMouse] = useState<{ x: number, y: number; }>({ x: 0, y: 0 });\n\n    let canvasH = CANVAS_H;\n    let canvasW = CANVAS_W;\n\n    useEffect(() => {\n        const canvas = ref.current;\n        const context = canvas?.getContext('2d');\n        if (!canvas || !context) {\n            return;\n        }\n\n        canvasH = canvas.height;\n        canvasW = canvas.width;\n\n        // Background\n        try {\n            if (!img) throw Error;\n            context.drawImage(img, 0, 0, canvas.width, canvas.height);\n        } catch (e) {\n            context.fillStyle = '#fff';\n            context.fillRect(0, 0, canvas.width, canvas.height);\n        }\n\n        let movement: Vector = [0, 0];\n        // Drag\n        if (dragging && oldMouse) {\n            movement = [mouse.x! - oldMouse[0], mouse.y! - oldMouse[1]] as Vector;\n        }\n\n        // Finished Quads\n        for (const quad of quads) {\n            let style;\n            if (quad.isCarWalkable) {\n                style = style1;\n            } else {\n                style = style2;\n            }\n            if (quad.isSelected)\n                style = style.selected;\n\n            context.lineWidth = style.width;\n            context.strokeStyle = style.stroke;\n            context.fillStyle = style.fill;\n\n            const shape = quad.isSelected\n                ? quad.shape.map((p, i) => {\n                    if (dragIndexes && dragIndexes.some(n => n === i))\n                        return snapToShapes(vecSum(p, movement), quads.filter(a => a.id !== quad.id).map(a => a.shape));\n                    else return p;\n                })\n                : quad.shape;\n\n\n            drawPath(context, shape, quad.isSelected);\n            drawArrow(context, shape, [0, 1], style.arrow);\n            if (quad.isParking) drawParking(context, shape, \"#f3f\");\n        }\n\n        if (mouse.x && mouse.y) {\n\n            // New Quad\n            if (points && tool === Tool.ADD) {\n                let close = false;\n                const pos = snapToShapes([mouse.x, mouse.y], quads.map(a => a.shape));\n                let path = [pos, ...points];\n                if (points.length === 3) {\n                    close = true;\n                }\n                context.lineWidth = style1.width;\n                context.strokeStyle = style1.stroke;\n                context.fillStyle = style1.fill;\n                drawPath(context, path, true, close);\n            }\n\n\n        }\n    }, [img, quads, tool, mouse, points, slider, width]);\n\n    const snapToShapes = (pos: Vector, shapes: Shape[]) => {\n        // give priority to points instead of edges\n        // find the closest point\n        shapes.push([[0, 0], [canvasW, 0], [canvasW, canvasH], [0, canvasH]]); // add boundaries\n        let [minDist, newPoint] = shapes.flat().reduce(([dist, point]: [number, Vector | null], p) => {\n            const d = distancePointToPoint(pos, p);\n            if (d < dist || dist === -1) return [d, p];\n            else return [dist, point];\n        }, [-1, null]);\n\n        if (newPoint && minDist < SNAP_DISTANCE) {\n            pos = newPoint;\n        } else {\n            [minDist, newPoint] = shapes.reduce(([dist, point]: [number, Vector | null], s) => {\n                // find the closest point in the edges\n                let [d, p] = s.reduce(([dist, point]: [number, Vector | null], p1, i, s) => {\n\n                    const p2 = s[(i + 1) % s.length];\n                    let proj = projectPointToSegment(pos, [p1, p2]);\n                    let d, p;\n                    // if we found a projection it is the closest point\n                    if (proj) {\n                        d = distancePointToPoint(pos, proj);\n                        p = proj;\n                        // confront it with the previous results\n                        if (d < dist || dist === -1) return [d, p];\n                    }\n                    return [dist, point];\n                }, [-1, null]);\n\n                // confront it with the previous results\n                if (p && d < dist || dist === -1) return [d, p];\n                return [dist, point];\n            }, [-1, null]);\n\n            if (newPoint && minDist < SNAP_DISTANCE) {\n                pos = newPoint;\n            }\n        }\n\n        return pos;\n    };\n\n    const addPoint = () => {\n        if (!mouse.x || !mouse.y) {\n            return;\n        }\n\n        let pos: Vector = [mouse.x, mouse.y];\n\n        pos = snapToShapes(pos, quads.map(a => a.shape));\n\n        const updatedShape = [pos, ...points];\n\n        if (updatedShape.length === 4) {\n            const newArea = new Area(order(updatedShape));\n            newArea.isSelected = true;\n            setSelected(-1);\n            newQuad(newArea);\n            setPoints([]);\n        } else {\n            setPoints(updatedShape);\n        }\n    };\n\n    const drawPath = (canvasCtx: CanvasRenderingContext2D, points: [number, number][], f_drawPoints = false, close = true) => {\n        if (points[0])\n            canvasCtx.moveTo(points[0][0], points[0][1]);\n        canvasCtx.beginPath();\n        for (const p of points) {\n            canvasCtx.lineTo(p[0], p[1]);\n        }\n\n        if (close)\n            canvasCtx.closePath();\n\n        canvasCtx.stroke();\n        canvasCtx.fill();\n\n        if (f_drawPoints) {\n            for (const p of points)\n                drawPoint(canvasCtx, p);\n        }\n    };\n\n    const drawPoint = (canvasCtx: CanvasRenderingContext2D, point: Vector) => {\n        const tmpFill = canvasCtx.fillStyle;\n        const tmpStroke = canvasCtx.strokeStyle;\n        canvasCtx.fillStyle = \"#5f5\";\n        canvasCtx.strokeStyle = \"#000\";\n        canvasCtx.beginPath();\n        canvasCtx.arc(point[0], point[1], POINT_RADIUS, 0, 2 * 3.15);\n        canvasCtx.closePath();\n        canvasCtx.fill();\n        canvasCtx.stroke();\n        canvasCtx.fillStyle = tmpFill;\n        canvasCtx.strokeStyle = tmpStroke;\n    };\n\n    const drawArrow = (canvasCtx: CanvasRenderingContext2D, quad: Vector[], dirVec: Vector, color = \"#000\") => {\n        // vector that rappresents the Y of the area's coordinate space\n        const up = vecSub(quad[3], quad[0]);\n        // vector that rappresents the X of the area's coordinate space\n        const right = vecSub(quad[1], quad[0]);\n        // vector of the diagonal in canvas' coordinates\n        const diag = vecSub(quad[2], quad[0]);\n        // vector of the diagonal in the area's coordinates\n        const diagInPerspective = vecToCoordinateSystem(diag, up, right);\n        // Since we are using the vector not normalized we are in effect mapping 0,0 to the top left,\n        //   0,1 to the bottom left, 1,0 to top right and 1,1 to the bottom right point of our area.\n        // However since the sides aren't parallel we are in effect stretching the coordinate space along\n        //   the diagonal. By diving the difference between the lenght of the projection of the diagonal\n        //   on the axis and the lenght of the \"axis\" itself in the coordinate space of the area we can \n        //   stretch the image by that amount to match have it fit and match the area's perspective.\n        // Since we are mapping the entire area in the square 0,0 - 1,1 the \"axis\" have lenght 1, \n        //   so we can subtract 1 and skip the division.\n        const ratioX = diagInPerspective[0] - 1;\n        const ratioY = diagInPerspective[1] - 1;\n\n        const lenUp = distancePointToPoint(quad[2], quad[1]) + distancePointToPoint(quad[3], quad[0]);\n        const lenRight = distancePointToPoint(quad[2], quad[3]) + distancePointToPoint(quad[1], quad[0]);\n        const ratio = lenUp / lenRight;\n\n        // arrow in 1by1 square\n        let arrow: Shape = [[-.5, -.5], [0, .5], [.5, -.5], [0, -.3]];\n        // apply rotation\n        arrow = arrow.map(v => vecRotate(v, dirVec));\n        // flip since we draw from topLeft down\n        arrow = arrow.map(v => [v[0], -v[1]]);\n        // scale down\n        arrow = arrow.map(v => vecScale(v, ARROW_SCALE));\n        // arrow = arrow.map(v => [v[0] * ARROW_SIZE * 2 / lenRight, v[1] * ARROW_SIZE * 2 / lenUp]);\n        arrow = ratio > 1\n            ? arrow.map(v => [v[0], v[1] / ratio])\n            : arrow.map(v => [v[0] * ratio, v[1]]);\n        // move between 0,0 - 1,1\n        arrow = arrow.map(v => vecSum(v, [.5, .5]));\n        // apply perspective scaling\n        arrow = arrow.map(v => {\n            return [\n                v[0] + v[0] * v[1] * ratioX,\n                v[1] + v[0] * v[1] * ratioY,\n            ] as Vector;\n        });\n        // apply coordinate stretching\n        arrow = arrow.map(v => vecFromCoordinateSystem(v, up, right));\n        // move to the area\n        arrow = arrow.map(v => vecSum(v, quad[0]));\n\n        const tmpFill = canvasCtx.fillStyle;\n        const tmpStroke = canvasCtx.strokeStyle;\n        // canvasCtx.fillStyle = \"rgba(0,0,0,0)\";\n        // canvasCtx.strokeStyle = color;\n        canvasCtx.fillStyle = color;\n\n        drawPath(canvasCtx, arrow, false, true);\n\n        canvasCtx.fillStyle = tmpFill;\n        canvasCtx.strokeStyle = tmpStroke;\n    };\n\n    const handleSelect = () => {\n        // check if we have a selected area\n        const selected = quads.find(a => a.isSelected);\n        let indexes: number[] | null = null;\n        if (selected) {\n            // check its closest points and edges to drag them\n            const points = selected.shape;\n            let distance: number;\n            indexes = [-1];\n            // find the closest point to the mouse pointer\n            [distance, indexes[0]] = points.reduce(([res_d, res_i], p, i) => {\n                const d = distancePointToPoint([mouse.x!, mouse.y!], p);\n                return d < res_d ? [d, i] : [res_d, res_i];\n            }, [999, -1]);\n            // if it's too far check if one of the edges is close enough\n            if (distance > SNAP_DISTANCE) {\n                [distance, indexes] = points.reduce(([res_d, res_is], p, i, points) => {\n                    const j = (i + 1) % points.length;\n                    const p1 = points[j];\n                    const proj = projectPointToSegment([mouse.x!, mouse.y!], [p, p1]);\n                    if (!proj) return [res_d, res_is];\n                    const dist = distancePointToPoint([mouse.x!, mouse.y!], proj);\n                    return dist < res_d ? [dist, [i, j]] : [res_d, res_is];\n                }, [999, [-1]]);\n            }\n            // if it's not check if we clicked it and drag the entire shape\n            if (distance > SNAP_DISTANCE) {\n                if (isPointInShape([mouse.x, mouse.y], selected.shape)) {\n                    indexes = [0, 1, 2, 3];\n                } else {\n                    indexes = null;\n                }\n            }\n        }\n\n        if (indexes) {\n            // update the state\n            setDragIndexes(indexes);\n            setDragging(true);\n            setOldMouse([mouse.x!, mouse.y!]);\n        } else {\n            // check if we clicked an area and select it\n            const target = findPointInShapeIndex([mouse.x, mouse.y], quads.map(a => a.shape));\n            setSelected(target);\n        }\n    };\n\n    const drawParking = (canvasCtx: CanvasRenderingContext2D, quad: Vector[], color = \"#000\") => {\n\n        if (quad.length !== 4) return;\n\n        const tmpStroke = canvasCtx.strokeStyle;\n        const tmpWidth = canvasCtx.lineWidth;\n        canvasCtx.strokeStyle = color;\n        canvasCtx.lineWidth = 3;\n\n        drawPath(canvasCtx, [quad[0], quad[2]], false, false);\n        drawPath(canvasCtx, [quad[1], quad[3]], false, false);\n\n        canvasCtx.strokeStyle = tmpStroke;\n        canvasCtx.lineWidth = tmpWidth;\n    };\n\n    const onMouseDown = () => {\n        switch (tool) {\n            case Tool.ADD:\n                addPoint();\n                break;\n            case Tool.SELECT:\n                handleSelect();\n                break;\n            default:\n                throw Error(\"No tool selected???\");\n        }\n    };\n\n    const stopDragging = () => {\n        if (dragging && oldMouse) {\n            const selectedAreas = quads.filter(a => a.isSelected);\n            const movement: Vector = [mouse.x! - oldMouse[0], mouse.y! - oldMouse[1]];\n            const updated = selectedAreas.map(a => {\n                a.shape = a.shape.map((p, i) => {\n                    if (dragIndexes && dragIndexes.some(n => n === i))\n                        return snapToShapes(vecSum(p, movement), quads.filter(b => b.id !== a.id).map(b => b.shape));\n                    else return p;\n                });\n                return a;\n            });\n            updateQuads(updated);\n            setDragging(false);\n            setDragIndexes(null);\n            setOldMouse(null);\n        }\n    };\n\n    const onMouseUp = () => {\n        stopDragging();\n    };\n\n    const onMouseLeave = () => {\n        setPoints([]);\n        if (dragging && dragIndexes?.length === 4) {\n            setDragging(false);\n            setDragIndexes(null);\n            setOldMouse(null);\n            deleteQuads(quads.filter(q => q.isSelected));\n        }\n        else {\n            stopDragging();\n        }\n    };\n    const onMouseMove = (e: React.MouseEvent) => {\n        const canvas = ref.current;\n        if (canvas) {\n            const ratio = canvas.clientWidth / canvas.width;\n            const topLeft = [canvas.offsetLeft, canvas.offsetTop];\n            setMouse({\n                x: (e.pageX - topLeft[0]) / ratio,\n                y: (e.pageY - topLeft[1]) / ratio,\n            });\n        }\n    };\n\n    return (\n        <div className=\"Canvas\">\n            <canvas\n                ref={ref}\n                onMouseDown={onMouseDown}\n                onMouseUp={onMouseUp}\n                onMouseLeave={onMouseLeave}\n                onMouseMove={e => onMouseMove(e)}\n                width={width ?? CANVAS_W}\n                height={height ?? CANVAS_H}\n            />\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Clear, Check, CheckBoxOutlined } from '@material-ui/icons';\nimport { order } from '../utilities/data';\nimport { dot, vecSum } from '../utilities/shapes';\nimport { Area, AreaDictionary, IIndexable, Vector } from '../utilities/types';\n\nimport './Inspector.scss';\n\ntype InspectorProps = {\n    target: Area[];\n    update: (updated: Area[]) => void;\n    selectById: (id: number) => void;\n};\n\nexport default function Inspector({ target, update, selectById }: InspectorProps) {\n\n    const [inspected, setInspected] = useState<AreaDictionary[]>();\n    const updateInspected = (updated: AreaDictionary, changed = true) => {\n        updated.changed = changed;\n        if (!inspected) return;\n        const unchanged = inspected?.filter(a => a.id !== updated.id);\n        setInspected([updated, ...unchanged].sort((a, b) => a.id < b.id ? -1 : 1));\n    };\n\n    useEffect(() => {\n\n        const selected = target;\n\n        // let selected: Area[] = target.filter(a => a.isSelected);\n        // if (selected.length === 0)\n        //     selected = target;\n\n        let list = selected.map(a => a.toAreaDictionary());\n\n        const pending = inspected?.filter(t => t.changed);\n        list = list.map(a => {\n            const t = pending?.find(t => t.id === a.id);\n            return t ? t : a;\n        });\n\n        list = list.sort((a, b) => a.id < b.id ? -1 : 1);\n\n        setInspected(list);\n    }, [target]);\n\n\n    function renderAD(a: AreaDictionary) {\n\n        const renderPoint = (p: Vector, key: string, ref: AreaDictionary) => {\n            return p.map((val, i) => {\n                return (\n                    <td key={`${key}${i}`}>\n                        <input\n                            type=\"number\"\n                            value={Math.round(val)}\n                            onChange={e => {\n                                (ref.points as IIndexable)[key][i] = +e.target.value;\n                                updateInspected(ref);\n                            }}\n                        />\n                    </td>\n                );\n            });\n        };\n\n        const renderedPoints = Object.entries(a.points)\n            .flatMap(([k, v]) => renderPoint(v, k, a));\n\n        const renderedDirection = Object.entries(a.dir)\n            .map(([k, v]) => {\n                return (\n                    <td key={k}>\n                        <input type=\"checkbox\"\n                            checked={v}\n                            onChange={() => {\n                                (a.dir as IIndexable)[k] = !(a.dir as IIndexable)[k];\n                                updateInspected(a);\n                            }}\n                        />\n                    </td>\n                );\n            });\n\n        return (\n            <tr key={a.id} onClick={() => selectById(a.id)} className={a.ref?.isSelected ? \"selected\" : \"\"}>\n                {renderedPoints}\n                <td key=\"iscarwalkable\">\n                    <input type=\"checkbox\"\n                        checked={a.carWalk}\n                        onChange={() => {\n                            a.carWalk = !a.carWalk;\n                            updateInspected(a);\n                        }}\n                    />\n                </td>\n                {renderedDirection}\n                <td key=\"isparking\">\n                    <input type=\"checkbox\"\n                        checked={a.parking}\n                        onChange={() => {\n                            a.parking = !a.parking;\n                            updateInspected(a);\n                        }}\n                    />\n                </td>\n                <td key=\"isstop\">\n                    <input\n                        type=\"text\"\n                        value={a.stop ?? \"None\"}\n                        onChange={e => {\n                            a.stop = e.target.value;\n                            updateInspected(a);\n                        }}\n                    />\n                </td>\n                <td className={!a.changed ? \"hide\" : \"space\"} />\n                <td key=\"update\" className={!a.changed ? \"hide\" : \"\"}>\n                    <Button variant=\"contained\" color=\"primary\"\n\n                        onClick={() => {\n                            updateInspected(a, false);\n                            update([\n                                target.find(t => t.id === a.id)!.fromAreaDictionary(a)\n                            ]);\n                        }}\n                    >\n                        <Check />\n                    </Button>\n                </td>\n                <td key=\"discard\" className={!a.changed ? \"hide\" : \"\"}>\n                    <Button variant=\"contained\" color=\"secondary\"\n                        className={!a.changed ? \"hide\" : \"\"}\n                        onClick={() => {\n                            a = target.find(t => t.id === a.id)!.toAreaDictionary();\n                            updateInspected(a, false);\n                        }}\n                    >\n                        <Clear />\n                    </Button>\n                </td>\n            </tr>\n        );\n    }\n\n    return (\n        <div className=\"Inspector\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>luX     </th>\n                        <th>luY     </th>\n                        <th>ruX     </th>\n                        <th>ruY     </th>\n                        <th>rbX     </th>\n                        <th>rbY     </th>\n                        <th>lbX     </th>\n                        <th>lbY     </th>\n                        <th>CarWalk </th>\n                        <th>Left    </th>\n                        <th>Up      </th>\n                        <th>Right   </th>\n                        <th>Down    </th>\n                        <th>Parking </th>\n                        <th>Stop    </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        inspected?.map((a) => renderAD(a))\n                    }\n                </tbody>\n            </table>\n        </div>\n    );\n\n}","import React, { useRef } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Area, AreaDictionary, Vector } from '../utilities/types';\n\nimport './IOManager.css';\n\nconst fields = [\n    \"luX\",\n    \"luY\",\n    \"ruX\",\n    \"ruY\",\n    \"rbX\",\n    \"rbY\",\n    \"lbX\",\n    \"lbY\",\n    \"CarWalk\",\n    \"Left\",\n    \"Up\",\n    \"Right\",\n    \"Down\",\n    \"Parking\",\n    \"Stop\",\n];\n\ntype IOMangerProps = {\n    target: Area[];\n    source?: string;\n    load: (arr: Area[]) => void;\n};\n\nexport function IOManager({ target, source, load }: IOMangerProps) {\n    const dlRef = useRef<HTMLAnchorElement>(null);\n    const loadRef = useRef<HTMLInputElement>(null);\n\n    const filename = source ? source.replace(\".mp4\", \"_areas.csv\") : \"areas.csv\";\n\n    const download = () => {\n        const outStr = formatData(target);\n        const blob = new Blob([outStr], { type: 'text/csv;charset=utf-8;' });\n        const dlUrl = URL.createObjectURL(blob);\n        dlRef.current?.setAttribute(\"href\", dlUrl);\n        dlRef.current?.click();\n        URL.revokeObjectURL(dlUrl);\n    };\n\n    const formatData = (target: Area[]) => {\n        const formatted = target.map(formatArea);\n        return [fields.join(',')].concat(formatted).join('\\n');\n    };\n\n    const formatArea = (area: Area) => {\n        const ad = area.toAreaDictionary();\n\n        const points = [ad.points.lu, ad.points.ru, ad.points.rb, ad.points.lb].map(p => p.join(',')).join(',');\n        const carWalk = ad.carWalk ? 1 : 0;\n        const parking = ad.parking ? 1 : 0;\n        const stop = ad.stop;\n        const direction = [ad.dir.left, ad.dir.up, ad.dir.right, ad.dir.down].map(f => f ? 1 : 0).join(',');\n\n        return [points, carWalk, direction, parking, stop].join(',');\n    };\n\n    const loader = async (f: File | null) => {\n        if (!f) {\n            console.error(\"Unable to load file!\");\n            return;\n        }\n        const csv = await f.text();\n        const rows = csv.split('\\n').filter(s => s !== \"\");\n        const strings = rows.slice(1).map(r => r.split(','));\n        const dictionaries = strings.map(r => {\n            let ad: any = { points: {}, dir: {} };\n            const vals: number[] = r.map(v => +v);\n            ad.points.lu = vals.slice(0, 2) as Vector;\n            ad.points.ru = vals.slice(2, 4) as Vector;\n            ad.points.rb = vals.slice(4, 6) as Vector;\n            ad.points.lb = vals.slice(6, 8) as Vector;\n            ad.carWalk = vals[8] > 0;\n            ad.dir.left = vals[9] > 0;\n            ad.dir.up = vals[10] > 0;\n            ad.dir.right = vals[11] > 0;\n            ad.dir.down = vals[12] > 0;\n            ad.parking = vals[13] > 0;\n            ad.stop = r[14];\n            return ad as AreaDictionary;\n        });\n        const newAreas = dictionaries.map(ad => new Area().fromAreaDictionary(ad));\n        load(newAreas);\n    };\n\n    return (\n        <div className=\"IOManager\">\n            <Button variant=\"contained\" color=\"primary\"\n                onClick={() => loadRef.current?.click()}\n            >\n                Load CSV\n            </Button>\n            <input hidden\n                type=\"file\"\n                ref={loadRef}\n                accept=\".csv\"\n                onChange={() => loader(loadRef.current?.files?.item(0) ?? null)}\n            />\n\n            <Button variant=\"contained\" color=\"primary\"\n                onClick={download}\n            >\n                Download\n            </Button>\n            <a\n                ref={dlRef}\n                download={filename}\n                hidden\n            />\n        </div >\n    );\n}","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport Video from './components/Video';\nimport FilePicker from './components/FilePicker';\nimport { Area, Vector, Shape, Tool } from './utilities/types';\nimport ToolSelector from './components/ToolSelector';\nimport Canvas from './components/Canvas';\nimport Inspector from './components/Inspector';\nimport { IOManager } from './components/IOManager';\n\n\nexport default function App() {\n\n    const [file, setFile] = useState<File | null>(null);\n    const [videoSrc, setVideoSrc] = useState<string>(\"\");\n    const [video, setVideo] = useState<HTMLVideoElement | null>(null);\n    const [slider, setSlider] = useState<number | undefined>();\n    const [quadList, setQuadList] = useState<Area[]>([]);\n    const [tool, setTool] = useState<Tool>(Tool.ADD);\n\n    useEffect(() => {\n        if (file) {\n            const source = URL.createObjectURL(file);\n            setVideoSrc(source);\n        }\n    }, [file]);\n\n    const deleteQuads = (quads: Area[]) => {\n        const filteredList = quadList.filter(a => quads.every(b => b.id !== a.id));\n        setQuadList(filteredList);\n    };\n\n    const setSelected = (index: number) => {\n        quadList.map(a => a.isSelected = false);\n        if (index >= 0 && index < quadList.length) {\n            quadList[index].isSelected = true;\n        }\n        setQuadList([...quadList]);\n    };\n\n    const setSelectedById = (id: number) => {\n        setSelected(quadList.findIndex(a => a.id === id));\n    };\n\n    const updateQuads = (quads: Area[]) => {\n        const notUpdated = quadList.filter(a => quads.every(b => b.id !== a.id));\n        setQuadList([...quads, ...notUpdated]);\n    };\n\n    return (\n        <div className=\"App\">\n            <div>\n                <div className=\"BlockCanvas\">\n                    <Canvas\n                        img={video}\n                        quads={quadList}\n                        newQuad={(quad: Area) => setQuadList([quad, ...quadList])}\n                        tool={tool}\n                        setSelected={setSelected}\n                        updateQuads={updateQuads}\n                        deleteQuads={deleteQuads}\n                        slider={slider}\n                        width={video?.videoWidth || undefined}\n                        height={video?.videoHeight || undefined}\n                    />\n                    <Video\n                        source={videoSrc}\n                        setVideo={setVideo}\n                        setSlider={setSlider}\n                        value={slider ?? 0}\n                    />\n                </div>\n                <div className=\"BlockButtons\">\n                    <ToolSelector\n                        value={tool}\n                        onAdd={() => { setTool(Tool.ADD); setSelected(-1); }}\n                        onSelect={() => { setTool(Tool.SELECT); setSelected(-1); }}\n                    />\n                    <FilePicker setFile={setFile} accept_types=\"video/*\" />\n                    <IOManager\n                        target={quadList}\n                        source={file?.name}\n                        load={arr => setQuadList(arr)}\n                    />\n                </div>\n            </div>\n            <div>\n                <Inspector\n                    target={quadList}\n                    update={updateQuads}\n                    selectById={setSelectedById}\n                />\n            </div>\n        </div>\n    );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { blue, red } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: blue[400],\n    },\n    secondary: {\n      main: red[400],\n    },\n  },\n  typography: {\n    button: {\n      fontWeight: \"bold\",\n    },\n  },\n  overrides: {\n    MuiButton: {\n      outlined: {\n        border: \"2px solid !important\",\n      }\n    }\n  }\n\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}